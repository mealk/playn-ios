//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/gl/GL20Context.java
//
//  Created by Thomas on 7/1/13.
//

@class PlaynCoreGlGLContext_FilterEnum;
@class PlaynCoreGlGLShader;
@class PlaynCoreGlGroupLayerGL;
@protocol PlaynCoreGlGL20;
@protocol PlaynCoreGlGLBuffer_Float;
@protocol PlaynCoreGlGLBuffer_Short;
@protocol PlaynCoreGlGLProgram;
@protocol PlaynCoreImage;
@protocol PlaynCoreInternalTransform;
@protocol PlaynCorePlatform;

#import "JreEmulation.h"
#import "GLContext.h"

@interface PlaynCoreGlGL20Context : PlaynCoreGlGLContext {
 @public
  id<PlaynCoreGlGL20> gl_;
  BOOL checkErrors_;
  id<PlaynCoreInternalTransform> rootXform_;
  int minFilter_, magFilter_;
  PlaynCoreGlGLShader *quadShader__, *trisShader__;
}

@property (nonatomic, retain) id<PlaynCoreGlGL20> gl;
@property (nonatomic, assign) BOOL checkErrors;
@property (nonatomic, retain) id<PlaynCoreInternalTransform> rootXform;
@property (nonatomic, assign) int minFilter;
@property (nonatomic, assign) int magFilter;
@property (nonatomic, retain) PlaynCoreGlGLShader *quadShader_;
@property (nonatomic, retain) PlaynCoreGlGLShader *trisShader_;

- (id)initWithPlaynCorePlatform:(id<PlaynCorePlatform>)platform
            withPlaynCoreGlGL20:(id<PlaynCoreGlGL20>)gl
                      withFloat:(float)scaleFactor
                       withBOOL:(BOOL)checkErrors;
- (void)init__ OBJC_METHOD_FAMILY_NONE;
- (void)paintWithPlaynCoreGlGroupLayerGL:(PlaynCoreGlGroupLayerGL *)rootLayer;
- (id<PlaynCoreInternalTransform>)rootTransform;
- (void)setTextureFilterWithPlaynCoreGlGLContext_FilterEnum:(PlaynCoreGlGLContext_FilterEnum *)minFilter
                        withPlaynCoreGlGLContext_FilterEnum:(PlaynCoreGlGLContext_FilterEnum *)magFilter;
- (int)getIntegerWithInt:(int)param;
- (float)getFloatWithInt:(int)param;
- (BOOL)getBooleanWithInt:(int)param;
- (void)texImage2DWithPlaynCoreImage:(id<PlaynCoreImage>)image
                             withInt:(int)target
                             withInt:(int)level
                             withInt:(int)internalformat
                             withInt:(int)format
                             withInt:(int)type;
- (void)texSubImage2DWithPlaynCoreImage:(id<PlaynCoreImage>)image
                                withInt:(int)target
                                withInt:(int)level
                                withInt:(int)xOffset
                                withInt:(int)yOffset
                                withInt:(int)format
                                withInt:(int)type;
- (id<PlaynCoreGlGLProgram>)createProgramWithNSString:(NSString *)vertShader
                                         withNSString:(NSString *)fragShader;
- (id<PlaynCoreGlGLBuffer_Float>)createFloatBufferWithInt:(int)capacity;
- (id<PlaynCoreGlGLBuffer_Short>)createShortBufferWithInt:(int)capacity;
- (void)deleteFramebufferWithInt:(int)fbuf;
- (int)createTextureWithBOOL:(BOOL)repeatX
                    withBOOL:(BOOL)repeatY
                    withBOOL:(BOOL)mipmaps;
- (int)createTextureWithInt:(int)width
                    withInt:(int)height
                   withBOOL:(BOOL)repeatX
                   withBOOL:(BOOL)repeatY
                   withBOOL:(BOOL)mm;
- (void)generateMipmapWithInt:(int)tex;
- (void)activeTextureWithInt:(int)glTextureN;
- (void)bindTextureWithInt:(int)tex;
- (void)destroyTextureWithInt:(int)tex;
- (void)startClippedWithInt:(int)x
                    withInt:(int)y
                    withInt:(int)width
                    withInt:(int)height;
- (void)endClipped;
- (void)clearWithFloat:(float)r
             withFloat:(float)g
             withFloat:(float)b
             withFloat:(float)a;
- (void)checkGLErrorWithNSString:(NSString *)op;
- (int)defaultFrameBuffer;
- (int)createFramebufferImplWithInt:(int)tex;
- (void)bindFramebufferImplWithInt:(int)fbuf
                           withInt:(int)width
                           withInt:(int)height;
- (PlaynCoreGlGLShader *)quadShader;
- (PlaynCoreGlGLShader *)trisShader;
+ (int)toGLWithPlaynCoreGlGLContext_FilterEnum:(PlaynCoreGlGLContext_FilterEnum *)filter;
+ (int)mipmapifyWithInt:(int)filter
               withBOOL:(BOOL)mipmaps;
@end
