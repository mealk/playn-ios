//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/PointerImpl.java
//
//  Created by Thomas on 7/1/13.
//

#import "AbstractLayer.h"
#import "Dispatcher.h"
#import "Events.h"
#import "Graphics.h"
#import "GroupLayer.h"
#import "Layer.h"
#import "PlayN.h"
#import "Point.h"
#import "Pointer.h"
#import "Transform.h"
#import "PointerImpl.h"

@implementation PlaynCorePointerImpl

@synthesize enabled = enabled_;
- (id<PlaynCoreDispatcher>)dispatcher {
  return dispatcher_;
}
- (void)setDispatcher:(id<PlaynCoreDispatcher>)dispatcher {
  JreOperatorRetainedAssign(&dispatcher_, self, dispatcher);
}
@synthesize dispatcher = dispatcher_;
- (id<PlaynCorePointer_Listener>)listener_ {
  return listener__;
}
- (void)setListener_:(id<PlaynCorePointer_Listener>)listener_ {
  JreOperatorRetainedAssign(&listener__, self, listener_);
}
@synthesize listener_ = listener__;
- (PlaynCoreAbstractLayer *)activeLayer {
  return activeLayer_;
}
- (void)setActiveLayer:(PlaynCoreAbstractLayer *)activeLayer {
  JreOperatorRetainedAssign(&activeLayer_, self, activeLayer);
}
@synthesize activeLayer = activeLayer_;
- (id<PlaynCoreAbstractLayer_Interaction>)START {
  return START_;
}
- (void)setSTART:(id<PlaynCoreAbstractLayer_Interaction>)START {
  JreOperatorRetainedAssign(&START_, self, START);
}
@synthesize START = START_;
- (id<PlaynCoreAbstractLayer_Interaction>)DRAG {
  return DRAG_;
}
- (void)setDRAG:(id<PlaynCoreAbstractLayer_Interaction>)DRAG {
  JreOperatorRetainedAssign(&DRAG_, self, DRAG);
}
@synthesize DRAG = DRAG_;
- (id<PlaynCoreAbstractLayer_Interaction>)END {
  return END_;
}
- (void)setEND:(id<PlaynCoreAbstractLayer_Interaction>)END {
  JreOperatorRetainedAssign(&END_, self, END);
}
@synthesize END = END_;
- (id<PlaynCoreAbstractLayer_Interaction>)CANCEL {
  return CANCEL_;
}
- (void)setCANCEL:(id<PlaynCoreAbstractLayer_Interaction>)CANCEL {
  JreOperatorRetainedAssign(&CANCEL_, self, CANCEL);
}
@synthesize CANCEL = CANCEL_;

- (BOOL)isEnabled {
  return enabled_;
}

- (void)setEnabledWithBOOL:(BOOL)enabled {
  self.enabled = enabled;
}

- (id<PlaynCorePointer_Listener>)listener {
  return listener__;
}

- (void)setListenerWithPlaynCorePointer_Listener:(id<PlaynCorePointer_Listener>)listener {
  self.listener_ = listener;
}

- (void)cancelLayerDrags {
  if (activeLayer_ != nil) {
    PlaynCorePointer_Event_Impl *event = [[[PlaynCorePointer_Event_Impl alloc] initWithPlaynCoreEvents_Flags:[[[PlaynCoreEvents_Flags_Impl alloc] init] autorelease] withDouble:[PlaynCorePlayN currentTime] withFloat:0 withFloat:0 withBOOL:NO] autorelease];
    [((id<PlaynCoreDispatcher>) NIL_CHK(dispatcher_)) dispatchWithPlaynCoreAbstractLayer:activeLayer_ withIOSClass:[IOSClass classWithProtocol:@protocol(PlaynCorePointer_Listener)] withId:event withPlaynCoreAbstractLayer_Interaction:CANCEL_];
    JreOperatorRetainedAssign(&activeLayer_, self, nil);
  }
}

- (void)setPropagateEventsWithBOOL:(BOOL)propagate {
  JreOperatorRetainedAssign(&dispatcher_, self, [PlaynCoreDispatcher_Util selectWithBOOL:propagate]);
}

- (BOOL)onPointerStartWithPlaynCorePointer_Event_Impl:(PlaynCorePointer_Event_Impl *)event
                                             withBOOL:(BOOL)preventDefault {
  if (!enabled_) return preventDefault;
  [((id<PlaynCoreEvents_Flags>) [((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) flags]) setPreventDefaultWithBOOL:preventDefault];
  if (listener__ != nil) {
    [listener__ onPointerStartWithPlaynCorePointer_Event:event];
  }
  id<PlaynCoreGroupLayer> root = [((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) rootLayer];
  if ([((id<PlaynCoreGroupLayer>) NIL_CHK(root)) interactive]) {
    PythagorasFPoint *p = [[[PythagorasFPoint alloc] initWithFloat:[((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) x] withFloat:[((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) y]] autorelease];
    (void) [((id<PythagorasFTransform>) [((id<PlaynCoreGroupLayer>) NIL_CHK(root)) transform]) inverseTransformWithPythagorasFIPoint:p withPythagorasFPoint:p];
    ((PythagorasFPoint *) NIL_CHK(p)).x_ += [((id<PlaynCoreGroupLayer>) NIL_CHK(root)) originX];
    ((PythagorasFPoint *) NIL_CHK(p)).y_ += [((id<PlaynCoreGroupLayer>) NIL_CHK(root)) originY];
    JreOperatorRetainedAssign(&activeLayer_, self, (PlaynCoreAbstractLayer *) [((id<PlaynCoreGroupLayer>) NIL_CHK(root)) hitTestWithPythagorasFPoint:p]);
    if (activeLayer_ != nil) {
      [((id<PlaynCoreDispatcher>) NIL_CHK(dispatcher_)) dispatchWithPlaynCoreAbstractLayer:activeLayer_ withIOSClass:[IOSClass classWithProtocol:@protocol(PlaynCorePointer_Listener)] withId:event withPlaynCoreAbstractLayer_Interaction:START_];
    }
  }
  return [((id<PlaynCoreEvents_Flags>) [((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) flags]) getPreventDefault];
}

- (BOOL)onPointerDragWithPlaynCorePointer_Event_Impl:(PlaynCorePointer_Event_Impl *)event
                                            withBOOL:(BOOL)preventDefault {
  if (!enabled_) return preventDefault;
  [((id<PlaynCoreEvents_Flags>) [((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) flags]) setPreventDefaultWithBOOL:preventDefault];
  if (listener__ != nil) {
    [listener__ onPointerDragWithPlaynCorePointer_Event:event];
  }
  if (activeLayer_ != nil) {
    [((id<PlaynCoreDispatcher>) NIL_CHK(dispatcher_)) dispatchWithPlaynCoreAbstractLayer:activeLayer_ withIOSClass:[IOSClass classWithProtocol:@protocol(PlaynCorePointer_Listener)] withId:event withPlaynCoreAbstractLayer_Interaction:DRAG_];
  }
  return [((id<PlaynCoreEvents_Flags>) [((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) flags]) getPreventDefault];
}

- (BOOL)onPointerEndWithPlaynCorePointer_Event_Impl:(PlaynCorePointer_Event_Impl *)event
                                           withBOOL:(BOOL)preventDefault {
  if (!enabled_) return preventDefault;
  [((id<PlaynCoreEvents_Flags>) [((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) flags]) setPreventDefaultWithBOOL:preventDefault];
  if (listener__ != nil) {
    [listener__ onPointerEndWithPlaynCorePointer_Event:event];
  }
  if (activeLayer_ != nil) {
    [((id<PlaynCoreDispatcher>) NIL_CHK(dispatcher_)) dispatchWithPlaynCoreAbstractLayer:activeLayer_ withIOSClass:[IOSClass classWithProtocol:@protocol(PlaynCorePointer_Listener)] withId:event withPlaynCoreAbstractLayer_Interaction:END_];
    JreOperatorRetainedAssign(&activeLayer_, self, nil);
  }
  return [((id<PlaynCoreEvents_Flags>) [((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) flags]) getPreventDefault];
}

- (BOOL)onPointerCancelWithPlaynCorePointer_Event_Impl:(PlaynCorePointer_Event_Impl *)event
                                              withBOOL:(BOOL)preventDefault {
  if (!enabled_) return preventDefault;
  [((id<PlaynCoreEvents_Flags>) [((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) flags]) setPreventDefaultWithBOOL:preventDefault];
  if (listener__ != nil) {
    [listener__ onPointerCancelWithPlaynCorePointer_Event:event];
  }
  if (activeLayer_ != nil) {
    [((id<PlaynCoreDispatcher>) NIL_CHK(dispatcher_)) dispatchWithPlaynCoreAbstractLayer:activeLayer_ withIOSClass:[IOSClass classWithProtocol:@protocol(PlaynCorePointer_Listener)] withId:event withPlaynCoreAbstractLayer_Interaction:CANCEL_];
    JreOperatorRetainedAssign(&activeLayer_, self, nil);
  }
  return [((id<PlaynCoreEvents_Flags>) [((PlaynCorePointer_Event_Impl *) NIL_CHK(event)) flags]) getPreventDefault];
}

- (id)init {
  if ((self = [super init])) {
    enabled_ = YES;
    JreOperatorRetainedAssign(&dispatcher_, self, [PlaynCoreDispatcher SINGLE]);
    JreOperatorRetainedAssign(&START_, self, [[[PlaynCorePointerImpl_$1 alloc] init] autorelease]);
    JreOperatorRetainedAssign(&DRAG_, self, [[[PlaynCorePointerImpl_$2 alloc] init] autorelease]);
    JreOperatorRetainedAssign(&END_, self, [[[PlaynCorePointerImpl_$3 alloc] init] autorelease]);
    JreOperatorRetainedAssign(&CANCEL_, self, [[[PlaynCorePointerImpl_$4 alloc] init] autorelease]);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&CANCEL_, self, nil);
  JreOperatorRetainedAssign(&END_, self, nil);
  JreOperatorRetainedAssign(&DRAG_, self, nil);
  JreOperatorRetainedAssign(&START_, self, nil);
  JreOperatorRetainedAssign(&activeLayer_, self, nil);
  JreOperatorRetainedAssign(&listener__, self, nil);
  JreOperatorRetainedAssign(&dispatcher_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynCorePointerImpl *typedCopy = (PlaynCorePointerImpl *) copy;
  typedCopy.enabled = enabled_;
  typedCopy.dispatcher = dispatcher_;
  typedCopy.listener_ = listener__;
  typedCopy.activeLayer = activeLayer_;
  typedCopy.START = START_;
  typedCopy.DRAG = DRAG_;
  typedCopy.END = END_;
  typedCopy.CANCEL = CANCEL_;
}

@end
@implementation PlaynCorePointerImpl_$1

- (void)interactWithId:(id<PlaynCorePointer_Listener>)l
                withId:(PlaynCorePointer_Event_Impl *)ev {
  [((id<PlaynCorePointer_Listener>) NIL_CHK(l)) onPointerStartWithPlaynCorePointer_Event:ev];
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
@implementation PlaynCorePointerImpl_$2

- (void)interactWithId:(id<PlaynCorePointer_Listener>)l
                withId:(PlaynCorePointer_Event_Impl *)ev {
  [((id<PlaynCorePointer_Listener>) NIL_CHK(l)) onPointerDragWithPlaynCorePointer_Event:ev];
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
@implementation PlaynCorePointerImpl_$3

- (void)interactWithId:(id<PlaynCorePointer_Listener>)l
                withId:(PlaynCorePointer_Event_Impl *)ev {
  [((id<PlaynCorePointer_Listener>) NIL_CHK(l)) onPointerEndWithPlaynCorePointer_Event:ev];
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
@implementation PlaynCorePointerImpl_$4

- (void)interactWithId:(id<PlaynCorePointer_Listener>)l
                withId:(PlaynCorePointer_Event_Impl *)ev {
  [((id<PlaynCorePointer_Listener>) NIL_CHK(l)) onPointerCancelWithPlaynCorePointer_Event:ev];
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
