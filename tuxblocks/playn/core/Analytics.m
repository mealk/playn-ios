//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/Analytics.java
//
//  Created by Thomas on 7/1/13.
//

#import "Log.h"
#import "PlayN.h"
#import "Analytics.h"

@implementation PlaynCoreAnalytics_Category

@synthesize sampleRate = sampleRate_;
- (NSString *)category {
  return category_;
}
- (void)setCategory:(NSString *)category {
  JreOperatorRetainedAssign(&category_, self, category);
}
@synthesize category = category_;

- (id)initWithFloat:(float)sampleRate
       withNSString:(NSString *)category {
  if ((self = [super init])) {
    self.sampleRate = sampleRate;
    self.category = category;
  }
  return self;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"%@[rate=%f]", [self getCategory], [self getSampleRate]];
}

- (float)getSampleRate {
  return sampleRate_;
}

- (NSString *)getCategory {
  return category_;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&category_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynCoreAnalytics_Category *typedCopy = (PlaynCoreAnalytics_Category *) copy;
  typedCopy.sampleRate = sampleRate_;
  typedCopy.category = category_;
}

@end
@implementation PlaynCoreAnalytics_AnalyticsImpl

- (void)logEventWithPlaynCoreAnalytics_Category:(PlaynCoreAnalytics_Category *)category
                                   withNSString:(NSString *)action {
  [((id<PlaynCoreLog>) [PlaynCorePlayN log]) debugWithNSString:[NSString stringWithFormat:@"Analytics#logEvent(category=%@, action=%@)", category, action]];
}

- (void)logEventWithPlaynCoreAnalytics_Category:(PlaynCoreAnalytics_Category *)category
                                   withNSString:(NSString *)action
                                   withNSString:(NSString *)label
                                        withInt:(int)value {
  [((id<PlaynCoreLog>) [PlaynCorePlayN log]) debugWithNSString:[NSString stringWithFormat:@"Analytics#logEvent(category=%@, action=%@, label=%@, value=%d)", category, action, label, value]];
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
