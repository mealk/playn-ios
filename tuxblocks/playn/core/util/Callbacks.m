//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/util/Callbacks.java
//
//  Created by Thomas on 7/1/13.
//

#import "Callback.h"
#import "java/lang/Throwable.h"
#import "java/util/ArrayList.h"
#import "java/util/List.h"
#import "Callbacks.h"

@implementation PlaynCoreUtilCallbacks

+ (id<JavaUtilList>)createAddWithJavaUtilList:(id<JavaUtilList>)list
                    withPlaynCoreUtilCallback:(id<PlaynCoreUtilCallback>)callback {
  if (list == nil) list = [[[JavaUtilArrayList alloc] init] autorelease];
  [((id<JavaUtilList>) NIL_CHK(list)) addWithId:callback];
  return list;
}

+ (id<JavaUtilList>)dispatchSuccessClearWithJavaUtilList:(id<JavaUtilList>)list
                                                  withId:(id)result {
  if (list != nil) {
    for (int ii = 0, ll = [list size]; ii < ll; ii++) [((id<PlaynCoreUtilCallback>) ((id<PlaynCoreUtilCallback>) [list getWithInt:ii])) onSuccessWithId:result];
  }
  return nil;
}

+ (id<JavaUtilList>)dispatchFailureClearWithJavaUtilList:(id<JavaUtilList>)list
                                   withJavaLangThrowable:(JavaLangThrowable *)cause {
  if (list != nil) {
    for (int ii = 0, ll = [list size]; ii < ll; ii++) [((id<PlaynCoreUtilCallback>) ((id<PlaynCoreUtilCallback>) [list getWithInt:ii])) onFailureWithJavaLangThrowable:cause];
  }
  return nil;
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
