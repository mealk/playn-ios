//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/canvas/GraphicsCanvas.java
//
//  Created by Thomas on 7/1/13.
//

#import "Canvas.h"
#import "CanvasImage.h"
#import "Font.h"
#import "GL20.h"
#import "GLContext.h"
#import "Gradient.h"
#import "Graphics.h"
#import "GroupLayer.h"
#import "GroupLayerCanvas.h"
#import "IOSFloatArray.h"
#import "IOSIntArray.h"
#import "Image.h"
#import "ImageLayer.h"
#import "ImageLayerCanvas.h"
#import "ImmediateLayer.h"
#import "ImmediateLayerCanvas.h"
#import "InternalTransform.h"
#import "Scale.h"
#import "SurfaceImage.h"
#import "SurfaceLayer.h"
#import "SurfaceLayerCanvas.h"
#import "TextFormat.h"
#import "TextLayout.h"
#import "GraphicsCanvas.h"

@implementation PlaynCoreCanvasGraphicsCanvas

- (PlaynCoreGlScale *)scale_ {
  return scale__;
}
- (void)setScale_:(PlaynCoreGlScale *)scale_ {
  JreOperatorRetainedAssign(&scale__, self, scale_);
}
@synthesize scale_ = scale__;
- (PlaynCoreCanvasGroupLayerCanvas *)rootLayer_ {
  return rootLayer__;
}
- (void)setRootLayer_:(PlaynCoreCanvasGroupLayerCanvas *)rootLayer_ {
  JreOperatorRetainedAssign(&rootLayer__, self, rootLayer_);
}
@synthesize rootLayer_ = rootLayer__;

- (id)initWithPlaynCoreGlScale:(PlaynCoreGlScale *)scale_ {
  if ((self = [super init])) {
    self.scale_ = scale_;
    self.rootLayer_ = [[[PlaynCoreCanvasGroupLayerCanvas alloc] initWithPlaynCoreInternalTransform:[self createXform]] autorelease];
  }
  return self;
}

- (PlaynCoreGlScale *)scale__ {
  return scale__;
}

- (void)paintWithPlaynCoreCanvas:(id<PlaynCoreCanvas>)canvas {
  (void) [((id<PlaynCoreCanvas>) NIL_CHK(canvas)) clear];
  [((PlaynCoreCanvasGroupLayerCanvas *) NIL_CHK(rootLayer__)) paintWithPlaynCoreCanvas:canvas withFloat:1];
}

- (id<PlaynCoreGroupLayer>)rootLayer {
  return rootLayer__;
}

- (id<PlaynCoreGroupLayer>)createGroupLayer {
  return [[[PlaynCoreCanvasGroupLayerCanvas alloc] initWithPlaynCoreInternalTransform:[self createXform]] autorelease];
}

- (id<PlaynCoreGroupLayer_Clipped>)createGroupLayerWithFloat:(float)width
                                                   withFloat:(float)height {
  return [[[PlaynCoreCanvasGroupLayerCanvas_Clipped alloc] initWithPlaynCoreInternalTransform:[self createXform] withFloat:width withFloat:height] autorelease];
}

- (id<PlaynCoreImageLayer>)createImageLayer {
  return [[[PlaynCoreCanvasImageLayerCanvas alloc] initWithPlaynCoreInternalTransform:[self createXform]] autorelease];
}

- (id<PlaynCoreImageLayer>)createImageLayerWithPlaynCoreImage:(id<PlaynCoreImage>)img {
  return [((id<PlaynCoreImageLayer>) [self createImageLayer]) setImageWithPlaynCoreImage:img];
}

- (id<PlaynCoreSurfaceLayer>)createSurfaceLayerWithFloat:(float)width
                                               withFloat:(float)height {
  return [[[PlaynCoreCanvasSurfaceLayerCanvas alloc] initWithPlaynCoreInternalTransform:[self createXform] withPlaynCoreCanvasImage:[self createImageWithFloat:width withFloat:height]] autorelease];
}

- (id<PlaynCoreImmediateLayer_Clipped>)createImmediateLayerWithInt:(int)width
                                                           withInt:(int)height
                              withPlaynCoreImmediateLayer_Renderer:(id<PlaynCoreImmediateLayer_Renderer>)renderer {
  return [[[PlaynCoreCanvasImmediateLayerCanvas_Clipped alloc] initWithPlaynCoreInternalTransform:[self createXform] withInt:width withInt:height withPlaynCoreImmediateLayer_Renderer:renderer] autorelease];
}

- (id<PlaynCoreImmediateLayer>)createImmediateLayerWithPlaynCoreImmediateLayer_Renderer:(id<PlaynCoreImmediateLayer_Renderer>)renderer {
  return [[[PlaynCoreCanvasImmediateLayerCanvas alloc] initWithPlaynCoreInternalTransform:[self createXform] withPlaynCoreImmediateLayer_Renderer:renderer] autorelease];
}

- (id<PlaynCoreCanvas>)createCanvasWithPlaynCoreGlScale:(PlaynCoreGlScale *)scale_
                                              withFloat:(float)width
                                              withFloat:(float)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreInternalTransform>)createXform {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreFont>)createFontWithNSString:(NSString *)param0
                withPlaynCoreFont_StyleEnum:(PlaynCoreFont_StyleEnum *)param1
                                  withFloat:(float)param2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreCanvasImage>)createImageWithFloat:(float)param0
                                       withFloat:(float)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreGradient>)createLinearGradientWithFloat:(float)param0
                                             withFloat:(float)param1
                                             withFloat:(float)param2
                                             withFloat:(float)param3
                              withJavaLangIntegerArray:(IOSIntArray *)param4
                                withJavaLangFloatArray:(IOSFloatArray *)param5 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreGradient>)createRadialGradientWithFloat:(float)param0
                                             withFloat:(float)param1
                                             withFloat:(float)param2
                              withJavaLangIntegerArray:(IOSIntArray *)param3
                                withJavaLangFloatArray:(IOSFloatArray *)param4 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreSurfaceImage>)createSurfaceWithFloat:(float)param0
                                          withFloat:(float)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (PlaynCoreGlGLContext *)ctx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreGlGL20>)gl20 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreTextLayout>)layoutTextWithNSString:(NSString *)param0
                          withPlaynCoreTextFormat:(PlaynCoreTextFormat *)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (float)scaleFactor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)screenHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)screenWidth {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)width {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&rootLayer__, self, nil);
  JreOperatorRetainedAssign(&scale__, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynCoreCanvasGraphicsCanvas *typedCopy = (PlaynCoreCanvasGraphicsCanvas *) copy;
  typedCopy.scale_ = scale__;
  typedCopy.rootLayer_ = rootLayer__;
}

@end
