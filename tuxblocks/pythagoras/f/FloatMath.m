//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/f/FloatMath.java
//
//  Created by Thomas on 7/1/13.
//

#import "java/lang/Math.h"
#import "FloatMath.h"

@implementation PythagorasFFloatMath

+ (float)PI {
  return PythagorasFFloatMath_PI;
}

+ (float)E {
  return PythagorasFFloatMath_E;
}

+ (float)sinWithFloat:(float)a {
  return (float) [JavaLangMath sinWithDouble:a];
}

+ (float)cosWithFloat:(float)a {
  return (float) [JavaLangMath cosWithDouble:a];
}

+ (float)tanWithFloat:(float)a {
  return (float) [JavaLangMath tanWithDouble:a];
}

+ (float)asinWithFloat:(float)a {
  return (float) [JavaLangMath asinWithDouble:a];
}

+ (float)acosWithFloat:(float)a {
  return (float) [JavaLangMath acosWithDouble:a];
}

+ (float)atanWithFloat:(float)a {
  return (float) [JavaLangMath atanWithDouble:a];
}

+ (float)atan2WithFloat:(float)y
              withFloat:(float)x {
  return (float) [JavaLangMath atan2WithDouble:y withDouble:x];
}

+ (float)toDegreesWithFloat:(float)a {
  return a * (180.0f / PythagorasFFloatMath_PI);
}

+ (float)toRadiansWithFloat:(float)a {
  return a * (PythagorasFFloatMath_PI / 180.0f);
}

+ (float)sqrtWithFloat:(float)v {
  return (float) [JavaLangMath sqrtWithDouble:v];
}

+ (float)cbrtWithFloat:(float)v {
  return (float) [JavaLangMath cbrtWithDouble:v];
}

+ (float)hypotWithFloat:(float)x
              withFloat:(float)y {
  return (float) [JavaLangMath hypotWithDouble:x withDouble:y];
}

+ (float)expWithFloat:(float)v {
  return (float) [JavaLangMath expWithDouble:v];
}

+ (float)logWithFloat:(float)v {
  return (float) [JavaLangMath logWithDouble:v];
}

+ (float)log10WithFloat:(float)v {
  return (float) [JavaLangMath log10WithDouble:v];
}

+ (float)powWithFloat:(float)v
            withFloat:(float)e {
  return (float) [JavaLangMath powWithDouble:v withDouble:e];
}

+ (float)floorWithFloat:(float)v {
  return (float) [JavaLangMath floorWithDouble:v];
}

+ (float)ceilWithFloat:(float)v {
  return (float) [JavaLangMath ceilWithDouble:v];
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
