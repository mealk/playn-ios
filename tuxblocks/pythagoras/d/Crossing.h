//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/d/Crossing.java
//
//  Created by Thomas on 7/1/13.
//

@class IOSDoubleArray;
@protocol PythagorasDIShape;
@protocol PythagorasDPathIterator;

#import "JreEmulation.h"

#define PythagorasDCrossing_CROSSING 255
#define PythagorasDCrossing_DELTA 9.999999747378752E-6
#define PythagorasDCrossing_ROOT_DELTA 1.000000013351432E-10
#define PythagorasDCrossing_UNKNOWN 254

@interface PythagorasDCrossing : NSObject {
}

+ (int)CROSSING;
+ (int)UNKNOWN;
+ (double)DELTA;
+ (double)ROOT_DELTA;
+ (int)solveQuadWithJavaLangDoubleArray:(IOSDoubleArray *)eqn
                withJavaLangDoubleArray:(IOSDoubleArray *)res;
+ (int)solveCubicWithJavaLangDoubleArray:(IOSDoubleArray *)eqn
                 withJavaLangDoubleArray:(IOSDoubleArray *)res;
+ (int)fixRootsWithJavaLangDoubleArray:(IOSDoubleArray *)res
                               withInt:(int)rc;
+ (int)crossLineWithDouble:(double)x1
                withDouble:(double)y1
                withDouble:(double)x2
                withDouble:(double)y2
                withDouble:(double)x
                withDouble:(double)y;
+ (int)crossQuadWithDouble:(double)x1
                withDouble:(double)y1
                withDouble:(double)cx
                withDouble:(double)cy
                withDouble:(double)x2
                withDouble:(double)y2
                withDouble:(double)x
                withDouble:(double)y;
+ (int)crossCubicWithDouble:(double)x1
                 withDouble:(double)y1
                 withDouble:(double)cx1
                 withDouble:(double)cy1
                 withDouble:(double)cx2
                 withDouble:(double)cy2
                 withDouble:(double)x2
                 withDouble:(double)y2
                 withDouble:(double)x
                 withDouble:(double)y;
+ (int)crossPathWithPythagorasDPathIterator:(id<PythagorasDPathIterator>)p
                                 withDouble:(double)x
                                 withDouble:(double)y;
+ (int)crossShapeWithPythagorasDIShape:(id<PythagorasDIShape>)s
                            withDouble:(double)x
                            withDouble:(double)y;
+ (BOOL)isZeroWithDouble:(double)val;
+ (int)intersectLineWithDouble:(double)x1
                    withDouble:(double)y1
                    withDouble:(double)x2
                    withDouble:(double)y2
                    withDouble:(double)rx1
                    withDouble:(double)ry1
                    withDouble:(double)rx2
                    withDouble:(double)ry2;
+ (int)intersectQuadWithDouble:(double)x1
                    withDouble:(double)y1
                    withDouble:(double)cx
                    withDouble:(double)cy
                    withDouble:(double)x2
                    withDouble:(double)y2
                    withDouble:(double)rx1
                    withDouble:(double)ry1
                    withDouble:(double)rx2
                    withDouble:(double)ry2;
+ (int)intersectCubicWithDouble:(double)x1
                     withDouble:(double)y1
                     withDouble:(double)cx1
                     withDouble:(double)cy1
                     withDouble:(double)cx2
                     withDouble:(double)cy2
                     withDouble:(double)x2
                     withDouble:(double)y2
                     withDouble:(double)rx1
                     withDouble:(double)ry1
                     withDouble:(double)rx2
                     withDouble:(double)ry2;
+ (int)intersectPathWithPythagorasDPathIterator:(id<PythagorasDPathIterator>)p
                                     withDouble:(double)x
                                     withDouble:(double)y
                                     withDouble:(double)w
                                     withDouble:(double)h;
+ (int)intersectShapeWithPythagorasDIShape:(id<PythagorasDIShape>)s
                                withDouble:(double)x
                                withDouble:(double)y
                                withDouble:(double)w
                                withDouble:(double)h;
+ (BOOL)isInsideNonZeroWithInt:(int)cross;
+ (BOOL)isInsideEvenOddWithInt:(int)cross;
+ (void)sortBoundWithJavaLangDoubleArray:(IOSDoubleArray *)bound
                                 withInt:(int)bc;
+ (int)crossBoundWithJavaLangDoubleArray:(IOSDoubleArray *)bound
                                 withInt:(int)bc
                              withDouble:(double)py1
                              withDouble:(double)py2;
- (id)init;
@end

@interface PythagorasDCrossing_QuadCurve : NSObject {
 @public
  double ax_, ay_, bx_, by_;
  double Aax_, Aay_, Bbx_, Bby_;
}

@property (nonatomic, assign) double ax;
@property (nonatomic, assign) double ay;
@property (nonatomic, assign) double bx;
@property (nonatomic, assign) double by;
@property (nonatomic, assign) double Ax;
@property (nonatomic, assign) double Ay;
@property (nonatomic, assign) double Bx;
@property (nonatomic, assign) double By;

- (id)initWithDouble:(double)x1
          withDouble:(double)y1
          withDouble:(double)cx
          withDouble:(double)cy
          withDouble:(double)x2
          withDouble:(double)y2;
- (int)crossWithJavaLangDoubleArray:(IOSDoubleArray *)res
                            withInt:(int)rc
                         withDouble:(double)py1
                         withDouble:(double)py2;
- (int)solvePointWithJavaLangDoubleArray:(IOSDoubleArray *)res
                              withDouble:(double)px;
- (int)solveExtremeWithJavaLangDoubleArray:(IOSDoubleArray *)res;
- (int)addBoundWithJavaLangDoubleArray:(IOSDoubleArray *)bound
                               withInt:(int)bc
               withJavaLangDoubleArray:(IOSDoubleArray *)res
                               withInt:(int)rc
                            withDouble:(double)minX
                            withDouble:(double)maxX
                              withBOOL:(BOOL)changeId
                               withInt:(int)id_;
@end

@interface PythagorasDCrossing_CubicCurveH : NSObject {
 @public
  double ax_, ay_, bx_, by_, cx_, cy_;
  double Ax_, Ay_, Bx_, By_, Cx_, Cy_;
  double Ax3_, Bx2_;
}

@property (nonatomic, assign) double ax;
@property (nonatomic, assign) double ay;
@property (nonatomic, assign) double bx;
@property (nonatomic, assign) double by;
@property (nonatomic, assign) double cx;
@property (nonatomic, assign) double cy;
@property (nonatomic, assign) double Ax;
@property (nonatomic, assign) double Ay;
@property (nonatomic, assign) double Bx;
@property (nonatomic, assign) double By;
@property (nonatomic, assign) double Cx;
@property (nonatomic, assign) double Cy;
@property (nonatomic, assign) double Ax3;
@property (nonatomic, assign) double Bx2;

- (id)initWithDouble:(double)x1
          withDouble:(double)y1
          withDouble:(double)cx1
          withDouble:(double)cy1
          withDouble:(double)cx2
          withDouble:(double)cy2
          withDouble:(double)x2
          withDouble:(double)y2;
- (int)crossWithJavaLangDoubleArray:(IOSDoubleArray *)res
                            withInt:(int)rc
                         withDouble:(double)py1
                         withDouble:(double)py2;
- (int)solvePointWithJavaLangDoubleArray:(IOSDoubleArray *)res
                              withDouble:(double)px;
- (int)solveExtremeXWithJavaLangDoubleArray:(IOSDoubleArray *)res;
- (int)solveExtremeYWithJavaLangDoubleArray:(IOSDoubleArray *)res;
- (int)addBoundWithJavaLangDoubleArray:(IOSDoubleArray *)bound
                               withInt:(int)bc
               withJavaLangDoubleArray:(IOSDoubleArray *)res
                               withInt:(int)rc
                            withDouble:(double)minX
                            withDouble:(double)maxX
                              withBOOL:(BOOL)changeId
                               withInt:(int)id_;
@end
