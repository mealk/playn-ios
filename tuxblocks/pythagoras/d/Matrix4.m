//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/d/Matrix4.java
//
//  Created by Thomas on 7/1/13.
//

#import "IMatrix3.h"
#import "IMatrix4.h"
#import "IOSDoubleArray.h"
#import "IOSObjectArray.h"
#import "IPlane.h"
#import "IQuaternion.h"
#import "IVector3.h"
#import "IVector4.h"
#import "MathUtil.h"
#import "Matrix3.h"
#import "Platform.h"
#import "Quaternion.h"
#import "SingularMatrixException.h"
#import "Vector3.h"
#import "Vector4.h"
#import "java/lang/Math.h"
#import "java/nio/DoubleBuffer.h"
#import "Matrix4.h"

@implementation PythagorasDMatrix4

static id<PythagorasDIMatrix4> PythagorasDMatrix4_IDENTITY_;
static IOSObjectArray * PythagorasDMatrix4_EMPTY_ARRAY_;

@synthesize m00_ = m00__;
@synthesize m10_ = m10__;
@synthesize m20_ = m20__;
@synthesize m30_ = m30__;
@synthesize m01_ = m01__;
@synthesize m11_ = m11__;
@synthesize m21_ = m21__;
@synthesize m31_ = m31__;
@synthesize m02_ = m02__;
@synthesize m12_ = m12__;
@synthesize m22_ = m22__;
@synthesize m32_ = m32__;
@synthesize m03_ = m03__;
@synthesize m13_ = m13__;
@synthesize m23_ = m23__;
@synthesize m33_ = m33__;

+ (id<PythagorasDIMatrix4>)IDENTITY {
  return PythagorasDMatrix4_IDENTITY_;
}

+ (IOSObjectArray *)EMPTY_ARRAY {
  return PythagorasDMatrix4_EMPTY_ARRAY_;
}

- (id)initWithDouble:(double)m00
          withDouble:(double)m10
          withDouble:(double)m20
          withDouble:(double)m30
          withDouble:(double)m01
          withDouble:(double)m11
          withDouble:(double)m21
          withDouble:(double)m31
          withDouble:(double)m02
          withDouble:(double)m12
          withDouble:(double)m22
          withDouble:(double)m32
          withDouble:(double)m03
          withDouble:(double)m13
          withDouble:(double)m23
          withDouble:(double)m33 {
  if ((self = [super init])) {
    (void) [self setWithDouble:m00 withDouble:m10 withDouble:m20 withDouble:m30 withDouble:m01 withDouble:m11 withDouble:m21 withDouble:m31 withDouble:m02 withDouble:m12 withDouble:m22 withDouble:m32 withDouble:m03 withDouble:m13 withDouble:m23 withDouble:m33];
  }
  return self;
}

- (id)initWithJavaLangDoubleArray:(IOSDoubleArray *)values {
  if ((self = [super init])) {
    (void) [self setWithJavaLangDoubleArray:values];
  }
  return self;
}

- (id)initWithJavaNioDoubleBuffer:(JavaNioDoubleBuffer *)buf {
  if ((self = [super init])) {
    (void) [self setWithJavaNioDoubleBuffer:buf];
  }
  return self;
}

- (id)initWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other {
  if ((self = [super init])) {
    (void) [self setWithPythagorasDIMatrix4:other];
  }
  return self;
}

- (id)init {
  if ((self = [super init])) {
    (void) [self setToIdentity];
  }
  return self;
}

- (PythagorasDMatrix4 *)setToIdentity {
  return [self setWithDouble:1.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToZero {
  return [self setWithDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f];
}

- (PythagorasDMatrix4 *)setToTransformWithPythagorasDIVector3:(id<PythagorasDIVector3>)translation
                                   withPythagorasDIQuaternion:(id<PythagorasDIQuaternion>)rotation {
  return [[self setToRotationWithPythagorasDIQuaternion:rotation] setTranslationWithPythagorasDIVector3:translation];
}

- (PythagorasDMatrix4 *)setToTransformWithPythagorasDIVector3:(id<PythagorasDIVector3>)translation
                                   withPythagorasDIQuaternion:(id<PythagorasDIQuaternion>)rotation
                                                   withDouble:(double)scale_ {
  return [[self setToRotationWithPythagorasDIQuaternion:rotation] setWithDouble:m00__ * scale_ withDouble:m10__ * scale_ withDouble:m20__ * scale_ withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) x] withDouble:m01__ * scale_ withDouble:m11__ * scale_ withDouble:m21__ * scale_ withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) y] withDouble:m02__ * scale_ withDouble:m12__ * scale_ withDouble:m22__ * scale_ withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) z] withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToTransformWithPythagorasDIVector3:(id<PythagorasDIVector3>)translation
                                   withPythagorasDIQuaternion:(id<PythagorasDIQuaternion>)rotation
                                      withPythagorasDIVector3:(id<PythagorasDIVector3>)scale_ {
  double sx = [((id<PythagorasDIVector3>) NIL_CHK(scale_)) x], sy = [((id<PythagorasDIVector3>) NIL_CHK(scale_)) y], sz = [((id<PythagorasDIVector3>) NIL_CHK(scale_)) z];
  return [[self setToRotationWithPythagorasDIQuaternion:rotation] setWithDouble:m00__ * sx withDouble:m10__ * sy withDouble:m20__ * sz withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) x] withDouble:m01__ * sx withDouble:m11__ * sy withDouble:m21__ * sz withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) y] withDouble:m02__ * sx withDouble:m12__ * sy withDouble:m22__ * sz withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) z] withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToTranslationWithPythagorasDIVector3:(id<PythagorasDIVector3>)translation {
  return [self setToTranslationWithDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) x] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) y] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) z]];
}

- (PythagorasDMatrix4 *)setToTranslationWithDouble:(double)x
                                        withDouble:(double)y
                                        withDouble:(double)z {
  return [self setWithDouble:1.0f withDouble:0.0f withDouble:0.0f withDouble:x withDouble:0.0f withDouble:1.0f withDouble:0.0f withDouble:y withDouble:0.0f withDouble:0.0f withDouble:1.0f withDouble:z withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setTranslationWithPythagorasDIVector3:(id<PythagorasDIVector3>)translation {
  return [self setTranslationWithDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) x] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) y] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(translation)) z]];
}

- (PythagorasDMatrix4 *)setTranslationWithDouble:(double)x
                                      withDouble:(double)y
                                      withDouble:(double)z {
  m30__ = x;
  m31__ = y;
  m32__ = z;
  return self;
}

- (PythagorasDMatrix4 *)setToRotationWithPythagorasDIVector3:(id<PythagorasDIVector3>)from
                                     withPythagorasDIVector3:(id<PythagorasDIVector3>)to {
  double angle = [((id<PythagorasDIVector3>) NIL_CHK(from)) angleWithPythagorasDIVector3:to];
  if (angle < PythagorasDMathUtil_EPSILON) {
    return [self setToIdentity];
  }
  if (angle <= JavaLangMath_PI - PythagorasDMathUtil_EPSILON) {
    return [self setToRotationWithDouble:angle withPythagorasDIVector3:[[((id<PythagorasDIVector3>) NIL_CHK(from)) crossWithPythagorasDIVector3:to] normalizeLocal]];
  }
  PythagorasDVector3 *axis = [[[PythagorasDVector3 alloc] initWithDouble:0.0f withDouble:[((id<PythagorasDIVector3>) NIL_CHK(from)) z] withDouble:-[((id<PythagorasDIVector3>) NIL_CHK(from)) y]] autorelease];
  double length = [((PythagorasDVector3 *) NIL_CHK(axis)) length];
  return [self setToRotationWithDouble:JavaLangMath_PI withPythagorasDIVector3:length < PythagorasDMathUtil_EPSILON ? [[((PythagorasDVector3 *) NIL_CHK(axis)) setWithDouble:-[((id<PythagorasDIVector3>) NIL_CHK(from)) z] withDouble:0.0f withDouble:[((id<PythagorasDIVector3>) NIL_CHK(from)) x]] normalizeLocal] : [((PythagorasDVector3 *) NIL_CHK(axis)) multLocalWithDouble:1.0f / length]];
}

- (PythagorasDMatrix4 *)setToRotationWithDouble:(double)angle
                        withPythagorasDIVector3:(id<PythagorasDIVector3>)axis {
  return [self setToRotationWithDouble:angle withDouble:[((id<PythagorasDIVector3>) NIL_CHK(axis)) x] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(axis)) y] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(axis)) z]];
}

- (PythagorasDMatrix4 *)setToRotationWithDouble:(double)angle
                                     withDouble:(double)x
                                     withDouble:(double)y
                                     withDouble:(double)z {
  double c = [JavaLangMath cosWithDouble:angle], s = [JavaLangMath sinWithDouble:angle], omc = 1.0f - c;
  double xs = x * s, ys = y * s, zs = z * s, xy = x * y, xz = x * z, yz = y * z;
  return [self setWithDouble:x * x * omc + c withDouble:xy * omc - zs withDouble:xz * omc + ys withDouble:0.0f withDouble:xy * omc + zs withDouble:y * y * omc + c withDouble:yz * omc - xs withDouble:0.0f withDouble:xz * omc - ys withDouble:yz * omc + xs withDouble:z * z * omc + c withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToRotationWithPythagorasDIQuaternion:(id<PythagorasDIQuaternion>)quat {
  double x = [((id<PythagorasDIQuaternion>) NIL_CHK(quat)) x], y = [((id<PythagorasDIQuaternion>) NIL_CHK(quat)) y], z = [((id<PythagorasDIQuaternion>) NIL_CHK(quat)) z], w = [((id<PythagorasDIQuaternion>) NIL_CHK(quat)) w];
  double xx = x * x, yy = y * y, zz = z * z;
  double xy = x * y, xz = x * z, xw = x * w;
  double yz = y * z, yw = y * w, zw = z * w;
  return [self setWithDouble:1.0f - 2.0f * (yy + zz) withDouble:2.0f * (xy - zw) withDouble:2.0f * (xz + yw) withDouble:0.0f withDouble:2.0f * (xy + zw) withDouble:1.0f - 2.0f * (xx + zz) withDouble:2.0f * (yz - xw) withDouble:0.0f withDouble:2.0f * (xz - yw) withDouble:2.0f * (yz + xw) withDouble:1.0f - 2.0f * (xx + yy) withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToRotationScaleWithPythagorasDIMatrix3:(id<PythagorasDIMatrix3>)rotScale {
  return [self setWithDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m00] withDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m01] withDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m02] withDouble:0.0f withDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m10] withDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m11] withDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m12] withDouble:0.0f withDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m20] withDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m21] withDouble:[((id<PythagorasDIMatrix3>) NIL_CHK(rotScale)) m22] withDouble:0.0f withDouble:0 withDouble:0 withDouble:0 withDouble:1];
}

- (PythagorasDMatrix4 *)setToScaleWithPythagorasDIVector3:(id<PythagorasDIVector3>)scale_ {
  return [self setToScaleWithDouble:[((id<PythagorasDIVector3>) NIL_CHK(scale_)) x] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(scale_)) y] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(scale_)) z]];
}

- (PythagorasDMatrix4 *)setToScaleWithDouble:(double)s {
  return [self setToScaleWithDouble:s withDouble:s withDouble:s];
}

- (PythagorasDMatrix4 *)setToScaleWithDouble:(double)x
                                  withDouble:(double)y
                                  withDouble:(double)z {
  return [self setWithDouble:x withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:y withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:z withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToReflectionWithPythagorasDIVector3:(id<PythagorasDIVector3>)normal {
  return [self setToReflectionWithDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) x] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) y] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) z]];
}

- (PythagorasDMatrix4 *)setToReflectionWithDouble:(double)x
                                       withDouble:(double)y
                                       withDouble:(double)z {
  double x2 = -2.0f * x, y2 = -2.0f * y, z2 = -2.0f * z;
  double xy2 = x2 * y, xz2 = x2 * z, yz2 = y2 * z;
  return [self setWithDouble:1.0f + x2 * x withDouble:xy2 withDouble:xz2 withDouble:0.0f withDouble:xy2 withDouble:1.0f + y2 * y withDouble:yz2 withDouble:0.0f withDouble:xz2 withDouble:yz2 withDouble:1.0f + z2 * z withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToReflectionWithPythagorasDIPlane:(id<PythagorasDIPlane>)plane {
  return [self setToReflectionWithPythagorasDIVector3:[((id<PythagorasDIPlane>) NIL_CHK(plane)) normal] withDouble:[((id<PythagorasDIPlane>) NIL_CHK(plane)) constant]];
}

- (PythagorasDMatrix4 *)setToReflectionWithPythagorasDIVector3:(id<PythagorasDIVector3>)normal
                                                    withDouble:(double)constant {
  return [self setToReflectionWithDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) x] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) y] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) z] withDouble:constant];
}

- (PythagorasDMatrix4 *)setToReflectionWithDouble:(double)x
                                       withDouble:(double)y
                                       withDouble:(double)z
                                       withDouble:(double)w {
  double x2 = -2.0f * x, y2 = -2.0f * y, z2 = -2.0f * z;
  double xy2 = x2 * y, xz2 = x2 * z, yz2 = y2 * z;
  double x2y2z2 = x * x + y * y + z * z;
  return [self setWithDouble:1.0f + x2 * x withDouble:xy2 withDouble:xz2 withDouble:x2 * w * x2y2z2 withDouble:xy2 withDouble:1.0f + y2 * y withDouble:yz2 withDouble:y2 * w * x2y2z2 withDouble:xz2 withDouble:yz2 withDouble:1.0f + z2 * z withDouble:z2 * w * x2y2z2 withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToSkewWithPythagorasDIPlane:(id<PythagorasDIPlane>)plane
                               withPythagorasDIVector3:(id<PythagorasDIVector3>)amount {
  return [self setToSkewWithPythagorasDIVector3:[((id<PythagorasDIPlane>) NIL_CHK(plane)) normal] withDouble:[((id<PythagorasDIPlane>) NIL_CHK(plane)) constant] withPythagorasDIVector3:amount];
}

- (PythagorasDMatrix4 *)setToSkewWithPythagorasDIVector3:(id<PythagorasDIVector3>)normal
                                              withDouble:(double)constant
                                 withPythagorasDIVector3:(id<PythagorasDIVector3>)amount {
  return [self setToSkewWithDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) x] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) y] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(normal)) z] withDouble:constant withDouble:[((id<PythagorasDIVector3>) NIL_CHK(amount)) x] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(amount)) y] withDouble:[((id<PythagorasDIVector3>) NIL_CHK(amount)) z]];
}

- (PythagorasDMatrix4 *)setToSkewWithDouble:(double)a
                                 withDouble:(double)b
                                 withDouble:(double)c
                                 withDouble:(double)d
                                 withDouble:(double)x
                                 withDouble:(double)y
                                 withDouble:(double)z {
  return [self setWithDouble:1.0f + a * x withDouble:b * x withDouble:c * x withDouble:d * x withDouble:a * y withDouble:1.0f + b * y withDouble:c * y withDouble:d * y withDouble:a * z withDouble:b * z withDouble:1.0f + c * z withDouble:d * z withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setToPerspectiveWithDouble:(double)fovy
                                        withDouble:(double)aspect
                                        withDouble:(double)near
                                        withDouble:(double)far {
  double f = 1.0f / [JavaLangMath tanWithDouble:fovy / 2.0f], dscale = 1.0f / (near - far);
  return [self setWithDouble:f / aspect withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:(far + near) * dscale withDouble:2.0f * far * near * dscale withDouble:0.0f withDouble:0.0f withDouble:-1.0f withDouble:0.0f];
}

- (PythagorasDMatrix4 *)setToFrustumWithDouble:(double)left
                                    withDouble:(double)right
                                    withDouble:(double)bottom
                                    withDouble:(double)top
                                    withDouble:(double)near
                                    withDouble:(double)far {
  return [self setToFrustumWithDouble:left withDouble:right withDouble:bottom withDouble:top withDouble:near withDouble:far withPythagorasDIVector3:[PythagorasDVector3 UNIT_Z]];
}

- (PythagorasDMatrix4 *)setToFrustumWithDouble:(double)left
                                    withDouble:(double)right
                                    withDouble:(double)bottom
                                    withDouble:(double)top
                                    withDouble:(double)near
                                    withDouble:(double)far
                       withPythagorasDIVector3:(id<PythagorasDIVector3>)nearFarNormal {
  double rrl = 1.0f / (right - left);
  double rtb = 1.0f / (top - bottom);
  double rnf = 1.0f / (near - far);
  double n2 = 2.0f * near;
  double s = (far + near) / (near * [((id<PythagorasDIVector3>) NIL_CHK(nearFarNormal)) z] - far * [((id<PythagorasDIVector3>) NIL_CHK(nearFarNormal)) z]);
  return [self setWithDouble:n2 * rrl withDouble:0.0f withDouble:(right + left) * rrl withDouble:0.0f withDouble:0.0f withDouble:n2 * rtb withDouble:(top + bottom) * rtb withDouble:0.0f withDouble:s * [((id<PythagorasDIVector3>) NIL_CHK(nearFarNormal)) x] withDouble:s * [((id<PythagorasDIVector3>) NIL_CHK(nearFarNormal)) y] withDouble:(far + near) * rnf withDouble:n2 * far * rnf withDouble:0.0f withDouble:0.0f withDouble:-1.0f withDouble:0.0f];
}

- (PythagorasDMatrix4 *)setToOrthoWithDouble:(double)left
                                  withDouble:(double)right
                                  withDouble:(double)bottom
                                  withDouble:(double)top
                                  withDouble:(double)near
                                  withDouble:(double)far {
  return [self setToOrthoWithDouble:left withDouble:right withDouble:bottom withDouble:top withDouble:near withDouble:far withPythagorasDIVector3:[PythagorasDVector3 UNIT_Z]];
}

- (PythagorasDMatrix4 *)setToOrthoWithDouble:(double)left
                                  withDouble:(double)right
                                  withDouble:(double)bottom
                                  withDouble:(double)top
                                  withDouble:(double)near
                                  withDouble:(double)far
                     withPythagorasDIVector3:(id<PythagorasDIVector3>)nearFarNormal {
  double rlr = 1.0f / (left - right);
  double rbt = 1.0f / (bottom - top);
  double rnf = 1.0f / (near - far);
  double s = 2.0f / (near * [((id<PythagorasDIVector3>) NIL_CHK(nearFarNormal)) z] - far * [((id<PythagorasDIVector3>) NIL_CHK(nearFarNormal)) z]);
  return [self setWithDouble:-2.0f * rlr withDouble:0.0f withDouble:0.0f withDouble:(right + left) * rlr withDouble:0.0f withDouble:-2.0f * rbt withDouble:0.0f withDouble:(top + bottom) * rbt withDouble:s * [((id<PythagorasDIVector3>) NIL_CHK(nearFarNormal)) x] withDouble:s * [((id<PythagorasDIVector3>) NIL_CHK(nearFarNormal)) y] withDouble:2.0f * rnf withDouble:(far + near) * rnf withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)setWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other {
  return [self setWithDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m00] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m10] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m20] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m30] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m01] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m11] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m21] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m31] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m02] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m12] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m22] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m32] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m03] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m13] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m23] withDouble:[((id<PythagorasDIMatrix4>) NIL_CHK(other)) m33]];
}

- (PythagorasDMatrix4 *)setWithJavaLangDoubleArray:(IOSDoubleArray *)values {
  return [self setWithDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:0] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:1] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:2] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:3] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:4] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:5] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:6] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:7] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:8] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:9] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:10] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:11] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:12] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:13] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:14] withDouble:[((IOSDoubleArray *) NIL_CHK(values)) doubleAtIndex:15]];
}

- (PythagorasDMatrix4 *)setWithJavaNioDoubleBuffer:(JavaNioDoubleBuffer *)buf {
  m00__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m01__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m02__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m03__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m10__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m11__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m12__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m13__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m20__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m21__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m22__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m23__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m30__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m31__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m32__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  m33__ = [((JavaNioDoubleBuffer *) NIL_CHK(buf)) get];
  return self;
}

- (PythagorasDMatrix4 *)setWithDouble:(double)m00
                           withDouble:(double)m10
                           withDouble:(double)m20
                           withDouble:(double)m30
                           withDouble:(double)m01
                           withDouble:(double)m11
                           withDouble:(double)m21
                           withDouble:(double)m31
                           withDouble:(double)m02
                           withDouble:(double)m12
                           withDouble:(double)m22
                           withDouble:(double)m32
                           withDouble:(double)m03
                           withDouble:(double)m13
                           withDouble:(double)m23
                           withDouble:(double)m33 {
  self.m00_ = m00;
  self.m01_ = m01;
  self.m02_ = m02;
  self.m03_ = m03;
  self.m10_ = m10;
  self.m11_ = m11;
  self.m12_ = m12;
  self.m13_ = m13;
  self.m20_ = m20;
  self.m21_ = m21;
  self.m22_ = m22;
  self.m23_ = m23;
  self.m30_ = m30;
  self.m31_ = m31;
  self.m32_ = m32;
  self.m33_ = m33;
  return self;
}

- (PythagorasDMatrix4 *)transposeLocal {
  return [self transposeWithPythagorasDMatrix4:self];
}

- (PythagorasDMatrix4 *)multLocalWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other {
  return [self multWithPythagorasDIMatrix4:other withPythagorasDMatrix4:self];
}

- (PythagorasDMatrix4 *)multAffineLocalWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other {
  return [self multAffineWithPythagorasDIMatrix4:other withPythagorasDMatrix4:self];
}

- (PythagorasDMatrix4 *)invertLocal {
  return [self invertWithPythagorasDMatrix4:self];
}

- (PythagorasDMatrix4 *)invertAffineLocal {
  return [self invertAffineWithPythagorasDMatrix4:self];
}

- (PythagorasDMatrix4 *)lerpLocalWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                                              withDouble:(double)t {
  return [self lerpWithPythagorasDIMatrix4:other withDouble:t withPythagorasDMatrix4:self];
}

- (PythagorasDMatrix4 *)lerpAffineLocalWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                                                    withDouble:(double)t {
  return [self lerpAffineWithPythagorasDIMatrix4:other withDouble:t withPythagorasDMatrix4:self];
}

- (double)m00 {
  return m00__;
}

- (double)m10 {
  return m10__;
}

- (double)m20 {
  return m20__;
}

- (double)m30 {
  return m30__;
}

- (double)m01 {
  return m01__;
}

- (double)m11 {
  return m11__;
}

- (double)m21 {
  return m21__;
}

- (double)m31 {
  return m31__;
}

- (double)m02 {
  return m02__;
}

- (double)m12 {
  return m12__;
}

- (double)m22 {
  return m22__;
}

- (double)m32 {
  return m32__;
}

- (double)m03 {
  return m03__;
}

- (double)m13 {
  return m13__;
}

- (double)m23 {
  return m23__;
}

- (double)m33 {
  return m33__;
}

- (PythagorasDMatrix4 *)transpose {
  return [self transposeWithPythagorasDMatrix4:[[[PythagorasDMatrix4 alloc] init] autorelease]];
}

- (PythagorasDMatrix4 *)transposeWithPythagorasDMatrix4:(PythagorasDMatrix4 *)result {
  return [((PythagorasDMatrix4 *) NIL_CHK(result)) setWithDouble:m00__ withDouble:m01__ withDouble:m02__ withDouble:m03__ withDouble:m10__ withDouble:m11__ withDouble:m12__ withDouble:m13__ withDouble:m20__ withDouble:m21__ withDouble:m22__ withDouble:m23__ withDouble:m30__ withDouble:m31__ withDouble:m32__ withDouble:m33__];
}

- (PythagorasDMatrix4 *)multWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other {
  return [self multWithPythagorasDIMatrix4:other withPythagorasDMatrix4:[[[PythagorasDMatrix4 alloc] init] autorelease]];
}

- (PythagorasDMatrix4 *)multWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                             withPythagorasDMatrix4:(PythagorasDMatrix4 *)result {
  double m00 = self.m00_, m10 = self.m10_, m20 = self.m20_, m30 = self.m30_;
  double m01 = self.m01_, m11 = self.m11_, m21 = self.m21_, m31 = self.m31_;
  double m02 = self.m02_, m12 = self.m12_, m22 = self.m22_, m32 = self.m32_;
  double m03 = self.m03_, m13 = self.m13_, m23 = self.m23_, m33 = self.m33_;
  double om00 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m00], om10 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m10], om20 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m20], om30 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m30];
  double om01 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m01], om11 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m11], om21 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m21], om31 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m31];
  double om02 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m02], om12 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m12], om22 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m22], om32 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m32];
  double om03 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m03], om13 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m13], om23 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m23], om33 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m33];
  return [((PythagorasDMatrix4 *) NIL_CHK(result)) setWithDouble:m00 * om00 + m10 * om01 + m20 * om02 + m30 * om03 withDouble:m00 * om10 + m10 * om11 + m20 * om12 + m30 * om13 withDouble:m00 * om20 + m10 * om21 + m20 * om22 + m30 * om23 withDouble:m00 * om30 + m10 * om31 + m20 * om32 + m30 * om33 withDouble:m01 * om00 + m11 * om01 + m21 * om02 + m31 * om03 withDouble:m01 * om10 + m11 * om11 + m21 * om12 + m31 * om13 withDouble:m01 * om20 + m11 * om21 + m21 * om22 + m31 * om23 withDouble:m01 * om30 + m11 * om31 + m21 * om32 + m31 * om33 withDouble:m02 * om00 + m12 * om01 + m22 * om02 + m32 * om03 withDouble:m02 * om10 + m12 * om11 + m22 * om12 + m32 * om13 withDouble:m02 * om20 + m12 * om21 + m22 * om22 + m32 * om23 withDouble:m02 * om30 + m12 * om31 + m22 * om32 + m32 * om33 withDouble:m03 * om00 + m13 * om01 + m23 * om02 + m33 * om03 withDouble:m03 * om10 + m13 * om11 + m23 * om12 + m33 * om13 withDouble:m03 * om20 + m13 * om21 + m23 * om22 + m33 * om23 withDouble:m03 * om30 + m13 * om31 + m23 * om32 + m33 * om33];
}

- (BOOL)isAffine {
  return (m03__ == 0.0f && m13__ == 0.0f && m23__ == 0.0f && m33__ == 1.0f);
}

- (BOOL)isMirrored {
  return m00__ * (m11__ * m22__ - m12__ * m21__) + m01__ * (m12__ * m20__ - m10__ * m22__) + m02__ * (m10__ * m21__ - m11__ * m20__) < 0.0f;
}

- (PythagorasDMatrix4 *)multAffineWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other {
  return [self multAffineWithPythagorasDIMatrix4:other withPythagorasDMatrix4:[[[PythagorasDMatrix4 alloc] init] autorelease]];
}

- (PythagorasDMatrix4 *)multAffineWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                                   withPythagorasDMatrix4:(PythagorasDMatrix4 *)result {
  double m00 = self.m00_, m10 = self.m10_, m20 = self.m20_, m30 = self.m30_;
  double m01 = self.m01_, m11 = self.m11_, m21 = self.m21_, m31 = self.m31_;
  double m02 = self.m02_, m12 = self.m12_, m22 = self.m22_, m32 = self.m32_;
  double om00 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m00], om10 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m10], om20 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m20], om30 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m30];
  double om01 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m01], om11 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m11], om21 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m21], om31 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m31];
  double om02 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m02], om12 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m12], om22 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m22], om32 = [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m32];
  return [((PythagorasDMatrix4 *) NIL_CHK(result)) setWithDouble:m00 * om00 + m10 * om01 + m20 * om02 withDouble:m00 * om10 + m10 * om11 + m20 * om12 withDouble:m00 * om20 + m10 * om21 + m20 * om22 withDouble:m00 * om30 + m10 * om31 + m20 * om32 + m30 withDouble:m01 * om00 + m11 * om01 + m21 * om02 withDouble:m01 * om10 + m11 * om11 + m21 * om12 withDouble:m01 * om20 + m11 * om21 + m21 * om22 withDouble:m01 * om30 + m11 * om31 + m21 * om32 + m31 withDouble:m02 * om00 + m12 * om01 + m22 * om02 withDouble:m02 * om10 + m12 * om11 + m22 * om12 withDouble:m02 * om20 + m12 * om21 + m22 * om22 withDouble:m02 * om30 + m12 * om31 + m22 * om32 + m32 withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)invert {
  return [self invertWithPythagorasDMatrix4:[[[PythagorasDMatrix4 alloc] init] autorelease]];
}

- (PythagorasDMatrix4 *)invertWithPythagorasDMatrix4:(PythagorasDMatrix4 *)result {
  double m00 = self.m00_, m10 = self.m10_, m20 = self.m20_, m30 = self.m30_;
  double m01 = self.m01_, m11 = self.m11_, m21 = self.m21_, m31 = self.m31_;
  double m02 = self.m02_, m12 = self.m12_, m22 = self.m22_, m32 = self.m32_;
  double m03 = self.m03_, m13 = self.m13_, m23 = self.m23_, m33 = self.m33_;
  double sd00 = m11 * (m22 * m33 - m23 * m32) + m21 * (m13 * m32 - m12 * m33) + m31 * (m12 * m23 - m13 * m22);
  double sd10 = m01 * (m22 * m33 - m23 * m32) + m21 * (m03 * m32 - m02 * m33) + m31 * (m02 * m23 - m03 * m22);
  double sd20 = m01 * (m12 * m33 - m13 * m32) + m11 * (m03 * m32 - m02 * m33) + m31 * (m02 * m13 - m03 * m12);
  double sd30 = m01 * (m12 * m23 - m13 * m22) + m11 * (m03 * m22 - m02 * m23) + m21 * (m02 * m13 - m03 * m12);
  double det = m00 * sd00 + m20 * sd20 - m10 * sd10 - m30 * sd30;
  if ([JavaLangMath absWithDouble:det] == 0.0f) {
    @throw [[[PythagorasUtilSingularMatrixException alloc] initWithNSString:[self description]] autorelease];
  }
  double rdet = 1.0f / det;
  return [((PythagorasDMatrix4 *) NIL_CHK(result)) setWithDouble:+sd00 * rdet withDouble:-(m10 * (m22 * m33 - m23 * m32) + m20 * (m13 * m32 - m12 * m33) + m30 * (m12 * m23 - m13 * m22)) * rdet withDouble:+(m10 * (m21 * m33 - m23 * m31) + m20 * (m13 * m31 - m11 * m33) + m30 * (m11 * m23 - m13 * m21)) * rdet withDouble:-(m10 * (m21 * m32 - m22 * m31) + m20 * (m12 * m31 - m11 * m32) + m30 * (m11 * m22 - m12 * m21)) * rdet withDouble:-sd10 * rdet withDouble:+(m00 * (m22 * m33 - m23 * m32) + m20 * (m03 * m32 - m02 * m33) + m30 * (m02 * m23 - m03 * m22)) * rdet withDouble:-(m00 * (m21 * m33 - m23 * m31) + m20 * (m03 * m31 - m01 * m33) + m30 * (m01 * m23 - m03 * m21)) * rdet withDouble:+(m00 * (m21 * m32 - m22 * m31) + m20 * (m02 * m31 - m01 * m32) + m30 * (m01 * m22 - m02 * m21)) * rdet withDouble:+sd20 * rdet withDouble:-(m00 * (m12 * m33 - m13 * m32) + m10 * (m03 * m32 - m02 * m33) + m30 * (m02 * m13 - m03 * m12)) * rdet withDouble:+(m00 * (m11 * m33 - m13 * m31) + m10 * (m03 * m31 - m01 * m33) + m30 * (m01 * m13 - m03 * m11)) * rdet withDouble:-(m00 * (m11 * m32 - m12 * m31) + m10 * (m02 * m31 - m01 * m32) + m30 * (m01 * m12 - m02 * m11)) * rdet withDouble:-sd30 * rdet withDouble:+(m00 * (m12 * m23 - m13 * m22) + m10 * (m03 * m22 - m02 * m23) + m20 * (m02 * m13 - m03 * m12)) * rdet withDouble:-(m00 * (m11 * m23 - m13 * m21) + m10 * (m03 * m21 - m01 * m23) + m20 * (m01 * m13 - m03 * m11)) * rdet withDouble:+(m00 * (m11 * m22 - m12 * m21) + m10 * (m02 * m21 - m01 * m22) + m20 * (m01 * m12 - m02 * m11)) * rdet];
}

- (PythagorasDMatrix4 *)invertAffine {
  return [self invertAffineWithPythagorasDMatrix4:[[[PythagorasDMatrix4 alloc] init] autorelease]];
}

- (PythagorasDMatrix4 *)invertAffineWithPythagorasDMatrix4:(PythagorasDMatrix4 *)result {
  double m00 = self.m00_, m10 = self.m10_, m20 = self.m20_, m30 = self.m30_;
  double m01 = self.m01_, m11 = self.m11_, m21 = self.m21_, m31 = self.m31_;
  double m02 = self.m02_, m12 = self.m12_, m22 = self.m22_, m32 = self.m32_;
  double sd00 = m11 * m22 - m21 * m12;
  double sd10 = m01 * m22 - m21 * m02;
  double sd20 = m01 * m12 - m11 * m02;
  double det = m00 * sd00 + m20 * sd20 - m10 * sd10;
  if ([JavaLangMath absWithDouble:det] == 0.0f) {
    @throw [[[PythagorasUtilSingularMatrixException alloc] initWithNSString:[self description]] autorelease];
  }
  double rdet = 1.0f / det;
  return [((PythagorasDMatrix4 *) NIL_CHK(result)) setWithDouble:+sd00 * rdet withDouble:-(m10 * m22 - m20 * m12) * rdet withDouble:+(m10 * m21 - m20 * m11) * rdet withDouble:-(m10 * (m21 * m32 - m22 * m31) + m20 * (m12 * m31 - m11 * m32) + m30 * sd00) * rdet withDouble:-sd10 * rdet withDouble:+(m00 * m22 - m20 * m02) * rdet withDouble:-(m00 * m21 - m20 * m01) * rdet withDouble:+(m00 * (m21 * m32 - m22 * m31) + m20 * (m02 * m31 - m01 * m32) + m30 * sd10) * rdet withDouble:+sd20 * rdet withDouble:-(m00 * m12 - m10 * m02) * rdet withDouble:+(m00 * m11 - m10 * m01) * rdet withDouble:-(m00 * (m11 * m32 - m12 * m31) + m10 * (m02 * m31 - m01 * m32) + m30 * sd20) * rdet withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (PythagorasDMatrix4 *)lerpWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                                         withDouble:(double)t {
  return [self lerpWithPythagorasDIMatrix4:other withDouble:t withPythagorasDMatrix4:[[[PythagorasDMatrix4 alloc] init] autorelease]];
}

- (PythagorasDMatrix4 *)lerpWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                                         withDouble:(double)t
                             withPythagorasDMatrix4:(PythagorasDMatrix4 *)result {
  double m00 = self.m00_, m10 = self.m10_, m20 = self.m20_, m30 = self.m30_;
  double m01 = self.m01_, m11 = self.m11_, m21 = self.m21_, m31 = self.m31_;
  double m02 = self.m02_, m12 = self.m12_, m22 = self.m22_, m32 = self.m32_;
  double m03 = self.m03_, m13 = self.m13_, m23 = self.m23_, m33 = self.m33_;
  return [((PythagorasDMatrix4 *) NIL_CHK(result)) setWithDouble:m00 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m00] - m00) withDouble:m10 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m10] - m10) withDouble:m20 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m20] - m20) withDouble:m30 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m30] - m30) withDouble:m01 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m01] - m01) withDouble:m11 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m11] - m11) withDouble:m21 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m21] - m21) withDouble:m31 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m31] - m31) withDouble:m02 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m02] - m02) withDouble:m12 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m12] - m12) withDouble:m22 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m22] - m22) withDouble:m32 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m32] - m32) withDouble:m03 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m03] - m03) withDouble:m13 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m13] - m13) withDouble:m23 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m23] - m23) withDouble:m33 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m33] - m33)];
}

- (PythagorasDMatrix4 *)lerpAffineWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                                               withDouble:(double)t {
  return [self lerpAffineWithPythagorasDIMatrix4:other withDouble:t withPythagorasDMatrix4:[[[PythagorasDMatrix4 alloc] init] autorelease]];
}

- (PythagorasDMatrix4 *)lerpAffineWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                                               withDouble:(double)t
                                   withPythagorasDMatrix4:(PythagorasDMatrix4 *)result {
  double m00 = self.m00_, m10 = self.m10_, m20 = self.m20_, m30 = self.m30_;
  double m01 = self.m01_, m11 = self.m11_, m21 = self.m21_, m31 = self.m31_;
  double m02 = self.m02_, m12 = self.m12_, m22 = self.m22_, m32 = self.m32_;
  return [((PythagorasDMatrix4 *) NIL_CHK(result)) setWithDouble:m00 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m00] - m00) withDouble:m10 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m10] - m10) withDouble:m20 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m20] - m20) withDouble:m30 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m30] - m30) withDouble:m01 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m01] - m01) withDouble:m11 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m11] - m11) withDouble:m21 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m21] - m21) withDouble:m31 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m31] - m31) withDouble:m02 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m02] - m02) withDouble:m12 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m12] - m12) withDouble:m22 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m22] - m22) withDouble:m32 + t * ([((id<PythagorasDIMatrix4>) NIL_CHK(other)) m32] - m32) withDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (JavaNioDoubleBuffer *)getWithJavaNioDoubleBuffer:(JavaNioDoubleBuffer *)buf {
  (void) [[[[((JavaNioDoubleBuffer *) NIL_CHK(buf)) putWithDouble:m00__] putWithDouble:m01__] putWithDouble:m02__] putWithDouble:m03__];
  (void) [[[[((JavaNioDoubleBuffer *) NIL_CHK(buf)) putWithDouble:m10__] putWithDouble:m11__] putWithDouble:m12__] putWithDouble:m13__];
  (void) [[[[((JavaNioDoubleBuffer *) NIL_CHK(buf)) putWithDouble:m20__] putWithDouble:m21__] putWithDouble:m22__] putWithDouble:m23__];
  (void) [[[[((JavaNioDoubleBuffer *) NIL_CHK(buf)) putWithDouble:m30__] putWithDouble:m31__] putWithDouble:m32__] putWithDouble:m33__];
  return buf;
}

- (PythagorasDVector3 *)projectPointLocalWithPythagorasDVector3:(PythagorasDVector3 *)point {
  return [self projectPointWithPythagorasDIVector3:point withPythagorasDVector3:point];
}

- (PythagorasDVector3 *)projectPointWithPythagorasDIVector3:(id<PythagorasDIVector3>)point {
  return [self projectPointWithPythagorasDIVector3:point withPythagorasDVector3:[[[PythagorasDVector3 alloc] init] autorelease]];
}

- (PythagorasDVector3 *)projectPointWithPythagorasDIVector3:(id<PythagorasDIVector3>)point
                                     withPythagorasDVector3:(PythagorasDVector3 *)result {
  double px = [((id<PythagorasDIVector3>) NIL_CHK(point)) x], py = [((id<PythagorasDIVector3>) NIL_CHK(point)) y], pz = [((id<PythagorasDIVector3>) NIL_CHK(point)) z];
  double rw = 1.0f / (m03__ * px + m13__ * py + m23__ * pz + m33__);
  return [((PythagorasDVector3 *) NIL_CHK(result)) setWithDouble:(m00__ * px + m10__ * py + m20__ * pz + m30__) * rw withDouble:(m01__ * px + m11__ * py + m21__ * pz + m31__) * rw withDouble:(m02__ * px + m12__ * py + m22__ * pz + m32__) * rw];
}

- (PythagorasDVector3 *)transformPointLocalWithPythagorasDVector3:(PythagorasDVector3 *)point {
  return [self transformPointWithPythagorasDIVector3:point withPythagorasDVector3:point];
}

- (PythagorasDVector3 *)transformPointWithPythagorasDIVector3:(id<PythagorasDIVector3>)point {
  return [self transformPointWithPythagorasDIVector3:point withPythagorasDVector3:[[[PythagorasDVector3 alloc] init] autorelease]];
}

- (PythagorasDVector3 *)transformPointWithPythagorasDIVector3:(id<PythagorasDIVector3>)point
                                       withPythagorasDVector3:(PythagorasDVector3 *)result {
  double px = [((id<PythagorasDIVector3>) NIL_CHK(point)) x], py = [((id<PythagorasDIVector3>) NIL_CHK(point)) y], pz = [((id<PythagorasDIVector3>) NIL_CHK(point)) z];
  return [((PythagorasDVector3 *) NIL_CHK(result)) setWithDouble:m00__ * px + m10__ * py + m20__ * pz + m30__ withDouble:m01__ * px + m11__ * py + m21__ * pz + m31__ withDouble:m02__ * px + m12__ * py + m22__ * pz + m32__];
}

- (double)transformPointZWithPythagorasDIVector3:(id<PythagorasDIVector3>)point {
  return m02__ * [((id<PythagorasDIVector3>) NIL_CHK(point)) x] + m12__ * [((id<PythagorasDIVector3>) NIL_CHK(point)) y] + m22__ * [((id<PythagorasDIVector3>) NIL_CHK(point)) z] + m32__;
}

- (PythagorasDVector3 *)transformVectorLocalWithPythagorasDVector3:(PythagorasDVector3 *)vector {
  return [self transformVectorWithPythagorasDIVector3:vector withPythagorasDVector3:vector];
}

- (PythagorasDVector3 *)transformVectorWithPythagorasDIVector3:(id<PythagorasDIVector3>)vector {
  return [self transformVectorWithPythagorasDIVector3:vector withPythagorasDVector3:[[[PythagorasDVector3 alloc] init] autorelease]];
}

- (PythagorasDVector3 *)transformVectorWithPythagorasDIVector3:(id<PythagorasDIVector3>)vector
                                        withPythagorasDVector3:(PythagorasDVector3 *)result {
  double vx = [((id<PythagorasDIVector3>) NIL_CHK(vector)) x], vy = [((id<PythagorasDIVector3>) NIL_CHK(vector)) y], vz = [((id<PythagorasDIVector3>) NIL_CHK(vector)) z];
  return [((PythagorasDVector3 *) NIL_CHK(result)) setWithDouble:m00__ * vx + m10__ * vy + m20__ * vz withDouble:m01__ * vx + m11__ * vy + m21__ * vz withDouble:m02__ * vx + m12__ * vy + m22__ * vz];
}

- (PythagorasDVector4 *)transformWithPythagorasDIVector4:(id<PythagorasDIVector4>)vector {
  return [self transformWithPythagorasDIVector4:vector withPythagorasDVector4:[[[PythagorasDVector4 alloc] init] autorelease]];
}

- (PythagorasDVector4 *)transformWithPythagorasDIVector4:(id<PythagorasDIVector4>)vector
                                  withPythagorasDVector4:(PythagorasDVector4 *)result {
  double vx = [((id<PythagorasDIVector4>) NIL_CHK(vector)) x], vy = [((id<PythagorasDIVector4>) NIL_CHK(vector)) y], vz = [((id<PythagorasDIVector4>) NIL_CHK(vector)) z], vw = [((id<PythagorasDIVector4>) NIL_CHK(vector)) w];
  return [((PythagorasDVector4 *) NIL_CHK(result)) setWithDouble:m00__ * vx + m10__ * vy + m20__ * vz + m30__ * vw withDouble:m01__ * vx + m11__ * vy + m21__ * vz + m31__ * vw withDouble:m02__ * vx + m12__ * vy + m22__ * vz + m32__ * vw withDouble:m03__ * vx + m13__ * vy + m23__ * vz + m33__ * vw];
}

- (PythagorasDQuaternion *)extractRotation {
  return [self extractRotationWithPythagorasDQuaternion:[[[PythagorasDQuaternion alloc] init] autorelease]];
}

- (PythagorasDQuaternion *)extractRotationWithPythagorasDQuaternion:(PythagorasDQuaternion *)result {
  double n00 = self.m00_, n10 = self.m10_, n20 = self.m20_;
  double n01 = self.m01_, n11 = self.m11_, n21 = self.m21_;
  double n02 = self.m02_, n12 = self.m12_, n22 = self.m22_;
  for (int ii = 0; ii < 10; ii++) {
    double o00 = n00, o10 = n10, o20 = n20;
    double o01 = n01, o11 = n11, o21 = n21;
    double o02 = n02, o12 = n12, o22 = n22;
    double sd00 = o11 * o22 - o21 * o12;
    double sd10 = o01 * o22 - o21 * o02;
    double sd20 = o01 * o12 - o11 * o02;
    double det = o00 * sd00 + o20 * sd20 - o10 * sd10;
    if ([JavaLangMath absWithDouble:det] == 0.0f) {
      @throw [[[PythagorasUtilSingularMatrixException alloc] initWithNSString:[self description]] autorelease];
    }
    double hrdet = 0.5f / det;
    n00 = +sd00 * hrdet + o00 * 0.5f;
    n10 = -sd10 * hrdet + o10 * 0.5f;
    n20 = +sd20 * hrdet + o20 * 0.5f;
    n01 = -(o10 * o22 - o20 * o12) * hrdet + o01 * 0.5f;
    n11 = +(o00 * o22 - o20 * o02) * hrdet + o11 * 0.5f;
    n21 = -(o00 * o12 - o10 * o02) * hrdet + o21 * 0.5f;
    n02 = +(o10 * o21 - o20 * o11) * hrdet + o02 * 0.5f;
    n12 = -(o00 * o21 - o20 * o01) * hrdet + o12 * 0.5f;
    n22 = +(o00 * o11 - o10 * o01) * hrdet + o22 * 0.5f;
    double d00 = n00 - o00, d10 = n10 - o10, d20 = n20 - o20;
    double d01 = n01 - o01, d11 = n11 - o11, d21 = n21 - o21;
    double d02 = n02 - o02, d12 = n12 - o12, d22 = n22 - o22;
    if (d00 * d00 + d10 * d10 + d20 * d20 + d01 * d01 + d11 * d11 + d21 * d21 + d02 * d02 + d12 * d12 + d22 * d22 < PythagorasDMathUtil_EPSILON) {
      break;
    }
  }
  double x2 = [JavaLangMath absWithDouble:1.0f + n00 - n11 - n22];
  double y2 = [JavaLangMath absWithDouble:1.0f - n00 + n11 - n22];
  double z2 = [JavaLangMath absWithDouble:1.0f - n00 - n11 + n22];
  double w2 = [JavaLangMath absWithDouble:1.0f + n00 + n11 + n22];
  (void) [((PythagorasDQuaternion *) NIL_CHK(result)) setWithDouble:0.5f * [JavaLangMath sqrtWithDouble:x2] * (n12 >= n21 ? +1.0f : -1.0f) withDouble:0.5f * [JavaLangMath sqrtWithDouble:y2] * (n20 >= n02 ? +1.0f : -1.0f) withDouble:0.5f * [JavaLangMath sqrtWithDouble:z2] * (n01 >= n10 ? +1.0f : -1.0f) withDouble:0.5f * [JavaLangMath sqrtWithDouble:w2]];
  return result;
}

- (PythagorasDMatrix3 *)extractRotationScaleWithPythagorasDMatrix3:(PythagorasDMatrix3 *)result {
  return [((PythagorasDMatrix3 *) NIL_CHK(result)) setWithDouble:m00__ withDouble:m01__ withDouble:m02__ withDouble:m10__ withDouble:m11__ withDouble:m12__ withDouble:m20__ withDouble:m21__ withDouble:m22__];
}

- (PythagorasDVector3 *)extractScale {
  return [self extractScaleWithPythagorasDVector3:[[[PythagorasDVector3 alloc] init] autorelease]];
}

- (PythagorasDVector3 *)extractScaleWithPythagorasDVector3:(PythagorasDVector3 *)result {
  return [((PythagorasDVector3 *) NIL_CHK(result)) setWithDouble:[JavaLangMath sqrtWithDouble:m00__ * m00__ + m01__ * m01__ + m02__ * m02__] withDouble:[JavaLangMath sqrtWithDouble:m10__ * m10__ + m11__ * m11__ + m12__ * m12__] withDouble:[JavaLangMath sqrtWithDouble:m20__ * m20__ + m21__ * m21__ + m22__ * m22__]];
}

- (double)approximateUniformScale {
  return [JavaLangMath cbrtWithDouble:m00__ * (m11__ * m22__ - m12__ * m21__) + m01__ * (m12__ * m20__ - m10__ * m22__) + m02__ * (m10__ * m21__ - m11__ * m20__)];
}

- (BOOL)epsilonEqualsWithPythagorasDIMatrix4:(id<PythagorasDIMatrix4>)other
                                  withDouble:(double)epsilon {
  return ([JavaLangMath absWithDouble:m00__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m00]] < epsilon && [JavaLangMath absWithDouble:m10__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m10]] < epsilon && [JavaLangMath absWithDouble:m20__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m20]] < epsilon && [JavaLangMath absWithDouble:m30__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m30]] < epsilon && [JavaLangMath absWithDouble:m01__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m01]] < epsilon && [JavaLangMath absWithDouble:m11__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m11]] < epsilon && [JavaLangMath absWithDouble:m21__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m21]] < epsilon && [JavaLangMath absWithDouble:m31__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m31]] < epsilon && [JavaLangMath absWithDouble:m02__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m02]] < epsilon && [JavaLangMath absWithDouble:m12__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m12]] < epsilon && [JavaLangMath absWithDouble:m22__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m22]] < epsilon && [JavaLangMath absWithDouble:m32__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m32]] < epsilon && [JavaLangMath absWithDouble:m03__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m03]] < epsilon && [JavaLangMath absWithDouble:m13__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m13]] < epsilon && [JavaLangMath absWithDouble:m23__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m23]] < epsilon && [JavaLangMath absWithDouble:m33__ - [((id<PythagorasDIMatrix4>) NIL_CHK(other)) m33]] < epsilon);
}

- (NSString *)description {
  return ([NSString stringWithFormat:@"[[%f, %f, %f, %f], [%f, %f, %f, %f], [%f, %f, %f, %f], [%f, %f, %f, %f]]", m00__, m10__, m20__, m30__, m01__, m11__, m21__, m31__, m02__, m12__, m22__, m32__, m03__, m13__, m23__, m33__]);
}

- (NSUInteger)hash {
  return [PythagorasUtilPlatform hashCodeWithDouble:m00__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m10__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m20__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m30__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m01__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m11__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m21__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m31__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m02__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m12__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m22__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m32__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m03__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m13__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m23__] ^ [PythagorasUtilPlatform hashCodeWithDouble:m33__];
}

- (BOOL)isEqual:(id)other {
  if (!([other isKindOfClass:[PythagorasDMatrix4 class]])) {
    return NO;
  }
  PythagorasDMatrix4 *omat = (PythagorasDMatrix4 *) other;
  return (m00__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m00_ && m10__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m10_ && m20__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m20_ && m30__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m30_ && m01__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m01_ && m11__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m11_ && m21__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m21_ && m31__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m31_ && m02__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m02_ && m12__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m12_ && m22__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m22_ && m32__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m32_ && m03__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m03_ && m13__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m13_ && m23__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m23_ && m33__ == ((PythagorasDMatrix4 *) NIL_CHK(omat)).m33_);
}

+ (void)initialize {
  if (self == [PythagorasDMatrix4 class]) {
    JreOperatorRetainedAssign(&PythagorasDMatrix4_IDENTITY_, self, [[[PythagorasDMatrix4 alloc] init] autorelease]);
    JreOperatorRetainedAssign(&PythagorasDMatrix4_EMPTY_ARRAY_, self, [[[IOSObjectArray alloc] initWithLength:0 type:[IOSClass classWithClass:[PythagorasDMatrix4 class]]] autorelease]);
  }
}

- (void)dealloc {
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PythagorasDMatrix4 *typedCopy = (PythagorasDMatrix4 *) copy;
  typedCopy.m00_ = m00__;
  typedCopy.m10_ = m10__;
  typedCopy.m20_ = m20__;
  typedCopy.m30_ = m30__;
  typedCopy.m01_ = m01__;
  typedCopy.m11_ = m11__;
  typedCopy.m21_ = m21__;
  typedCopy.m31_ = m31__;
  typedCopy.m02_ = m02__;
  typedCopy.m12_ = m12__;
  typedCopy.m22_ = m22__;
  typedCopy.m32_ = m32__;
  typedCopy.m03_ = m03__;
  typedCopy.m13_ = m13__;
  typedCopy.m23_ = m23__;
  typedCopy.m33_ = m33__;
}

@end
