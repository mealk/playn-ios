//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/d/CubicCurve.java
//
//  Created by Thomas on 7/1/13.
//

#import "ICubicCurve.h"
#import "IOSDoubleArray.h"
#import "IOSObjectArray.h"
#import "IPoint.h"
#import "CubicCurve.h"

@implementation PythagorasDCubicCurve

@synthesize x1_ = x1__;
@synthesize y1_ = y1__;
@synthesize ctrlx1 = ctrlx1_;
@synthesize ctrly1 = ctrly1_;
@synthesize ctrlx2 = ctrlx2_;
@synthesize ctrly2 = ctrly2_;
@synthesize x2_ = x2__;
@synthesize y2_ = y2__;

- (id)init {
  return [super init];
}

- (id)initWithDouble:(double)x1
          withDouble:(double)y1
          withDouble:(double)ctrlx1
          withDouble:(double)ctrly1
          withDouble:(double)ctrlx2
          withDouble:(double)ctrly2
          withDouble:(double)x2
          withDouble:(double)y2 {
  if ((self = [super init])) {
    [self setCurveWithDouble:x1 withDouble:y1 withDouble:ctrlx1 withDouble:ctrly1 withDouble:ctrlx2 withDouble:ctrly2 withDouble:x2 withDouble:y2];
  }
  return self;
}

- (void)setCurveWithDouble:(double)x1
                withDouble:(double)y1
                withDouble:(double)ctrlx1
                withDouble:(double)ctrly1
                withDouble:(double)ctrlx2
                withDouble:(double)ctrly2
                withDouble:(double)x2
                withDouble:(double)y2 {
  self.x1_ = x1;
  self.y1_ = y1;
  self.ctrlx1 = ctrlx1;
  self.ctrly1 = ctrly1;
  self.ctrlx2 = ctrlx2;
  self.ctrly2 = ctrly2;
  self.x2_ = x2;
  self.y2_ = y2;
}

- (void)setCurveWithPythagorasDIPoint:(id<PythagorasDIPoint>)p1
                withPythagorasDIPoint:(id<PythagorasDIPoint>)cp1
                withPythagorasDIPoint:(id<PythagorasDIPoint>)cp2
                withPythagorasDIPoint:(id<PythagorasDIPoint>)p2 {
  [self setCurveWithDouble:[((id<PythagorasDIPoint>) NIL_CHK(p1)) x] withDouble:[((id<PythagorasDIPoint>) NIL_CHK(p1)) y] withDouble:[((id<PythagorasDIPoint>) NIL_CHK(cp1)) x] withDouble:[((id<PythagorasDIPoint>) NIL_CHK(cp1)) y] withDouble:[((id<PythagorasDIPoint>) NIL_CHK(cp2)) x] withDouble:[((id<PythagorasDIPoint>) NIL_CHK(cp2)) y] withDouble:[((id<PythagorasDIPoint>) NIL_CHK(p2)) x] withDouble:[((id<PythagorasDIPoint>) NIL_CHK(p2)) y]];
}

- (void)setCurveWithJavaLangDoubleArray:(IOSDoubleArray *)coords
                                withInt:(int)offset {
  [self setCurveWithDouble:[((IOSDoubleArray *) NIL_CHK(coords)) doubleAtIndex:offset + 0] withDouble:[((IOSDoubleArray *) NIL_CHK(coords)) doubleAtIndex:offset + 1] withDouble:[((IOSDoubleArray *) NIL_CHK(coords)) doubleAtIndex:offset + 2] withDouble:[((IOSDoubleArray *) NIL_CHK(coords)) doubleAtIndex:offset + 3] withDouble:[((IOSDoubleArray *) NIL_CHK(coords)) doubleAtIndex:offset + 4] withDouble:[((IOSDoubleArray *) NIL_CHK(coords)) doubleAtIndex:offset + 5] withDouble:[((IOSDoubleArray *) NIL_CHK(coords)) doubleAtIndex:offset + 6] withDouble:[((IOSDoubleArray *) NIL_CHK(coords)) doubleAtIndex:offset + 7]];
}

- (void)setCurveWithPythagorasDIPointArray:(IOSObjectArray *)points
                                   withInt:(int)offset {
  [self setCurveWithDouble:[((id<PythagorasDIPoint>) [((IOSObjectArray *) NIL_CHK(points)) objectAtIndex:offset + 0]) x] withDouble:[((id<PythagorasDIPoint>) [((IOSObjectArray *) NIL_CHK(points)) objectAtIndex:offset + 0]) y] withDouble:[((id<PythagorasDIPoint>) [((IOSObjectArray *) NIL_CHK(points)) objectAtIndex:offset + 1]) x] withDouble:[((id<PythagorasDIPoint>) [((IOSObjectArray *) NIL_CHK(points)) objectAtIndex:offset + 1]) y] withDouble:[((id<PythagorasDIPoint>) [((IOSObjectArray *) NIL_CHK(points)) objectAtIndex:offset + 2]) x] withDouble:[((id<PythagorasDIPoint>) [((IOSObjectArray *) NIL_CHK(points)) objectAtIndex:offset + 2]) y] withDouble:[((id<PythagorasDIPoint>) [((IOSObjectArray *) NIL_CHK(points)) objectAtIndex:offset + 3]) x] withDouble:[((id<PythagorasDIPoint>) [((IOSObjectArray *) NIL_CHK(points)) objectAtIndex:offset + 3]) y]];
}

- (void)setCurveWithPythagorasDICubicCurve:(id<PythagorasDICubicCurve>)curve {
  [self setCurveWithDouble:[((id<PythagorasDICubicCurve>) NIL_CHK(curve)) x1] withDouble:[((id<PythagorasDICubicCurve>) NIL_CHK(curve)) y1] withDouble:[((id<PythagorasDICubicCurve>) NIL_CHK(curve)) ctrlX1] withDouble:[((id<PythagorasDICubicCurve>) NIL_CHK(curve)) ctrlY1] withDouble:[((id<PythagorasDICubicCurve>) NIL_CHK(curve)) ctrlX2] withDouble:[((id<PythagorasDICubicCurve>) NIL_CHK(curve)) ctrlY2] withDouble:[((id<PythagorasDICubicCurve>) NIL_CHK(curve)) x2] withDouble:[((id<PythagorasDICubicCurve>) NIL_CHK(curve)) y2]];
}

- (double)x1 {
  return x1__;
}

- (double)y1 {
  return y1__;
}

- (double)ctrlX1 {
  return ctrlx1_;
}

- (double)ctrlY1 {
  return ctrly1_;
}

- (double)ctrlX2 {
  return ctrlx2_;
}

- (double)ctrlY2 {
  return ctrly2_;
}

- (double)x2 {
  return x2__;
}

- (double)y2 {
  return y2__;
}

- (void)dealloc {
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PythagorasDCubicCurve *typedCopy = (PythagorasDCubicCurve *) copy;
  typedCopy.x1_ = x1__;
  typedCopy.y1_ = y1__;
  typedCopy.ctrlx1 = ctrlx1_;
  typedCopy.ctrly1 = ctrly1_;
  typedCopy.ctrlx2 = ctrlx2_;
  typedCopy.ctrly2 = ctrly2_;
  typedCopy.x2_ = x2__;
  typedCopy.y2_ = y2__;
}

@end
