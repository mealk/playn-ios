//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/d/AbstractArc.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !PythagorasDAbstractArc_RESTRICT
#define PythagorasDAbstractArc_INCLUDE_ALL 1
#endif
#undef PythagorasDAbstractArc_RESTRICT

#if !defined (_PythagorasDAbstractArc_) && (PythagorasDAbstractArc_INCLUDE_ALL || PythagorasDAbstractArc_INCLUDE)
#define _PythagorasDAbstractArc_

@class PythagorasDArc;
@class PythagorasDPoint;
@class PythagorasDRectangle;
@protocol PythagorasDPathIterator;
@protocol PythagorasDTransform;

#define PythagorasDRectangularShape_RESTRICT 1
#define PythagorasDRectangularShape_INCLUDE 1
#include "pythagoras/d/RectangularShape.h"

#define PythagorasDIArc_RESTRICT 1
#define PythagorasDIArc_INCLUDE 1
#include "pythagoras/d/IArc.h"

@interface PythagorasDAbstractArc : PythagorasDRectangularShape < PythagorasDIArc > {
}

- (PythagorasDPoint *)startPoint;
- (PythagorasDPoint *)startPointWithPythagorasDPoint:(PythagorasDPoint *)target;
- (PythagorasDPoint *)endPoint;
- (PythagorasDPoint *)endPointWithPythagorasDPoint:(PythagorasDPoint *)target;
- (BOOL)containsAngleWithDouble:(double)angle;
- (PythagorasDArc *)clone;
- (BOOL)isEmpty;
- (BOOL)containsWithDouble:(double)px
                withDouble:(double)py;
- (BOOL)containsWithDouble:(double)rx
                withDouble:(double)ry
                withDouble:(double)rw
                withDouble:(double)rh;
- (BOOL)intersectsWithDouble:(double)rx
                  withDouble:(double)ry
                  withDouble:(double)rw
                  withDouble:(double)rh;
- (PythagorasDRectangle *)boundsWithPythagorasDRectangle:(PythagorasDRectangle *)target;
- (id<PythagorasDPathIterator>)pathIteratorWithPythagorasDTransform:(id<PythagorasDTransform>)at;
- (double)normAngleWithDouble:(double)angle;
- (double)angleExtent;
- (double)angleStart;
- (int)arcType;
- (double)height;
- (double)width;
- (double)x;
- (double)y;
- (id)init;
- (id)copyWithZone:(NSZone *)zone;
@end
#endif

#if !defined (_PythagorasDAbstractArc_Iterator_) && (PythagorasDAbstractArc_INCLUDE_ALL || PythagorasDAbstractArc_Iterator_INCLUDE)
#define _PythagorasDAbstractArc_Iterator_

@class IOSDoubleArray;
@protocol PythagorasDIArc;
@protocol PythagorasDTransform;

#define PythagorasDPathIterator_RESTRICT 1
#define PythagorasDPathIterator_INCLUDE 1
#include "pythagoras/d/PathIterator.h"

@interface PythagorasDAbstractArc_Iterator : NSObject < PythagorasDPathIterator > {
 @public
  double x_;
  double y_;
  double width_;
  double height_;
  double angle_;
  double extent_;
  int type_;
  id<PythagorasDTransform> t_;
  int index_;
  int arcCount_;
  int lineCount_;
  double step_;
  double cos_;
  double sin_;
  double k_;
  double kx_;
  double ky_;
  double mx_;
  double my_;
}

@property (nonatomic, assign) double x;
@property (nonatomic, assign) double y;
@property (nonatomic, assign) double width;
@property (nonatomic, assign) double height;
@property (nonatomic, assign) double angle;
@property (nonatomic, assign) double extent;
@property (nonatomic, assign) int type;
@property (nonatomic, strong) id<PythagorasDTransform> t;
@property (nonatomic, assign) int index;
@property (nonatomic, assign) int arcCount;
@property (nonatomic, assign) int lineCount;
@property (nonatomic, assign) double step;
@property (nonatomic, assign) double cos;
@property (nonatomic, assign) double sin;
@property (nonatomic, assign) double k;
@property (nonatomic, assign) double kx;
@property (nonatomic, assign) double ky;
@property (nonatomic, assign) double mx;
@property (nonatomic, assign) double my;

- (id)initWithPythagorasDIArc:(id<PythagorasDIArc>)a
     withPythagorasDTransform:(id<PythagorasDTransform>)t;
- (int)windingRule;
- (BOOL)isDone;
- (void)next;
- (int)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;
@end
#endif
