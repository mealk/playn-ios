//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/d/Vector3.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !PythagorasDVector3_RESTRICT
#define PythagorasDVector3_INCLUDE_ALL 1
#endif
#undef PythagorasDVector3_RESTRICT

#if !defined (_PythagorasDVector3_) && (PythagorasDVector3_INCLUDE_ALL || PythagorasDVector3_INCLUDE)
#define _PythagorasDVector3_

@class IOSDoubleArray;
@class JavaNioDoubleBuffer;

#define PythagorasDIVector3_RESTRICT 1
#define PythagorasDIVector3_INCLUDE 1
#include "pythagoras/d/IVector3.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"

@interface PythagorasDVector3 : NSObject < PythagorasDIVector3, JavaIoSerializable > {
 @public
  double x__, y__, z__;
}

@property (nonatomic, assign) double x_;
@property (nonatomic, assign) double y_;
@property (nonatomic, assign) double z_;

+ (id<PythagorasDIVector3>)UNIT_X;
+ (id<PythagorasDIVector3>)UNIT_Y;
+ (id<PythagorasDIVector3>)UNIT_Z;
+ (id<PythagorasDIVector3>)UNIT_XYZ;
+ (id<PythagorasDIVector3>)NORMAL_XYZ;
+ (id<PythagorasDIVector3>)ZERO;
+ (id<PythagorasDIVector3>)MIN_VALUE;
+ (id<PythagorasDIVector3>)MAX_VALUE;
- (id)initWithDouble:(double)x
          withDouble:(double)y
          withDouble:(double)z;
- (id)initWithDoubleArray:(IOSDoubleArray *)values;
- (id)initWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (id)init;
- (PythagorasDVector3 *)crossLocalWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)negateLocal;
- (PythagorasDVector3 *)absLocal;
- (PythagorasDVector3 *)normalizeLocal;
- (PythagorasDVector3 *)multLocalWithDouble:(double)v;
- (PythagorasDVector3 *)multLocalWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)addLocalWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)subtractLocalWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)addLocalWithDouble:(double)x
                                withDouble:(double)y
                                withDouble:(double)z;
- (PythagorasDVector3 *)addScaledLocalWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                                                   withDouble:(double)v;
- (PythagorasDVector3 *)lerpLocalWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                                              withDouble:(double)t;
- (PythagorasDVector3 *)setWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)setWithDoubleArray:(IOSDoubleArray *)values;
- (PythagorasDVector3 *)setWithDouble:(double)x
                           withDouble:(double)y
                           withDouble:(double)z;
- (double)x;
- (double)y;
- (double)z;
- (double)dotWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)crossWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)crossWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                              withPythagorasDVector3:(PythagorasDVector3 *)result;
- (double)tripleWithPythagorasDIVector3:(id<PythagorasDIVector3>)b
                withPythagorasDIVector3:(id<PythagorasDIVector3>)c;
- (PythagorasDVector3 *)negate;
- (PythagorasDVector3 *)negateWithPythagorasDVector3:(PythagorasDVector3 *)result;
- (PythagorasDVector3 *)abs;
- (PythagorasDVector3 *)absWithPythagorasDVector3:(PythagorasDVector3 *)result;
- (PythagorasDVector3 *)normalize;
- (PythagorasDVector3 *)normalizeWithPythagorasDVector3:(PythagorasDVector3 *)result;
- (double)angleWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (double)length;
- (double)lengthSquared;
- (double)distanceWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (double)distanceSquaredWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (double)manhattanDistanceWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)multWithDouble:(double)v;
- (PythagorasDVector3 *)multWithDouble:(double)v
                withPythagorasDVector3:(PythagorasDVector3 *)result;
- (PythagorasDVector3 *)multWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)multWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                             withPythagorasDVector3:(PythagorasDVector3 *)result;
- (PythagorasDVector3 *)addWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)addWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                            withPythagorasDVector3:(PythagorasDVector3 *)result;
- (PythagorasDVector3 *)subtractWithPythagorasDIVector3:(id<PythagorasDIVector3>)other;
- (PythagorasDVector3 *)subtractWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                                 withPythagorasDVector3:(PythagorasDVector3 *)result;
- (PythagorasDVector3 *)addWithDouble:(double)x
                           withDouble:(double)y
                           withDouble:(double)z;
- (PythagorasDVector3 *)addWithDouble:(double)x
                           withDouble:(double)y
                           withDouble:(double)z
               withPythagorasDVector3:(PythagorasDVector3 *)result;
- (PythagorasDVector3 *)addScaledWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                                              withDouble:(double)v;
- (PythagorasDVector3 *)addScaledWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                                              withDouble:(double)v
                                  withPythagorasDVector3:(PythagorasDVector3 *)result;
- (PythagorasDVector3 *)lerpWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                                         withDouble:(double)t;
- (PythagorasDVector3 *)lerpWithPythagorasDIVector3:(id<PythagorasDIVector3>)other
                                         withDouble:(double)t
                             withPythagorasDVector3:(PythagorasDVector3 *)result;
- (double)getWithInt:(int)idx;
- (void)getWithDoubleArray:(IOSDoubleArray *)values;
- (JavaNioDoubleBuffer *)getWithJavaNioDoubleBuffer:(JavaNioDoubleBuffer *)buf;
- (NSString *)description;
- (NSUInteger)hash;
- (BOOL)isEqual:(id)other;
@end
#endif
