//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/d/AbstractDimension.java
//
//  Created by Thomas on 7/25/13.
//

#include "pythagoras/d/AbstractDimension.h"
#include "pythagoras/d/Dimension.h"
#include "pythagoras/d/Dimensions.h"
#include "pythagoras/d/IDimension.h"
#include "pythagoras/util/Platform.h"

@implementation PythagorasDAbstractDimension

- (PythagorasDDimension *)clone {
  return [[PythagorasDDimension alloc] initWithPythagorasDIDimension:self];
}

- (NSUInteger)hash {
  return [PythagorasUtilPlatform hashCodeWithDouble:[self width]] ^ [PythagorasUtilPlatform hashCodeWithDouble:[self height]];
}

- (BOOL)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([obj isKindOfClass:[PythagorasDAbstractDimension class]]) {
    PythagorasDAbstractDimension *d = (PythagorasDAbstractDimension *) obj;
    return ([((PythagorasDAbstractDimension *) nil_chk(d)) width] == [self width] && [((PythagorasDAbstractDimension *) nil_chk(d)) height] == [self height]);
  }
  return NO;
}

- (NSString *)description {
  return [PythagorasDDimensions dimenToStringWithDouble:[self width] withDouble:[self height]];
}

- (double)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (double)width {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)init {
  return [super init];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

@end
