//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/d/Point.java
//
//  Created by Thomas on 7/25/13.
//

#include "pythagoras/d/AbstractPoint.h"
#include "pythagoras/d/IPoint.h"
#include "pythagoras/d/Point.h"

@implementation PythagorasDPoint

@synthesize x_ = x__;
@synthesize y_ = y__;

- (id)init {
  return [super init];
}

- (id)initWithDouble:(double)x
          withDouble:(double)y {
  if ((self = [super init])) {
    (void) [self setWithDouble:x withDouble:y];
  }
  return self;
}

- (id)initWithPythagorasDIPoint:(id<PythagorasDIPoint>)p {
  if ((self = [super init])) {
    (void) [self setWithDouble:[((id<PythagorasDIPoint>) nil_chk(p)) x] withDouble:[((id<PythagorasDIPoint>) nil_chk(p)) y]];
  }
  return self;
}

- (PythagorasDPoint *)setWithPythagorasDIPoint:(id<PythagorasDIPoint>)p {
  return [self setWithDouble:[((id<PythagorasDIPoint>) nil_chk(p)) x] withDouble:[((id<PythagorasDIPoint>) nil_chk(p)) y]];
}

- (PythagorasDPoint *)setWithDouble:(double)x
                         withDouble:(double)y {
  self.x_ = x;
  self.y_ = y;
  return self;
}

- (PythagorasDPoint *)multLocalWithDouble:(double)s {
  return [self multWithDouble:s withPythagorasDPoint:self];
}

- (PythagorasDPoint *)addLocalWithDouble:(double)dx
                              withDouble:(double)dy {
  return [self addWithDouble:dx withDouble:dy withPythagorasDPoint:self];
}

- (PythagorasDPoint *)rotateLocalWithDouble:(double)angle {
  return [self rotateWithDouble:angle withPythagorasDPoint:self];
}

- (PythagorasDPoint *)subtractLocalWithDouble:(double)x
                                   withDouble:(double)y {
  return [self subtractWithDouble:x withDouble:y withPythagorasDPoint:self];
}

- (double)x {
  return x__;
}

- (double)y {
  return y__;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PythagorasDPoint *typedCopy = (PythagorasDPoint *) copy;
  typedCopy.x_ = x__;
  typedCopy.y_ = y__;
}

@end
