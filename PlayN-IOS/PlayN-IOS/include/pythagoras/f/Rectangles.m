//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/f/Rectangles.java
//
//  Created by Thomas on 7/25/13.
//

#include "java/lang/Math.h"
#include "pythagoras/f/FloatMath.h"
#include "pythagoras/f/IPoint.h"
#include "pythagoras/f/IRectangle.h"
#include "pythagoras/f/MathUtil.h"
#include "pythagoras/f/Point.h"
#include "pythagoras/f/Points.h"
#include "pythagoras/f/Rectangle.h"
#include "pythagoras/f/Rectangles.h"

@implementation PythagorasFRectangles

+ (void)intersectWithPythagorasFIRectangle:(id<PythagorasFIRectangle>)src1
                 withPythagorasFIRectangle:(id<PythagorasFIRectangle>)src2
                  withPythagorasFRectangle:(PythagorasFRectangle *)dst {
  float x1 = [JavaLangMath maxWithFloat:[((id<PythagorasFIRectangle>) nil_chk(src1)) minX] withFloat:[((id<PythagorasFIRectangle>) nil_chk(src2)) minX]];
  float y1 = [JavaLangMath maxWithFloat:[((id<PythagorasFIRectangle>) nil_chk(src1)) minY] withFloat:[((id<PythagorasFIRectangle>) nil_chk(src2)) minY]];
  float x2 = [JavaLangMath minWithFloat:[((id<PythagorasFIRectangle>) nil_chk(src1)) maxX] withFloat:[((id<PythagorasFIRectangle>) nil_chk(src2)) maxX]];
  float y2 = [JavaLangMath minWithFloat:[((id<PythagorasFIRectangle>) nil_chk(src1)) maxY] withFloat:[((id<PythagorasFIRectangle>) nil_chk(src2)) maxY]];
  [((PythagorasFRectangle *) nil_chk(dst)) setBoundsWithFloat:x1 withFloat:y1 withFloat:x2 - x1 withFloat:y2 - y1];
}

+ (void)union__WithPythagorasFIRectangle:(id<PythagorasFIRectangle>)src1
               withPythagorasFIRectangle:(id<PythagorasFIRectangle>)src2
                withPythagorasFRectangle:(PythagorasFRectangle *)dst {
  float x1 = [JavaLangMath minWithFloat:[((id<PythagorasFIRectangle>) nil_chk(src1)) minX] withFloat:[((id<PythagorasFIRectangle>) nil_chk(src2)) minX]];
  float y1 = [JavaLangMath minWithFloat:[((id<PythagorasFIRectangle>) nil_chk(src1)) minY] withFloat:[((id<PythagorasFIRectangle>) nil_chk(src2)) minY]];
  float x2 = [JavaLangMath maxWithFloat:[((id<PythagorasFIRectangle>) nil_chk(src1)) maxX] withFloat:[((id<PythagorasFIRectangle>) nil_chk(src2)) maxX]];
  float y2 = [JavaLangMath maxWithFloat:[((id<PythagorasFIRectangle>) nil_chk(src1)) maxY] withFloat:[((id<PythagorasFIRectangle>) nil_chk(src2)) maxY]];
  [((PythagorasFRectangle *) nil_chk(dst)) setBoundsWithFloat:x1 withFloat:y1 withFloat:x2 - x1 withFloat:y2 - y1];
}

+ (PythagorasFPoint *)closestInteriorPointWithPythagorasFIRectangle:(id<PythagorasFIRectangle>)r
                                              withPythagorasFIPoint:(id<PythagorasFIPoint>)p
                                               withPythagorasFPoint:(PythagorasFPoint *)outArg {
  (void) [((PythagorasFPoint *) nil_chk(outArg)) setWithFloat:[PythagorasFMathUtil clampWithFloat:[((id<PythagorasFIPoint>) nil_chk(p)) x] withFloat:[((id<PythagorasFIRectangle>) nil_chk(r)) minX] withFloat:[((id<PythagorasFIRectangle>) nil_chk(r)) maxX]] withFloat:[PythagorasFMathUtil clampWithFloat:[((id<PythagorasFIPoint>) nil_chk(p)) y] withFloat:[((id<PythagorasFIRectangle>) nil_chk(r)) minY] withFloat:[((id<PythagorasFIRectangle>) nil_chk(r)) maxY]]];
  return outArg;
}

+ (PythagorasFPoint *)closestInteriorPointWithPythagorasFIRectangle:(id<PythagorasFIRectangle>)r
                                              withPythagorasFIPoint:(id<PythagorasFIPoint>)p {
  return [PythagorasFRectangles closestInteriorPointWithPythagorasFIRectangle:r withPythagorasFIPoint:p withPythagorasFPoint:[[PythagorasFPoint alloc] init]];
}

+ (float)pointRectDistanceSqWithPythagorasFIRectangle:(id<PythagorasFIRectangle>)r
                                withPythagorasFIPoint:(id<PythagorasFIPoint>)p {
  PythagorasFPoint *p2 = [PythagorasFRectangles closestInteriorPointWithPythagorasFIRectangle:r withPythagorasFIPoint:p];
  return [PythagorasFPoints distanceSqWithFloat:[((id<PythagorasFIPoint>) nil_chk(p)) x] withFloat:[((id<PythagorasFIPoint>) nil_chk(p)) y] withFloat:((PythagorasFPoint *) nil_chk(p2)).x_ withFloat:((PythagorasFPoint *) nil_chk(p2)).y_];
}

+ (float)pointRectDistanceWithPythagorasFIRectangle:(id<PythagorasFIRectangle>)r
                              withPythagorasFIPoint:(id<PythagorasFIPoint>)p {
  return [PythagorasFFloatMath sqrtWithFloat:[PythagorasFRectangles pointRectDistanceSqWithPythagorasFIRectangle:r withPythagorasFIPoint:p]];
}

- (id)init {
  return [super init];
}

@end
