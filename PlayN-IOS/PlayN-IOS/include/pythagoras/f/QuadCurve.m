//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/f/QuadCurve.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSFloatArray.h"
#include "IOSObjectArray.h"
#include "pythagoras/f/IPoint.h"
#include "pythagoras/f/IQuadCurve.h"
#include "pythagoras/f/QuadCurve.h"

@implementation PythagorasFQuadCurve

@synthesize x1_ = x1__;
@synthesize y1_ = y1__;
@synthesize ctrlx = ctrlx_;
@synthesize ctrly = ctrly_;
@synthesize x2_ = x2__;
@synthesize y2_ = y2__;

- (id)init {
  return [super init];
}

- (id)initWithFloat:(float)x1
          withFloat:(float)y1
          withFloat:(float)ctrlx
          withFloat:(float)ctrly
          withFloat:(float)x2
          withFloat:(float)y2 {
  if ((self = [super init])) {
    [self setCurveWithFloat:x1 withFloat:y1 withFloat:ctrlx withFloat:ctrly withFloat:x2 withFloat:y2];
  }
  return self;
}

- (void)setCurveWithFloat:(float)x1
                withFloat:(float)y1
                withFloat:(float)ctrlx
                withFloat:(float)ctrly
                withFloat:(float)x2
                withFloat:(float)y2 {
  self.x1_ = x1;
  self.y1_ = y1;
  self.ctrlx = ctrlx;
  self.ctrly = ctrly;
  self.x2_ = x2;
  self.y2_ = y2;
}

- (void)setCurveWithPythagorasFIPoint:(id<PythagorasFIPoint>)p1
                withPythagorasFIPoint:(id<PythagorasFIPoint>)cp
                withPythagorasFIPoint:(id<PythagorasFIPoint>)p2 {
  [self setCurveWithFloat:[((id<PythagorasFIPoint>) nil_chk(p1)) x] withFloat:[((id<PythagorasFIPoint>) nil_chk(p1)) y] withFloat:[((id<PythagorasFIPoint>) nil_chk(cp)) x] withFloat:[((id<PythagorasFIPoint>) nil_chk(cp)) y] withFloat:[((id<PythagorasFIPoint>) nil_chk(p2)) x] withFloat:[((id<PythagorasFIPoint>) nil_chk(p2)) y]];
}

- (void)setCurveWithFloatArray:(IOSFloatArray *)coords
                       withInt:(int)offset {
  [self setCurveWithFloat:[((IOSFloatArray *) nil_chk(coords)) floatAtIndex:offset + 0] withFloat:[((IOSFloatArray *) nil_chk(coords)) floatAtIndex:offset + 1] withFloat:[((IOSFloatArray *) nil_chk(coords)) floatAtIndex:offset + 2] withFloat:[((IOSFloatArray *) nil_chk(coords)) floatAtIndex:offset + 3] withFloat:[((IOSFloatArray *) nil_chk(coords)) floatAtIndex:offset + 4] withFloat:[((IOSFloatArray *) nil_chk(coords)) floatAtIndex:offset + 5]];
}

- (void)setCurveWithPythagorasFIPointArray:(IOSObjectArray *)points
                                   withInt:(int)offset {
  [self setCurveWithFloat:[((id<PythagorasFIPoint>) nil_chk([((IOSObjectArray *) nil_chk(points)) objectAtIndex:offset + 0])) x] withFloat:[((id<PythagorasFIPoint>) nil_chk([((IOSObjectArray *) nil_chk(points)) objectAtIndex:offset + 0])) y] withFloat:[((id<PythagorasFIPoint>) nil_chk([((IOSObjectArray *) nil_chk(points)) objectAtIndex:offset + 1])) x] withFloat:[((id<PythagorasFIPoint>) nil_chk([((IOSObjectArray *) nil_chk(points)) objectAtIndex:offset + 1])) y] withFloat:[((id<PythagorasFIPoint>) nil_chk([((IOSObjectArray *) nil_chk(points)) objectAtIndex:offset + 2])) x] withFloat:[((id<PythagorasFIPoint>) nil_chk([((IOSObjectArray *) nil_chk(points)) objectAtIndex:offset + 2])) y]];
}

- (void)setCurveWithPythagorasFIQuadCurve:(id<PythagorasFIQuadCurve>)curve {
  [self setCurveWithFloat:[((id<PythagorasFIQuadCurve>) nil_chk(curve)) x1] withFloat:[((id<PythagorasFIQuadCurve>) nil_chk(curve)) y1] withFloat:[((id<PythagorasFIQuadCurve>) nil_chk(curve)) ctrlX] withFloat:[((id<PythagorasFIQuadCurve>) nil_chk(curve)) ctrlY] withFloat:[((id<PythagorasFIQuadCurve>) nil_chk(curve)) x2] withFloat:[((id<PythagorasFIQuadCurve>) nil_chk(curve)) y2]];
}

- (float)x1 {
  return x1__;
}

- (float)y1 {
  return y1__;
}

- (float)ctrlX {
  return ctrlx_;
}

- (float)ctrlY {
  return ctrly_;
}

- (float)x2 {
  return x2__;
}

- (float)y2 {
  return y2__;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PythagorasFQuadCurve *typedCopy = (PythagorasFQuadCurve *) copy;
  typedCopy.x1_ = x1__;
  typedCopy.y1_ = y1__;
  typedCopy.ctrlx = ctrlx_;
  typedCopy.ctrly = ctrly_;
  typedCopy.x2_ = x2__;
  typedCopy.y2_ = y2__;
}

@end
