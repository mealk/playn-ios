//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/f/AbstractDimension.java
//
//  Created by Thomas on 7/10/13.
//

#import "pythagoras/f/AbstractDimension.h"
#import "pythagoras/f/Dimension.h"
#import "pythagoras/f/Dimensions.h"
#import "pythagoras/f/IDimension.h"
#import "pythagoras/util/Platform.h"

@implementation PythagorasFAbstractDimension

- (PythagorasFDimension *)clone {
  return [[PythagorasFDimension alloc] initWithPythagorasFIDimension:self];
}

- (NSUInteger)hash {
  return [PythagorasUtilPlatform hashCodeWithFloat:[self width]] ^ [PythagorasUtilPlatform hashCodeWithFloat:[self height]];
}

- (BOOL)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([obj isKindOfClass:[PythagorasFAbstractDimension class]]) {
    PythagorasFAbstractDimension *d = (PythagorasFAbstractDimension *) obj;
    return ([((PythagorasFAbstractDimension *) NIL_CHK(d)) width] == [self width] && [((PythagorasFAbstractDimension *) NIL_CHK(d)) height] == [self height]);
  }
  return NO;
}

- (NSString *)description {
  return [PythagorasFDimensions dimenToStringWithFloat:[self width] withFloat:[self height]];
}

- (float)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (float)width {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)init {
  return [super init];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

@end
