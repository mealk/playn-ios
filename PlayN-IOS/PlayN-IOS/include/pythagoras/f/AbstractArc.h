//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/f/AbstractArc.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !PythagorasFAbstractArc_RESTRICT
#define PythagorasFAbstractArc_INCLUDE_ALL 1
#endif
#undef PythagorasFAbstractArc_RESTRICT

#if !defined (_PythagorasFAbstractArc_) && (PythagorasFAbstractArc_INCLUDE_ALL || PythagorasFAbstractArc_INCLUDE)
#define _PythagorasFAbstractArc_

@class PythagorasFArc;
@class PythagorasFPoint;
@class PythagorasFRectangle;
@protocol PythagorasFPathIterator;
@protocol PythagorasFTransform;

#define PythagorasFRectangularShape_RESTRICT 1
#define PythagorasFRectangularShape_INCLUDE 1
#include "pythagoras/f/RectangularShape.h"

#define PythagorasFIArc_RESTRICT 1
#define PythagorasFIArc_INCLUDE 1
#include "pythagoras/f/IArc.h"

@interface PythagorasFAbstractArc : PythagorasFRectangularShape < PythagorasFIArc > {
}

- (PythagorasFPoint *)startPoint;
- (PythagorasFPoint *)startPointWithPythagorasFPoint:(PythagorasFPoint *)target;
- (PythagorasFPoint *)endPoint;
- (PythagorasFPoint *)endPointWithPythagorasFPoint:(PythagorasFPoint *)target;
- (BOOL)containsAngleWithFloat:(float)angle;
- (PythagorasFArc *)clone;
- (BOOL)isEmpty;
- (BOOL)containsWithFloat:(float)px
                withFloat:(float)py;
- (BOOL)containsWithFloat:(float)rx
                withFloat:(float)ry
                withFloat:(float)rw
                withFloat:(float)rh;
- (BOOL)intersectsWithFloat:(float)rx
                  withFloat:(float)ry
                  withFloat:(float)rw
                  withFloat:(float)rh;
- (PythagorasFRectangle *)boundsWithPythagorasFRectangle:(PythagorasFRectangle *)target;
- (id<PythagorasFPathIterator>)pathIteratorWithPythagorasFTransform:(id<PythagorasFTransform>)at;
- (float)normAngleWithFloat:(float)angle;
- (float)angleExtent;
- (float)angleStart;
- (int)arcType;
- (float)height;
- (float)width;
- (float)x;
- (float)y;
- (id)init;
- (id)copyWithZone:(NSZone *)zone;
@end
#endif

#if !defined (_PythagorasFAbstractArc_Iterator_) && (PythagorasFAbstractArc_INCLUDE_ALL || PythagorasFAbstractArc_Iterator_INCLUDE)
#define _PythagorasFAbstractArc_Iterator_

@class IOSFloatArray;
@protocol PythagorasFIArc;
@protocol PythagorasFTransform;

#define PythagorasFPathIterator_RESTRICT 1
#define PythagorasFPathIterator_INCLUDE 1
#include "pythagoras/f/PathIterator.h"

@interface PythagorasFAbstractArc_Iterator : NSObject < PythagorasFPathIterator > {
 @public
  float x_;
  float y_;
  float width_;
  float height_;
  float angle_;
  float extent_;
  int type_;
  id<PythagorasFTransform> t_;
  int index_;
  int arcCount_;
  int lineCount_;
  float step_;
  float cos_;
  float sin_;
  float k_;
  float kx_;
  float ky_;
  float mx_;
  float my_;
}

@property (nonatomic, assign) float x;
@property (nonatomic, assign) float y;
@property (nonatomic, assign) float width;
@property (nonatomic, assign) float height;
@property (nonatomic, assign) float angle;
@property (nonatomic, assign) float extent;
@property (nonatomic, assign) int type;
@property (nonatomic, strong) id<PythagorasFTransform> t;
@property (nonatomic, assign) int index;
@property (nonatomic, assign) int arcCount;
@property (nonatomic, assign) int lineCount;
@property (nonatomic, assign) float step;
@property (nonatomic, assign) float cos;
@property (nonatomic, assign) float sin;
@property (nonatomic, assign) float k;
@property (nonatomic, assign) float kx;
@property (nonatomic, assign) float ky;
@property (nonatomic, assign) float mx;
@property (nonatomic, assign) float my;

- (id)initWithPythagorasFIArc:(id<PythagorasFIArc>)a
     withPythagorasFTransform:(id<PythagorasFTransform>)t;
- (int)windingRule;
- (BOOL)isDone;
- (void)next;
- (int)currentSegmentWithFloatArray:(IOSFloatArray *)coords;
@end
#endif
