//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pythagoras/f/Area.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !PythagorasFArea_RESTRICT
#define PythagorasFArea_INCLUDE_ALL 1
#endif
#undef PythagorasFArea_RESTRICT

#if !defined (_PythagorasFArea_) && (PythagorasFArea_INCLUDE_ALL || PythagorasFArea_INCLUDE)
#define _PythagorasFArea_

@class IOSFloatArray;
@class IOSIntArray;
@class IOSObjectArray;
@class PythagorasFIntersectPoint;
@class PythagorasFRectangle;
@protocol PythagorasFIPoint;
@protocol PythagorasFIRectangle;
@protocol PythagorasFPathIterator;
@protocol PythagorasFTransform;

#define PythagorasFIShape_RESTRICT 1
#define PythagorasFIShape_INCLUDE 1
#include "pythagoras/f/IShape.h"

@interface PythagorasFArea : NSObject < PythagorasFIShape, NSCopying > {
 @public
  IOSFloatArray *coords_;
  int coordsSize_;
  IOSIntArray *rules_;
  int rulesSize_;
  IOSIntArray *offsets_;
  int moveToCount_;
  BOOL isPolygonal__;
}

@property (nonatomic, strong) IOSFloatArray *coords;
@property (nonatomic, assign) int coordsSize;
@property (nonatomic, strong) IOSIntArray *rules;
@property (nonatomic, assign) int rulesSize;
@property (nonatomic, strong) IOSIntArray *offsets;
@property (nonatomic, assign) int moveToCount;
@property (nonatomic, assign) BOOL isPolygonal_;

- (id)init;
- (id)initWithPythagorasFIShape:(id<PythagorasFIShape>)s;
- (BOOL)isPolygonal;
- (BOOL)isRectangular;
- (BOOL)isSingular;
- (void)reset;
- (void)transformWithPythagorasFTransform:(id<PythagorasFTransform>)t;
- (PythagorasFArea *)createTransformedAreaWithPythagorasFTransform:(id<PythagorasFTransform>)t;
- (void)addWithPythagorasFArea:(PythagorasFArea *)area;
- (void)intersectWithPythagorasFArea:(PythagorasFArea *)area;
- (void)subtractWithPythagorasFArea:(PythagorasFArea *)area;
- (void)exclusiveOrWithPythagorasFArea:(PythagorasFArea *)area;
- (BOOL)isEmpty;
- (BOOL)containsWithFloat:(float)x
                withFloat:(float)y;
- (BOOL)containsWithFloat:(float)x
                withFloat:(float)y
                withFloat:(float)width
                withFloat:(float)height;
- (BOOL)containsWithPythagorasFIPoint:(id<PythagorasFIPoint>)p;
- (BOOL)containsWithPythagorasFIRectangle:(id<PythagorasFIRectangle>)r;
- (BOOL)intersectsWithFloat:(float)x
                  withFloat:(float)y
                  withFloat:(float)width
                  withFloat:(float)height;
- (BOOL)intersectsWithPythagorasFIRectangle:(id<PythagorasFIRectangle>)r;
- (PythagorasFRectangle *)bounds;
- (PythagorasFRectangle *)boundsWithPythagorasFRectangle:(PythagorasFRectangle *)target;
- (id<PythagorasFPathIterator>)pathIteratorWithPythagorasFTransform:(id<PythagorasFTransform>)t;
- (id<PythagorasFPathIterator>)pathIteratorWithPythagorasFTransform:(id<PythagorasFTransform>)t
                                                          withFloat:(float)flatness;
- (BOOL)isEqual:(id)obj;
- (PythagorasFArea *)clone;
- (void)addCurvePolygonWithPythagorasFArea:(PythagorasFArea *)area;
- (void)addPolygonWithPythagorasFArea:(PythagorasFArea *)area;
- (void)intersectCurvePolygonWithPythagorasFArea:(PythagorasFArea *)area;
- (void)intersectPolygonWithPythagorasFArea:(PythagorasFArea *)area;
- (void)subtractCurvePolygonWithPythagorasFArea:(PythagorasFArea *)area;
- (void)subtractPolygonWithPythagorasFArea:(PythagorasFArea *)area;
- (PythagorasFIntersectPoint *)nextIntersectPointWithPythagorasFIntersectPointArray:(IOSObjectArray *)iPoints
                                                      withPythagorasFIntersectPoint:(PythagorasFIntersectPoint *)isectPoint
                                                                           withBOOL:(BOOL)isCurrentArea;
- (PythagorasFIntersectPoint *)prevIntersectPointWithPythagorasFIntersectPointArray:(IOSObjectArray *)iPoints
                                                      withPythagorasFIntersectPoint:(PythagorasFIntersectPoint *)isectPoint
                                                                           withBOOL:(BOOL)isCurrentArea;
- (int)includeCoordsAndRulesWithInt:(int)offset
                            withInt:(int)length
                       withIntArray:(IOSIntArray *)rules
                       withIntArray:(IOSIntArray *)offsets
                       withIntArray:(IOSIntArray *)resultRules
                       withIntArray:(IOSIntArray *)resultOffsets
                     withFloatArray:(IOSFloatArray *)resultCoords
                     withFloatArray:(IOSFloatArray *)coords
                            withInt:(int)resultRulesPos
                            withInt:(int)resultCoordPos
      withPythagorasFIntersectPoint:(PythagorasFIntersectPoint *)point
                           withBOOL:(BOOL)isCurrentArea
                           withBOOL:(BOOL)way
                            withInt:(int)operation;
- (void)copy__WithPythagorasFArea:(PythagorasFArea *)src
              withPythagorasFArea:(PythagorasFArea *)dst OBJC_METHOD_FAMILY_NONE;
- (int)containsExactWithFloat:(float)x
                    withFloat:(float)y;
- (void)reverseCopyWithFloatArray:(IOSFloatArray *)coords;
- (float)areaBoundsSquare;
- (BOOL)isVertexWithFloat:(float)x
                withFloat:(float)y;
+ (IOSFloatArray *)adjustSizeWithFloatArray:(IOSFloatArray *)array
                                    withInt:(int)newSize;
+ (IOSIntArray *)adjustSizeWithIntArray:(IOSIntArray *)array
                                withInt:(int)newSize;
- (id)copyWithZone:(NSZone *)zone;
@end
#endif

#if !defined (_PythagorasFArea_AreaPathIterator_) && (PythagorasFArea_INCLUDE_ALL || PythagorasFArea_AreaPathIterator_INCLUDE)
#define _PythagorasFArea_AreaPathIterator_

@class IOSFloatArray;
@class PythagorasFArea;
@protocol PythagorasFTransform;

#define PythagorasFPathIterator_RESTRICT 1
#define PythagorasFPathIterator_INCLUDE 1
#include "pythagoras/f/PathIterator.h"

@interface PythagorasFArea_AreaPathIterator : NSObject < PythagorasFPathIterator > {
 @public
  PythagorasFArea *this$0_;
  id<PythagorasFTransform> transform_;
  int curRuleIndex_;
  int curCoordIndex_;
}

@property (nonatomic, strong) PythagorasFArea *this$0;
@property (nonatomic, strong) id<PythagorasFTransform> transform;
@property (nonatomic, assign) int curRuleIndex;
@property (nonatomic, assign) int curCoordIndex;

- (id)initWithPythagorasFArea:(PythagorasFArea *)outer$
     withPythagorasFTransform:(id<PythagorasFTransform>)t;
- (int)windingRule;
- (BOOL)isDone;
- (void)next;
- (int)currentSegmentWithFloatArray:(IOSFloatArray *)c;
@end
#endif
