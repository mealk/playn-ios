//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/StubPlatform.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSClass.h"
#include "java/io/PrintStream.h"
#include "java/lang/Iterable.h"
#include "java/lang/Math.h"
#include "java/lang/Runnable.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "playn/core/Analytics.h"
#include "playn/core/Assets.h"
#include "playn/core/Audio.h"
#include "playn/core/BatchImpl.h"
#include "playn/core/Game.h"
#include "playn/core/Graphics.h"
#include "playn/core/Json.h"
#include "playn/core/Keyboard.h"
#include "playn/core/Log.h"
#include "playn/core/Mouse.h"
#include "playn/core/MouseStub.h"
#include "playn/core/Net.h"
#include "playn/core/Platform.h"
#include "playn/core/PlayN.h"
#include "playn/core/Pointer.h"
#include "playn/core/RegularExpression.h"
#include "playn/core/Storage.h"
#include "playn/core/StubPlatform.h"
#include "playn/core/Touch.h"
#include "playn/core/TouchStub.h"
#include "playn/core/UIOverlay.h"
#include "playn/core/UIOverlayStub.h"
#include "playn/core/json/JsonImpl.h"
#include "playn/core/util/Callback.h"

@implementation PlaynCoreStubPlatform

@synthesize log_ = log__;
@synthesize storage_ = storage__;
@synthesize keyboard_ = keyboard__;
@synthesize touch_ = touch__;
@synthesize mouse_ = mouse__;
@synthesize json_ = json__;
@synthesize pointer_ = pointer__;
@synthesize start = start_;
@synthesize _lifecycleListener = _lifecycleListener_;

- (void)runWithPlaynCoreGame:(id<PlaynCoreGame>)game {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (PlaynCorePlatform_TypeEnum *)type {
  return [PlaynCorePlatform_TypeEnum STUB];
}

- (double)time {
  return (double) [JavaLangSystem currentTimeMillis];
}

- (int)tick {
  return (int) ([JavaLangSystem currentTimeMillis] - start_);
}

- (float)random {
  return (float) [JavaLangMath random];
}

- (void)openURLWithNSString:(NSString *)url {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setPropagateEventsWithBOOL:(BOOL)propagate {
}

- (void)invokeLaterWithJavaLangRunnable:(id<JavaLangRunnable>)runnable {
  [((id<JavaLangRunnable>) nil_chk(runnable)) run];
}

- (void)setLifecycleListenerWithPlaynCorePlayN_LifecycleListener:(id<PlaynCorePlayN_LifecycleListener>)listener {
  _lifecycleListener_ = listener;
}

- (id<PlaynCoreAudio>)audio {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id<PlaynCoreGraphics>)graphics {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id<PlaynCoreAssets>)assets {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id<PlaynCoreJson>)json {
  return json__;
}

- (id<PlaynCoreKeyboard>)keyboard {
  return keyboard__;
}

- (id<PlaynCoreLog>)log {
  return log__;
}

- (id<PlaynCoreNet>)net {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id<PlaynCorePointer>)pointer {
  return pointer__;
}

- (id<PlaynCoreMouse>)mouse {
  return mouse__;
}

- (id<PlaynCoreTouch>)touch {
  return touch__;
}

- (id<PlaynCoreStorage>)storage {
  return storage__;
}

- (id<PlaynCoreAnalytics>)analytics {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id<PlaynCoreRegularExpression>)regularExpression {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id<PlaynCoreUIOverlay>)uiOverlay {
  return [[PlaynCoreUIOverlayStub alloc] init];
}

- (id)init {
  if ((self = [super init])) {
    log__ = [[PlaynCoreStubPlatform_$1 alloc] init];
    storage__ = [[PlaynCoreStubPlatform_$2 alloc] init];
    keyboard__ = [[PlaynCoreStubPlatform_$3 alloc] init];
    touch__ = [[PlaynCoreTouchStub alloc] init];
    mouse__ = [[PlaynCoreMouseStub alloc] init];
    json__ = [[PlaynCoreJsonJsonImpl alloc] init];
    pointer__ = [[PlaynCoreStubPlatform_$4 alloc] init];
    start_ = [JavaLangSystem currentTimeMillis];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynCoreStubPlatform *typedCopy = (PlaynCoreStubPlatform *) copy;
  typedCopy.log_ = log__;
  typedCopy.storage_ = storage__;
  typedCopy.keyboard_ = keyboard__;
  typedCopy.touch_ = touch__;
  typedCopy.mouse_ = mouse__;
  typedCopy.json_ = json__;
  typedCopy.pointer_ = pointer__;
  typedCopy.start = start_;
  typedCopy._lifecycleListener = _lifecycleListener_;
}

@end
@implementation PlaynCoreStubPlatform_$1

- (void)logImplWithPlaynCoreLog_LevelEnum:(PlaynCoreLog_LevelEnum *)level
                             withNSString:(NSString *)msg
                    withJavaLangThrowable:(JavaLangThrowable *)e {
  NSString *prefix;
  switch ([level ordinal]) {
    default:
    case PlaynCoreLog_Level_DEBUG:
    prefix = @"D: ";
    break;
    case PlaynCoreLog_Level_INFO:
    prefix = @"";
    break;
    case PlaynCoreLog_Level_WARN:
    prefix = @"W: ";
    break;
    case PlaynCoreLog_Level_ERROR:
    prefix = @"E: ";
    break;
  }
  [((JavaIoPrintStream *) nil_chk([JavaLangSystem err])) printlnWithNSString:[NSString stringWithFormat:@"%@%@", prefix, msg]];
  if (e != nil) [e printStackTraceWithJavaIoPrintStream:[JavaLangSystem err]];
}

- (id)init {
  return [super init];
}

@end
@implementation PlaynCoreStubPlatform_$2

@synthesize _data = _data_;

- (void)setItemWithNSString:(NSString *)key
               withNSString:(NSString *)data {
  (void) [((id<JavaUtilMap>) nil_chk(_data_)) putWithId:key withId:data];
}

- (void)removeItemWithNSString:(NSString *)key {
  (void) [((id<JavaUtilMap>) nil_chk(_data_)) removeWithId:key];
}

- (NSString *)getItemWithNSString:(NSString *)key {
  return [((id<JavaUtilMap>) nil_chk(_data_)) getWithId:key];
}

- (id<PlaynCoreStorage_Batch>)startBatch {
  return [[PlaynCoreBatchImpl alloc] initWithPlaynCoreStorage:self];
}

- (id<JavaLangIterable>)keys {
  return [((id<JavaUtilMap>) nil_chk(_data_)) keySet];
}

- (BOOL)isPersisted {
  return YES;
}

- (id)init {
  if ((self = [super init])) {
    _data_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynCoreStubPlatform_$2 *typedCopy = (PlaynCoreStubPlatform_$2 *) copy;
  typedCopy._data = _data_;
}

@end
@implementation PlaynCoreStubPlatform_$3

- (void)setListenerWithPlaynCoreKeyboard_Listener:(id<PlaynCoreKeyboard_Listener>)listener {
}

- (BOOL)hasHardwareKeyboard {
  return NO;
}

- (void)getTextWithPlaynCoreKeyboard_TextTypeEnum:(PlaynCoreKeyboard_TextTypeEnum *)textType
                                     withNSString:(NSString *)label
                                     withNSString:(NSString *)initialValue
                        withPlaynCoreUtilCallback:(id<PlaynCoreUtilCallback>)callback {
  [((id<PlaynCoreUtilCallback>) nil_chk(callback)) onSuccessWithId:nil];
}

- (id)init {
  return [super init];
}

@end
@implementation PlaynCoreStubPlatform_$4

- (id)init {
  return [super init];
}

@end
