//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/gl/GraphicsGL.java
//
//  Created by Thomas on 7/10/13.
//

#import "IOSFloatArray.h"
#import "IOSIntArray.h"
#import "playn/core/CanvasImage.h"
#import "playn/core/Font.h"
#import "playn/core/Gradient.h"
#import "playn/core/Graphics.h"
#import "playn/core/GroupLayer.h"
#import "playn/core/Image.h"
#import "playn/core/ImageLayer.h"
#import "playn/core/ImmediateLayer.h"
#import "playn/core/SurfaceImage.h"
#import "playn/core/SurfaceLayer.h"
#import "playn/core/TextFormat.h"
#import "playn/core/TextLayout.h"
#import "playn/core/gl/GL20.h"
#import "playn/core/gl/GLContext.h"
#import "playn/core/gl/GraphicsGL.h"
#import "playn/core/gl/GroupLayerGL.h"
#import "playn/core/gl/ImageLayerGL.h"
#import "playn/core/gl/ImmediateLayerGL.h"
#import "playn/core/gl/Scale.h"
#import "playn/core/gl/SurfaceGL.h"
#import "playn/core/gl/SurfaceImageGL.h"
#import "playn/core/gl/SurfaceLayerGL.h"

@implementation PlaynCoreGlGraphicsGL

- (int)width {
  return [self ctx].viewWidth;
}

- (int)height {
  return [self ctx].viewHeight;
}

- (float)scaleFactor {
  return ((PlaynCoreGlScale *) NIL_CHK([self ctx].scale_)).factor;
}

- (id<PlaynCoreGroupLayer>)createGroupLayer {
  return [[PlaynCoreGlGroupLayerGL alloc] initWithPlaynCoreGlGLContext:[self ctx]];
}

- (id<PlaynCoreGroupLayer_Clipped>)createGroupLayerWithFloat:(float)width
                                                   withFloat:(float)height {
  return [[PlaynCoreGlGroupLayerGL_Clipped alloc] initWithPlaynCoreGlGLContext:[self ctx] withFloat:width withFloat:height];
}

- (id<PlaynCoreImageLayer>)createImageLayer {
  return [[PlaynCoreGlImageLayerGL alloc] initWithPlaynCoreGlGLContext:[self ctx]];
}

- (id<PlaynCoreImageLayer>)createImageLayerWithPlaynCoreImage:(id<PlaynCoreImage>)image {
  return [((PlaynCoreGlImageLayerGL *) [[PlaynCoreGlImageLayerGL alloc] initWithPlaynCoreGlGLContext:[self ctx]]) setImageWithPlaynCoreImage:image];
}

- (id<PlaynCoreSurfaceLayer>)createSurfaceLayerWithFloat:(float)width
                                               withFloat:(float)height {
  return [[PlaynCoreGlSurfaceLayerGL alloc] initWithPlaynCoreGlGLContext:[self ctx] withPlaynCoreGlSurfaceGL:[self createSurfaceGLWithFloat:width withFloat:height]];
}

- (id<PlaynCoreImmediateLayer_Clipped>)createImmediateLayerWithInt:(int)width
                                                           withInt:(int)height
                              withPlaynCoreImmediateLayer_Renderer:(id<PlaynCoreImmediateLayer_Renderer>)renderer {
  return [[PlaynCoreGlImmediateLayerGL_Clipped alloc] initWithPlaynCoreGlGLContext:[self ctx] withInt:width withInt:height withPlaynCoreImmediateLayer_Renderer:renderer];
}

- (id<PlaynCoreImmediateLayer>)createImmediateLayerWithPlaynCoreImmediateLayer_Renderer:(id<PlaynCoreImmediateLayer_Renderer>)renderer {
  return [[PlaynCoreGlImmediateLayerGL alloc] initWithPlaynCoreGlGLContext:[self ctx] withPlaynCoreImmediateLayer_Renderer:renderer];
}

- (id<PlaynCoreSurfaceImage>)createSurfaceWithFloat:(float)width
                                          withFloat:(float)height {
  return [[PlaynCoreGlSurfaceImageGL alloc] initWithPlaynCoreGlGLContext:[self ctx] withPlaynCoreGlSurfaceGL:[self createSurfaceGLWithFloat:width withFloat:height]];
}

- (PlaynCoreGlSurfaceGL *)createSurfaceGLWithFloat:(float)width
                                         withFloat:(float)height {
  return [[PlaynCoreGlSurfaceGL alloc] initWithPlaynCoreGlGLContext:[self ctx] withFloat:width withFloat:height];
}

- (id<PlaynCoreFont>)createFontWithNSString:(NSString *)param0
                withPlaynCoreFont_StyleEnum:(PlaynCoreFont_StyleEnum *)param1
                                  withFloat:(float)param2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreCanvasImage>)createImageWithFloat:(float)param0
                                       withFloat:(float)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreGradient>)createLinearGradientWithFloat:(float)param0
                                             withFloat:(float)param1
                                             withFloat:(float)param2
                                             withFloat:(float)param3
                              withJavaLangIntegerArray:(IOSIntArray *)param4
                                withJavaLangFloatArray:(IOSFloatArray *)param5 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreGradient>)createRadialGradientWithFloat:(float)param0
                                             withFloat:(float)param1
                                             withFloat:(float)param2
                              withJavaLangIntegerArray:(IOSIntArray *)param3
                                withJavaLangFloatArray:(IOSFloatArray *)param4 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (PlaynCoreGlGLContext *)ctx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreGlGL20>)gl20 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreTextLayout>)layoutTextWithNSString:(NSString *)param0
                          withPlaynCoreTextFormat:(PlaynCoreTextFormat *)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreGroupLayer>)rootLayer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)screenHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)screenWidth {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)init {
  return [super init];
}

@end
