//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/gl/SurfaceImageGL.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !PlaynCoreGlSurfaceImageGL_RESTRICT
#define PlaynCoreGlSurfaceImageGL_INCLUDE_ALL 1
#endif
#undef PlaynCoreGlSurfaceImageGL_RESTRICT

#if !defined (_PlaynCoreGlSurfaceImageGL_) && (PlaynCoreGlSurfaceImageGL_INCLUDE_ALL || PlaynCoreGlSurfaceImageGL_INCLUDE)
#define _PlaynCoreGlSurfaceImageGL_

@class PlaynCoreGlGLContext;
@class PlaynCoreGlGLShader;
@class PlaynCoreGlScale;
@class PlaynCoreGlSurfaceGL;
@protocol PlaynCoreImage_Region;
@protocol PlaynCoreInternalTransform;
@protocol PlaynCorePattern;
@protocol PlaynCoreSurface;
@protocol PlaynCoreUtilCallback;

#define PlaynCoreGlAbstractImageGL_RESTRICT 1
#define PlaynCoreGlAbstractImageGL_INCLUDE 1
#include "playn/core/gl/AbstractImageGL.h"

#define PlaynCoreSurfaceImage_RESTRICT 1
#define PlaynCoreSurfaceImage_INCLUDE 1
#include "playn/core/SurfaceImage.h"

@interface PlaynCoreGlSurfaceImageGL : PlaynCoreGlAbstractImageGL < PlaynCoreSurfaceImage > {
 @public
  PlaynCoreGlSurfaceGL *surface__;
}

@property (nonatomic, strong) PlaynCoreGlSurfaceGL *surface_;

- (id)initWithPlaynCoreGlGLContext:(PlaynCoreGlGLContext *)ctx
          withPlaynCoreGlSurfaceGL:(PlaynCoreGlSurfaceGL *)surface;
- (id<PlaynCoreSurface>)surface;
- (void)destroy;
- (float)width;
- (float)height;
- (PlaynCoreGlScale *)scale__;
- (BOOL)isReady;
- (void)addCallbackWithPlaynCoreUtilCallback:(id<PlaynCoreUtilCallback>)callback;
- (id<PlaynCoreImage_Region>)subImageWithFloat:(float)sx
                                     withFloat:(float)sy
                                     withFloat:(float)swidth
                                     withFloat:(float)sheight;
- (int)ensureTexture;
- (void)clearTexture;
- (void)drawWithId:(id)gc
         withFloat:(float)dx
         withFloat:(float)dy
         withFloat:(float)dw
         withFloat:(float)dh;
- (void)drawWithId:(id)gc
         withFloat:(float)sx
         withFloat:(float)sy
         withFloat:(float)sw
         withFloat:(float)sh
         withFloat:(float)dx
         withFloat:(float)dy
         withFloat:(float)dw
         withFloat:(float)dh;
- (void)drawImplWithPlaynCoreGlGLShader:(PlaynCoreGlGLShader *)shader
         withPlaynCoreInternalTransform:(id<PlaynCoreInternalTransform>)xform
                                withInt:(int)tex
                                withInt:(int)tint
                              withFloat:(float)dx
                              withFloat:(float)dy
                              withFloat:(float)dw
                              withFloat:(float)dh
                              withFloat:(float)sl
                              withFloat:(float)st
                              withFloat:(float)sr
                              withFloat:(float)sb;
- (id<PlaynCorePattern>)toSubPatternWithPlaynCoreGlAbstractImageGL:(PlaynCoreGlAbstractImageGL *)image
                                                          withBOOL:(BOOL)repeatX
                                                          withBOOL:(BOOL)repeatY
                                                         withFloat:(float)x
                                                         withFloat:(float)y
                                                         withFloat:(float)width
                                                         withFloat:(float)height;
@end
#endif

#if !defined (_PlaynCoreGlSurfaceImageGL_$1_) && (PlaynCoreGlSurfaceImageGL_INCLUDE_ALL || PlaynCoreGlSurfaceImageGL_$1_INCLUDE)
#define _PlaynCoreGlSurfaceImageGL_$1_

@class PlaynCoreGlAbstractImageGL;

#define PlaynCoreGlGLPattern_RESTRICT 1
#define PlaynCoreGlGLPattern_INCLUDE 1
#include "playn/core/gl/GLPattern.h"

@interface PlaynCoreGlSurfaceImageGL_$1 : NSObject < PlaynCoreGlGLPattern > {
 @public
  BOOL val$repeatX_;
  BOOL val$repeatY_;
  PlaynCoreGlAbstractImageGL *val$image_;
}

@property (nonatomic, assign) BOOL val$repeatX;
@property (nonatomic, assign) BOOL val$repeatY;
@property (nonatomic, strong) PlaynCoreGlAbstractImageGL *val$image;

- (BOOL)repeatX;
- (BOOL)repeatY;
- (PlaynCoreGlAbstractImageGL *)image;
- (id)initWithBOOL:(BOOL)capture$0
          withBOOL:(BOOL)capture$1
withPlaynCoreGlAbstractImageGL:(PlaynCoreGlAbstractImageGL *)capture$2;
@end
#endif
