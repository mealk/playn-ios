//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: playn/core/StockInternalTransform.java
//
//  Created by Thomas on 7/25/13.
//

#include "playn/core/InternalTransform.h"
#include "playn/core/StockInternalTransform.h"
#include "pythagoras/f/AffineTransform.h"
#include "pythagoras/f/Transform.h"
#include "pythagoras/f/Transforms.h"

@implementation PlaynCoreStockInternalTransform

static PlaynCoreStockInternalTransform * PlaynCoreStockInternalTransform_IDENTITY_;

+ (PlaynCoreStockInternalTransform *)IDENTITY {
  return PlaynCoreStockInternalTransform_IDENTITY_;
}

- (id)init {
  return [super init];
}

- (id)initWithFloat:(float)m00
          withFloat:(float)m01
          withFloat:(float)m10
          withFloat:(float)m11
          withFloat:(float)tx
          withFloat:(float)ty {
  return [super initWithFloat:m00 withFloat:m01 withFloat:m10 withFloat:m11 withFloat:tx withFloat:ty];
}

- (float)m00 {
  return m00_;
}

- (float)m01 {
  return m01_;
}

- (float)m10 {
  return m10_;
}

- (float)m11 {
  return m11_;
}

- (id<PlaynCoreInternalTransform>)setWithPythagorasFTransform:(id<PythagorasFTransform>)other {
  PlaynCoreStockInternalTransform *ot = (PlaynCoreStockInternalTransform *) other;
  (void) [self setTransformWithFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).m00 withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).m01 withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).m10 withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).m11 withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).tx_ withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).ty_];
  return self;
}

- (id<PlaynCoreInternalTransform>)concatenateWithPythagorasFTransform:(id<PythagorasFTransform>)other
                                                            withFloat:(float)originX
                                                            withFloat:(float)originY {
  PlaynCoreStockInternalTransform *ot = (PlaynCoreStockInternalTransform *) other;
  return [self concatenateWithFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).m00 withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).m01 withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).m10 withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).m11 withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).tx_ withFloat:((PlaynCoreStockInternalTransform *) nil_chk(ot)).ty_ withFloat:originX withFloat:originY];
}

- (id<PlaynCoreInternalTransform>)concatenateWithFloat:(float)m00
                                             withFloat:(float)m01
                                             withFloat:(float)m10
                                             withFloat:(float)m11
                                             withFloat:(float)tx
                                             withFloat:(float)ty
                                             withFloat:(float)originX
                                             withFloat:(float)originY {
  (void) [PythagorasFTransforms multiplyWithPythagorasFAffineTransform:self withFloat:m00 withFloat:m01 withFloat:m10 withFloat:m11 withFloat:tx withFloat:ty withId:self];
  (void) [self translateWithFloat:-originX withFloat:-originY];
  return self;
}

- (id<PlaynCoreInternalTransform>)preConcatenateWithPlaynCoreInternalTransform:(id<PlaynCoreInternalTransform>)other {
  (void) [PythagorasFTransforms multiplyWithFloat:[((id<PlaynCoreInternalTransform>) nil_chk(other)) m00] withFloat:[((id<PlaynCoreInternalTransform>) nil_chk(other)) m01] withFloat:[((id<PlaynCoreInternalTransform>) nil_chk(other)) m10] withFloat:[((id<PlaynCoreInternalTransform>) nil_chk(other)) m11] withFloat:[((id<PlaynCoreInternalTransform>) nil_chk(other)) tx] withFloat:[((id<PlaynCoreInternalTransform>) nil_chk(other)) ty] withPythagorasFAffineTransform:self withId:self];
  return self;
}

- (id<PlaynCoreInternalTransform>)copy__ OBJC_METHOD_FAMILY_NONE {
  return [[PlaynCoreStockInternalTransform alloc] initWithFloat:m00_ withFloat:m01_ withFloat:m10_ withFloat:m11_ withFloat:tx__ withFloat:ty__];
}

+ (void)initialize {
  if (self == [PlaynCoreStockInternalTransform class]) {
    PlaynCoreStockInternalTransform_IDENTITY_ = [[PlaynCoreStockInternalTransform alloc] init];
  }
}

@end
