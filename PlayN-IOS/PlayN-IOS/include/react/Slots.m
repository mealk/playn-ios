//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: react/Slots.java
//
//  Created by Thomas on 7/10/13.
//

#import "java/io/PrintStream.h"
#import "java/lang/System.h"
#import "react/Slot.h"
#import "react/Slots.h"
#import "react/UnitSlot.h"

@implementation ReactSlots

static ReactUnitSlot * ReactSlots_NOOP_;

+ (ReactUnitSlot *)NOOP {
  return ReactSlots_NOOP_;
}

+ (void)setNOOP:(ReactUnitSlot *)NOOP {
  ReactSlots_NOOP_ = NOOP;
}

+ (ReactSlot *)traceWithNSString:(NSString *)message
                   withReactSlot:(ReactSlot *)slot {
  return [[ReactSlots_$2 alloc] initWithNSString:message withReactSlot:slot];
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ReactSlots class]) {
    ReactSlots_NOOP_ = [[ReactSlots_$1 alloc] init];
  }
}

@end
@implementation ReactSlots_$1

- (void)onEmit {
}

- (id)init {
  return [super init];
}

@end
@implementation ReactSlots_$2

@synthesize val$message = val$message_;
@synthesize val$slot = val$slot_;

- (void)onEmitWithId:(id)value {
  [((JavaIoPrintStream *) NIL_CHK([JavaLangSystem err])) printlnWithNSString:[NSString stringWithFormat:@"%@%@", val$message_, value]];
  [((ReactSlot *) NIL_CHK(val$slot_)) onEmitWithId:value];
}

- (id)initWithNSString:(NSString *)capture$0
         withReactSlot:(ReactSlot *)capture$1 {
  if ((self = [super init])) {
    val$message_ = capture$0;
    val$slot_ = capture$1;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ReactSlots_$2 *typedCopy = (ReactSlots_$2 *) copy;
  typedCopy.val$message = val$message_;
  typedCopy.val$slot = val$slot_;
}

@end
