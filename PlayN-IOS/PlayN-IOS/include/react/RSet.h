//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: react/RSet.java
//
//  Created by Thomas on 7/10/13.
//

@class IOSObjectArray;
@class JavaLangBoolean;
@class ReactRSet_Listener;
@class ReactValue;
@protocol JavaUtilCollection;
@protocol ReactConnection;
@protocol ReactValueView;

#import "JreEmulation.h"
#import "java/util/Iterator.h"
#import "java/util/Set.h"
#import "react/MappedValue.h"
#import "react/Reactor.h"

@interface ReactRSet : ReactReactor < JavaUtilSet > {
 @public
  id<JavaUtilSet> _impl_;
  ReactValue *_sizeView_;
}

@property (nonatomic, strong) id<JavaUtilSet> _impl;
@property (nonatomic, strong) ReactValue *_sizeView;

+ (ReactRSet *)create;
+ (ReactRSet *)createWithJavaUtilSet:(id<JavaUtilSet>)impl;
- (id)initWithJavaUtilSet:(id<JavaUtilSet>)impl;
- (id<ReactConnection>)connectWithReactRSet_Listener:(ReactRSet_Listener *)listener;
- (void)disconnectWithReactRSet_Listener:(ReactRSet_Listener *)listener;
- (BOOL)addForceWithId:(id)elem;
- (BOOL)removeForceWithId:(id)elem;
- (id<ReactValueView>)containsViewWithId:(id)elem;
- (id<ReactValueView>)sizeView;
- (int)size;
- (BOOL)isEmpty;
- (BOOL)containsWithId:(id)key;
- (BOOL)addWithId:(id)elem;
- (BOOL)removeWithId:(id)rawElem;
- (BOOL)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll;
- (BOOL)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll;
- (BOOL)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll;
- (BOOL)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll;
- (void)clear;
- (id<JavaUtilIterator>)iterator;
- (IOSObjectArray *)toArray;
- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;
- (NSUInteger)hash;
- (BOOL)isEqual:(id)other;
- (NSString *)description;
- (void)emitAddWithId:(id)elem;
- (void)notifyAddWithId:(id)elem;
- (void)emitRemoveWithId:(id)elem;
- (void)notifyRemoveWithId:(id)elem;
@end

@interface ReactRSet_$1 : ReactMappedValue {
 @public
  ReactRSet *this$0_;
  id val$elem_;
}

@property (nonatomic, strong) ReactRSet *this$0;
@property (nonatomic, strong) id val$elem;

- (JavaLangBoolean *)get;
- (id<ReactConnection>)connect;
- (id)initWithReactRSet:(ReactRSet *)outer$
                 withId:(id)capture$0;
@end

@interface ReactRSet_Listener : ReactReactor_RListener {
}

- (void)onAddWithId:(id)elem;
- (void)onRemoveWithId:(id)elem;
- (id)init;
@end

@interface ReactRSet_$1_$1 : ReactRSet_Listener {
 @public
  ReactRSet_$1 *this$0_;
}

@property (nonatomic, strong) ReactRSet_$1 *this$0;

- (void)onAddWithId:(id)aelem;
- (void)onRemoveWithId:(id)relem;
- (id)initWithReactRSet_$1:(ReactRSet_$1 *)outer$;
@end

@interface ReactRSet_$2 : ReactRSet_Listener {
 @public
  ReactRSet *this$0_;
}

@property (nonatomic, strong) ReactRSet *this$0;

- (void)onAddWithId:(id)elem;
- (void)onRemoveWithId:(id)elem;
- (id)initWithReactRSet:(ReactRSet *)outer$;
@end

@interface ReactRSet_$3 : NSObject < JavaUtilIterator > {
 @public
  ReactRSet *this$0_;
  id _current_;
  id<JavaUtilIterator> val$iiter_;
}

@property (nonatomic, strong) ReactRSet *this$0;
@property (nonatomic, strong) id _current;
@property (nonatomic, strong) id<JavaUtilIterator> val$iiter;

- (BOOL)hasNext;
- (id)next;
- (void)remove;
- (id)initWithReactRSet:(ReactRSet *)outer$
   withJavaUtilIterator:(id<JavaUtilIterator>)capture$0;
@end
