//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: react/UnitSlot.java
//
//  Created by Thomas on 7/10/13.
//

#import "java/lang/Runnable.h"
#import "react/UnitSlot.h"

@implementation ReactUnitSlot

+ (ReactUnitSlot *)toSlotWithJavaLangRunnable:(id<JavaLangRunnable>)runnable {
  return [[ReactUnitSlot_$1 alloc] initWithJavaLangRunnable:runnable];
}

- (void)onEmit {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (ReactUnitSlot *)andThenWithReactUnitSlot:(ReactUnitSlot *)after {
  ReactUnitSlot *before = self;
  return [[ReactUnitSlot_$2 alloc] initWithReactUnitSlot:before withReactUnitSlot:after];
}

- (void)onEmitWithId:(id)event {
  [self onEmit];
}

- (void)run {
  [self onEmit];
}

- (id)init {
  return [super init];
}

@end
@implementation ReactUnitSlot_$1

@synthesize val$runnable = val$runnable_;

- (void)onEmit {
  [((id<JavaLangRunnable>) NIL_CHK(val$runnable_)) run];
}

- (id)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
  if ((self = [super init])) {
    val$runnable_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ReactUnitSlot_$1 *typedCopy = (ReactUnitSlot_$1 *) copy;
  typedCopy.val$runnable = val$runnable_;
}

@end
@implementation ReactUnitSlot_$2

@synthesize val$before = val$before_;
@synthesize val$after = val$after_;

- (void)onEmit {
  [((ReactUnitSlot *) NIL_CHK(val$before_)) onEmit];
  [((ReactUnitSlot *) NIL_CHK(val$after_)) onEmit];
}

- (id)initWithReactUnitSlot:(ReactUnitSlot *)capture$0
          withReactUnitSlot:(ReactUnitSlot *)capture$1 {
  if ((self = [super init])) {
    val$before_ = capture$0;
    val$after_ = capture$1;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ReactUnitSlot_$2 *typedCopy = (ReactUnitSlot_$2 *) copy;
  typedCopy.val$before = val$before_;
  typedCopy.val$after = val$after_;
}

@end
