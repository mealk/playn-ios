//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/anim/Flicker.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !TripleplayAnimFlicker_RESTRICT
#define TripleplayAnimFlicker_INCLUDE_ALL 1
#endif
#undef TripleplayAnimFlicker_RESTRICT
#if TripleplayAnimFlicker_$7_INCLUDE
#define TripleplayAnimFlicker_State_INCLUDE 1
#endif
#if TripleplayAnimFlicker_$6_INCLUDE
#define TripleplayAnimFlicker_State_INCLUDE 1
#endif
#if TripleplayAnimFlicker_$5_INCLUDE
#define TripleplayAnimFlicker_State_INCLUDE 1
#endif
#if TripleplayAnimFlicker_$4_INCLUDE
#define TripleplayAnimFlicker_State_INCLUDE 1
#endif
#if TripleplayAnimFlicker_$3_INCLUDE
#define TripleplayAnimFlicker_State_INCLUDE 1
#endif
#if TripleplayAnimFlicker_$2_INCLUDE
#define TripleplayAnimFlicker_State_INCLUDE 1
#endif

#if !defined (_TripleplayAnimFlicker_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_INCLUDE)
#define _TripleplayAnimFlicker_

@class ReactSignal;
@class TripleplayAnimFlicker_State;
@protocol PlaynCorePointer_Event;
@protocol PlaynCoreUtilClock;
@protocol TripleplayAnimAnimation_Value;

#define PlaynCorePointer_RESTRICT 1
#define PlaynCorePointer_Adapter_INCLUDE 1
#include "playn/core/Pointer.h"

#define TripleplayUtilPaintable_RESTRICT 1
#define TripleplayUtilPaintable_INCLUDE 1
#include "tripleplay/util/Paintable.h"

@interface TripleplayAnimFlicker : PlaynCorePointer_Adapter < TripleplayUtilPaintable > {
 @public
  float min_, max_;
  float position_;
  ReactSignal *clicked_;
  TripleplayAnimFlicker_State *DRAGGING_;
  TripleplayAnimFlicker_State *SCROLLING_;
  TripleplayAnimFlicker_State *DECELERATE_;
  TripleplayAnimFlicker_State *SNAPBACK_;
  TripleplayAnimFlicker_State *EASEBACK_;
  TripleplayAnimFlicker_State *STOPPED_;
  TripleplayAnimFlicker_State *_state_;
  float _lastTime_;
  float _vel_, _accel_;
  float _origPos_, _start_, _cur_, _prev_;
  double _curStamp_, _prevStamp_;
  float _maxDelta_;
  BOOL _minFlickExceeded_;
}

@property (nonatomic, assign) float min;
@property (nonatomic, assign) float max;
@property (nonatomic, assign) float position;
@property (nonatomic, strong) ReactSignal *clicked;
@property (nonatomic, strong) TripleplayAnimFlicker_State *DRAGGING;
@property (nonatomic, strong) TripleplayAnimFlicker_State *SCROLLING;
@property (nonatomic, strong) TripleplayAnimFlicker_State *DECELERATE;
@property (nonatomic, strong) TripleplayAnimFlicker_State *SNAPBACK;
@property (nonatomic, strong) TripleplayAnimFlicker_State *EASEBACK;
@property (nonatomic, strong) TripleplayAnimFlicker_State *STOPPED;
@property (nonatomic, strong) TripleplayAnimFlicker_State *_state;
@property (nonatomic, assign) float _lastTime;
@property (nonatomic, assign) float _vel;
@property (nonatomic, assign) float _accel;
@property (nonatomic, assign) float _origPos;
@property (nonatomic, assign) float _start;
@property (nonatomic, assign) float _cur;
@property (nonatomic, assign) float _prev;
@property (nonatomic, assign) double _curStamp;
@property (nonatomic, assign) double _prevStamp;
@property (nonatomic, assign) float _maxDelta;
@property (nonatomic, assign) BOOL _minFlickExceeded;

- (id)initWithFloat:(float)initial
          withFloat:(float)min
          withFloat:(float)max;
- (id<TripleplayAnimAnimation_Value>)posValue;
- (void)paintWithPlaynCoreUtilClock:(id<PlaynCoreUtilClock>)clock;
- (void)onPointerStartWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event;
- (void)onPointerDragWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event;
- (void)onPointerEndWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event;
- (float)getPositionWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event;
- (float)friction;
- (float)flickVelThresh;
- (float)flickXfer;
- (float)maxFlickVel;
- (float)maxClickDelta;
- (float)minFlickDelta;
- (void)minFlickExceeded;
- (BOOL)allowRebound;
- (float)overFraction;
- (float)easebackTime;
- (float)decelerateSnap;
- (void)setStateWithTripleplayAnimFlicker_State:(TripleplayAnimFlicker_State *)state;
@end
#endif

#if !defined (_TripleplayAnimFlicker_$1_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_$1_INCLUDE)
#define _TripleplayAnimFlicker_$1_

@class TripleplayAnimFlicker;

#define TripleplayAnimAnimation_RESTRICT 1
#define TripleplayAnimAnimation_Value_INCLUDE 1
#include "tripleplay/anim/Animation.h"

@interface TripleplayAnimFlicker_$1 : NSObject < TripleplayAnimAnimation_Value > {
 @public
  TripleplayAnimFlicker *this$0_;
}

@property (nonatomic, strong) TripleplayAnimFlicker *this$0;

- (float)initial OBJC_METHOD_FAMILY_NONE;
- (void)setWithFloat:(float)value;
- (id)initWithTripleplayAnimFlicker:(TripleplayAnimFlicker *)outer$;
@end
#endif

#if !defined (_TripleplayAnimFlicker_State_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_State_INCLUDE)
#define _TripleplayAnimFlicker_State_

@class TripleplayAnimFlicker;

@interface TripleplayAnimFlicker_State : NSObject {
}

- (void)becameActive;
- (void)paintWithFloat:(float)dt;
- (id)initWithTripleplayAnimFlicker:(TripleplayAnimFlicker *)outer$;
@end
#endif

#if !defined (_TripleplayAnimFlicker_$2_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_$2_INCLUDE)
#define _TripleplayAnimFlicker_$2_

@class TripleplayAnimFlicker;

@interface TripleplayAnimFlicker_$2 : TripleplayAnimFlicker_State {
}

- (id)initWithTripleplayAnimFlicker:(TripleplayAnimFlicker *)outer$;
@end
#endif

#if !defined (_TripleplayAnimFlicker_$3_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_$3_INCLUDE)
#define _TripleplayAnimFlicker_$3_

@class TripleplayAnimFlicker;

@interface TripleplayAnimFlicker_$3 : TripleplayAnimFlicker_State {
 @public
  TripleplayAnimFlicker *this$1_;
}

@property (nonatomic, strong) TripleplayAnimFlicker *this$1;

- (void)paintWithFloat:(float)dt;
- (NSString *)description;
- (id)initWithTripleplayAnimFlicker:(TripleplayAnimFlicker *)outer$;
@end
#endif

#if !defined (_TripleplayAnimFlicker_$4_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_$4_INCLUDE)
#define _TripleplayAnimFlicker_$4_

@class TripleplayAnimFlicker;

@interface TripleplayAnimFlicker_$4 : TripleplayAnimFlicker_State {
 @public
  TripleplayAnimFlicker *this$1_;
}

@property (nonatomic, strong) TripleplayAnimFlicker *this$1;

- (void)paintWithFloat:(float)dt;
- (NSString *)description;
- (id)initWithTripleplayAnimFlicker:(TripleplayAnimFlicker *)outer$;
@end
#endif

#if !defined (_TripleplayAnimFlicker_$5_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_$5_INCLUDE)
#define _TripleplayAnimFlicker_$5_

@class TripleplayAnimFlicker;

@interface TripleplayAnimFlicker_$5 : TripleplayAnimFlicker_State {
 @public
  TripleplayAnimFlicker *this$1_;
  float _snapdist_;
}

@property (nonatomic, strong) TripleplayAnimFlicker *this$1;
@property (nonatomic, assign) float _snapdist;

- (void)becameActive;
- (void)paintWithFloat:(float)dt;
- (NSString *)description;
- (id)initWithTripleplayAnimFlicker:(TripleplayAnimFlicker *)outer$;
@end
#endif

#if !defined (_TripleplayAnimFlicker_$6_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_$6_INCLUDE)
#define _TripleplayAnimFlicker_$6_

@class TripleplayAnimFlicker;

@interface TripleplayAnimFlicker_$6 : TripleplayAnimFlicker_State {
 @public
  TripleplayAnimFlicker *this$1_;
  float _time_, _spos_, _delta_;
}

@property (nonatomic, strong) TripleplayAnimFlicker *this$1;
@property (nonatomic, assign) float _time;
@property (nonatomic, assign) float _spos;
@property (nonatomic, assign) float _delta;

- (void)becameActive;
- (void)paintWithFloat:(float)dt;
- (NSString *)description;
- (id)initWithTripleplayAnimFlicker:(TripleplayAnimFlicker *)outer$;
@end
#endif

#if !defined (_TripleplayAnimFlicker_$7_) && (TripleplayAnimFlicker_INCLUDE_ALL || TripleplayAnimFlicker_$7_INCLUDE)
#define _TripleplayAnimFlicker_$7_

@class TripleplayAnimFlicker;

@interface TripleplayAnimFlicker_$7 : TripleplayAnimFlicker_State {
 @public
  TripleplayAnimFlicker *this$1_;
}

@property (nonatomic, strong) TripleplayAnimFlicker *this$1;

- (void)becameActive;
- (NSString *)description;
- (id)initWithTripleplayAnimFlicker:(TripleplayAnimFlicker *)outer$;
@end
#endif
