//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/anim/Flipbook.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSFloatArray.h"
#include "IOSIntArray.h"
#include "tripleplay/anim/Flipbook.h"
#include "tripleplay/util/Frames.h"

@implementation TripleplayAnimFlipbook

@synthesize frames = frames_;
@synthesize frameIndexes = frameIndexes_;
@synthesize frameEnds = frameEnds_;

- (id)initWithTripleplayUtilFrames:(id<TripleplayUtilFrames>)frames
                         withFloat:(float)secsPerFrame {
  return [self initTripleplayAnimFlipbookWithTripleplayUtilFrames:frames withFloatArray:[TripleplayAnimFlipbook uniformTimesWithTripleplayUtilFrames:frames withFloat:secsPerFrame]];
}

- (id)initTripleplayAnimFlipbookWithTripleplayUtilFrames:(id<TripleplayUtilFrames>)frames
                                          withFloatArray:(IOSFloatArray *)frameEnds {
  return [self initTripleplayAnimFlipbookWithTripleplayUtilFrames:frames withIntArray:[TripleplayAnimFlipbook uniformOrderWithTripleplayUtilFrames:frames] withFloatArray:frameEnds];
}

- (id)initWithTripleplayUtilFrames:(id<TripleplayUtilFrames>)frames
                    withFloatArray:(IOSFloatArray *)frameEnds {
  return [self initTripleplayAnimFlipbookWithTripleplayUtilFrames:frames withFloatArray:frameEnds];
}

- (id)initTripleplayAnimFlipbookWithTripleplayUtilFrames:(id<TripleplayUtilFrames>)frames
                                            withIntArray:(IOSIntArray *)frameIndexes
                                          withFloatArray:(IOSFloatArray *)frameEnds {
  if ((self = [super init])) {
    self.frames = frames;
    self.frameIndexes = frameIndexes;
    self.frameEnds = frameEnds;
  }
  return self;
}

- (id)initWithTripleplayUtilFrames:(id<TripleplayUtilFrames>)frames
                      withIntArray:(IOSIntArray *)frameIndexes
                    withFloatArray:(IOSFloatArray *)frameEnds {
  return [self initTripleplayAnimFlipbookWithTripleplayUtilFrames:frames withIntArray:frameIndexes withFloatArray:frameEnds];
}

+ (IOSFloatArray *)uniformTimesWithTripleplayUtilFrames:(id<TripleplayUtilFrames>)frames
                                              withFloat:(float)secsPerFrame {
  IOSFloatArray *times = [IOSFloatArray arrayWithLength:[((id<TripleplayUtilFrames>) nil_chk(frames)) count]];
  (*[((IOSFloatArray *) nil_chk(times)) floatRefAtIndex:0]) = secsPerFrame;
  for (int ii = 1, ll = (int) [((IOSFloatArray *) nil_chk(times)) count]; ii < ll; ii++) (*[((IOSFloatArray *) nil_chk(times)) floatRefAtIndex:ii]) = [((IOSFloatArray *) nil_chk(times)) floatAtIndex:ii - 1] + secsPerFrame;
  return times;
}

+ (IOSIntArray *)uniformOrderWithTripleplayUtilFrames:(id<TripleplayUtilFrames>)frames {
  IOSIntArray *indexes = [IOSIntArray arrayWithLength:[((id<TripleplayUtilFrames>) nil_chk(frames)) count]];
  for (int ii = 1, ll = (int) [((IOSIntArray *) nil_chk(indexes)) count]; ii < ll; ii++) (*[((IOSIntArray *) nil_chk(indexes)) intRefAtIndex:ii]) = ii;
  return indexes;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayAnimFlipbook *typedCopy = (TripleplayAnimFlipbook *) copy;
  typedCopy.frames = frames_;
  typedCopy.frameIndexes = frameIndexes_;
  typedCopy.frameEnds = frameEnds_;
}

@end
