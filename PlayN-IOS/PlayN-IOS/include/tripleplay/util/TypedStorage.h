//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/util/TypedStorage.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !TripleplayUtilTypedStorage_RESTRICT
#define TripleplayUtilTypedStorage_INCLUDE_ALL 1
#endif
#undef TripleplayUtilTypedStorage_RESTRICT

#if !defined (_TripleplayUtilTypedStorage_) && (TripleplayUtilTypedStorage_INCLUDE_ALL || TripleplayUtilTypedStorage_INCLUDE)
#define _TripleplayUtilTypedStorage_

@class JavaLangEnum;
@class ReactRSet;
@class ReactValue;
@protocol PlaynCoreStorage;
@protocol ReactFunction;

@interface TripleplayUtilTypedStorage : NSObject {
 @public
  id<PlaynCoreStorage> _storage_;
}

@property (nonatomic, strong) id<PlaynCoreStorage> _storage;

- (id)initWithPlaynCoreStorage:(id<PlaynCoreStorage>)storage;
- (BOOL)containsWithNSString:(NSString *)key;
- (NSString *)getWithNSString:(NSString *)key;
- (NSString *)getWithNSString:(NSString *)key
                 withNSString:(NSString *)defval;
- (void)setWithNSString:(NSString *)key
           withNSString:(NSString *)value;
- (int)getWithNSString:(NSString *)key
               withInt:(int)defval;
- (void)setWithNSString:(NSString *)key
                withInt:(int)value;
- (long long int)getWithNSString:(NSString *)key
                     withLongInt:(long long int)defval;
- (void)setWithNSString:(NSString *)key
            withLongInt:(long long int)value;
- (double)getWithNSString:(NSString *)key
               withDouble:(double)defval;
- (void)setWithNSString:(NSString *)key
             withDouble:(double)value;
- (BOOL)getWithNSString:(NSString *)key
               withBOOL:(BOOL)defval;
- (void)setWithNSString:(NSString *)key
               withBOOL:(BOOL)value;
- (id)getWithNSString:(NSString *)key
               withId:(JavaLangEnum *)defval;
- (void)setWithNSString:(NSString *)key
       withJavaLangEnum:(JavaLangEnum *)value;
- (void)removeWithNSString:(NSString *)key;
- (ReactValue *)valueForWithNSString:(NSString *)key
                        withNSString:(NSString *)defval;
- (ReactValue *)valueForWithNSString:(NSString *)key
                             withInt:(int)defval;
- (ReactValue *)valueForWithNSString:(NSString *)key
                         withLongInt:(long long int)defval;
- (ReactValue *)valueForWithNSString:(NSString *)key
                          withDouble:(double)defval;
- (ReactValue *)valueForWithNSString:(NSString *)key
                            withBOOL:(BOOL)defval;
- (ReactValue *)valueForWithNSString:(NSString *)key
                              withId:(JavaLangEnum *)defval;
- (ReactRSet *)setForWithNSString:(NSString *)key
                withReactFunction:(id<ReactFunction>)toFunc
                withReactFunction:(id<ReactFunction>)fromFunc;
@end
#endif

#if !defined (_TripleplayUtilTypedStorage_$1_) && (TripleplayUtilTypedStorage_INCLUDE_ALL || TripleplayUtilTypedStorage_$1_INCLUDE)
#define _TripleplayUtilTypedStorage_$1_

@class TripleplayUtilTypedStorage;

#define ReactSlot_RESTRICT 1
#define ReactSlot_INCLUDE 1
#include "react/Slot.h"

@interface TripleplayUtilTypedStorage_$1 : ReactSlot {
 @public
  TripleplayUtilTypedStorage *this$0_;
  NSString *val$key_;
}

@property (nonatomic, strong) TripleplayUtilTypedStorage *this$0;
@property (nonatomic, copy) NSString *val$key;

- (void)onEmitWithId:(NSString *)value;
- (id)initWithTripleplayUtilTypedStorage:(TripleplayUtilTypedStorage *)outer$
                            withNSString:(NSString *)capture$0;
@end
#endif

#if !defined (_TripleplayUtilTypedStorage_$2_) && (TripleplayUtilTypedStorage_INCLUDE_ALL || TripleplayUtilTypedStorage_$2_INCLUDE)
#define _TripleplayUtilTypedStorage_$2_

@class JavaLangInteger;
@class TripleplayUtilTypedStorage;

#define ReactSlot_RESTRICT 1
#define ReactSlot_INCLUDE 1
#include "react/Slot.h"

@interface TripleplayUtilTypedStorage_$2 : ReactSlot {
 @public
  TripleplayUtilTypedStorage *this$0_;
  NSString *val$key_;
}

@property (nonatomic, strong) TripleplayUtilTypedStorage *this$0;
@property (nonatomic, copy) NSString *val$key;

- (void)onEmitWithId:(JavaLangInteger *)value;
- (id)initWithTripleplayUtilTypedStorage:(TripleplayUtilTypedStorage *)outer$
                            withNSString:(NSString *)capture$0;
@end
#endif

#if !defined (_TripleplayUtilTypedStorage_$3_) && (TripleplayUtilTypedStorage_INCLUDE_ALL || TripleplayUtilTypedStorage_$3_INCLUDE)
#define _TripleplayUtilTypedStorage_$3_

@class JavaLangLong;
@class TripleplayUtilTypedStorage;

#define ReactSlot_RESTRICT 1
#define ReactSlot_INCLUDE 1
#include "react/Slot.h"

@interface TripleplayUtilTypedStorage_$3 : ReactSlot {
 @public
  TripleplayUtilTypedStorage *this$0_;
  NSString *val$key_;
}

@property (nonatomic, strong) TripleplayUtilTypedStorage *this$0;
@property (nonatomic, copy) NSString *val$key;

- (void)onEmitWithId:(JavaLangLong *)value;
- (id)initWithTripleplayUtilTypedStorage:(TripleplayUtilTypedStorage *)outer$
                            withNSString:(NSString *)capture$0;
@end
#endif

#if !defined (_TripleplayUtilTypedStorage_$4_) && (TripleplayUtilTypedStorage_INCLUDE_ALL || TripleplayUtilTypedStorage_$4_INCLUDE)
#define _TripleplayUtilTypedStorage_$4_

@class JavaLangDouble;
@class TripleplayUtilTypedStorage;

#define ReactSlot_RESTRICT 1
#define ReactSlot_INCLUDE 1
#include "react/Slot.h"

@interface TripleplayUtilTypedStorage_$4 : ReactSlot {
 @public
  TripleplayUtilTypedStorage *this$0_;
  NSString *val$key_;
}

@property (nonatomic, strong) TripleplayUtilTypedStorage *this$0;
@property (nonatomic, copy) NSString *val$key;

- (void)onEmitWithId:(JavaLangDouble *)value;
- (id)initWithTripleplayUtilTypedStorage:(TripleplayUtilTypedStorage *)outer$
                            withNSString:(NSString *)capture$0;
@end
#endif

#if !defined (_TripleplayUtilTypedStorage_$5_) && (TripleplayUtilTypedStorage_INCLUDE_ALL || TripleplayUtilTypedStorage_$5_INCLUDE)
#define _TripleplayUtilTypedStorage_$5_

@class JavaLangBoolean;
@class TripleplayUtilTypedStorage;

#define ReactSlot_RESTRICT 1
#define ReactSlot_INCLUDE 1
#include "react/Slot.h"

@interface TripleplayUtilTypedStorage_$5 : ReactSlot {
 @public
  TripleplayUtilTypedStorage *this$0_;
  NSString *val$key_;
}

@property (nonatomic, strong) TripleplayUtilTypedStorage *this$0;
@property (nonatomic, copy) NSString *val$key;

- (void)onEmitWithId:(JavaLangBoolean *)value;
- (id)initWithTripleplayUtilTypedStorage:(TripleplayUtilTypedStorage *)outer$
                            withNSString:(NSString *)capture$0;
@end
#endif

#if !defined (_TripleplayUtilTypedStorage_$6_) && (TripleplayUtilTypedStorage_INCLUDE_ALL || TripleplayUtilTypedStorage_$6_INCLUDE)
#define _TripleplayUtilTypedStorage_$6_

@class JavaLangEnum;
@class TripleplayUtilTypedStorage;

#define ReactSlot_RESTRICT 1
#define ReactSlot_INCLUDE 1
#include "react/Slot.h"

@interface TripleplayUtilTypedStorage_$6 : ReactSlot {
 @public
  TripleplayUtilTypedStorage *this$0_;
  NSString *val$key_;
}

@property (nonatomic, strong) TripleplayUtilTypedStorage *this$0;
@property (nonatomic, copy) NSString *val$key;

- (void)onEmitWithId:(JavaLangEnum *)value;
- (id)initWithTripleplayUtilTypedStorage:(TripleplayUtilTypedStorage *)outer$
                            withNSString:(NSString *)capture$0;
@end
#endif

#if !defined (_TripleplayUtilTypedStorage_$7_) && (TripleplayUtilTypedStorage_INCLUDE_ALL || TripleplayUtilTypedStorage_$7_INCLUDE)
#define _TripleplayUtilTypedStorage_$7_

@class ReactRSet;
@class TripleplayUtilTypedStorage;
@protocol ReactFunction;

#define ReactRSet_RESTRICT 1
#define ReactRSet_Listener_INCLUDE 1
#include "react/RSet.h"

@interface TripleplayUtilTypedStorage_$7 : ReactRSet_Listener {
 @public
  TripleplayUtilTypedStorage *this$0_;
  ReactRSet *val$rset_;
  id<ReactFunction> val$fromFunc_;
  NSString *val$key_;
}

@property (nonatomic, strong) TripleplayUtilTypedStorage *this$0;
@property (nonatomic, strong) ReactRSet *val$rset;
@property (nonatomic, strong) id<ReactFunction> val$fromFunc;
@property (nonatomic, copy) NSString *val$key;

- (void)onAddWithId:(id)unused;
- (id)initWithTripleplayUtilTypedStorage:(TripleplayUtilTypedStorage *)outer$
                           withReactRSet:(ReactRSet *)capture$0
                       withReactFunction:(id<ReactFunction>)capture$1
                            withNSString:(NSString *)capture$2;
@end
#endif
