//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/util/Randoms.java
//
//  Created by Thomas on 7/10/13.
//

@class IOSObjectArray;
@class JavaUtilRandom;
@protocol JavaLangIterable;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilMap;

#import "JreEmulation.h"

@interface TripleplayUtilRandoms : NSObject {
 @public
  JavaUtilRandom *_r_;
}

@property (nonatomic, strong) JavaUtilRandom *_r;

+ (TripleplayUtilRandoms *)withWithJavaUtilRandom:(JavaUtilRandom *)rand;
- (int)getIntWithInt:(int)high;
- (int)getInRangeWithInt:(int)low
                 withInt:(int)high;
- (float)getFloatWithFloat:(float)high;
- (float)getInRangeWithFloat:(float)low
                   withFloat:(float)high;
- (BOOL)getChanceWithInt:(int)n;
- (BOOL)getProbabilityWithFloat:(float)p;
- (BOOL)getBoolean;
- (float)getNormalWithFloat:(float)mean
                  withFloat:(float)dev;
- (void)shuffleWithJavaUtilList:(id<JavaUtilList>)list;
- (id)pickWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
                        withId:(id)ifEmpty;
- (id)pickWithJavaLangIterable:(id<JavaLangIterable>)iterable
                        withId:(id)ifEmpty;
- (id)pickWithJavaUtilMap:(id<JavaUtilMap>)weightMap
                   withId:(id)ifEmpty;
- (id)pluckWithJavaLangIterable:(id<JavaLangIterable>)iterable
                         withId:(id)ifEmpty;
- (id)initWithJavaUtilRandom:(JavaUtilRandom *)rand;
- (id)pickPluckWithJavaLangIterable:(id<JavaLangIterable>)iterable
                             withId:(id)ifEmpty
                           withBOOL:(BOOL)remove;
+ (void)swapWithJavaUtilList:(id<JavaUtilList>)list
                     withInt:(int)ii
                     withInt:(int)jj;
+ (void)swapWithNSObjectArray:(IOSObjectArray *)array
                      withInt:(int)ii
                      withInt:(int)jj;
@end
