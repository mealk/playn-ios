//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/syncdb/Resolver.java
//
//  Created by Thomas on 7/10/13.
//

#import "java/lang/Boolean.h"
#import "java/lang/Float.h"
#import "java/lang/Integer.h"
#import "java/lang/Long.h"
#import "tripleplay/syncdb/Resolver.h"


@implementation TripleplaySyncdbResolver

static id<TripleplaySyncdbResolver> TripleplaySyncdbResolver_SERVER_;
static id<TripleplaySyncdbResolver> TripleplaySyncdbResolver_INTMIN_;
static id<TripleplaySyncdbResolver> TripleplaySyncdbResolver_INTMAX_;
static id<TripleplaySyncdbResolver> TripleplaySyncdbResolver_LONGMAX_;
static id<TripleplaySyncdbResolver> TripleplaySyncdbResolver_FLOATMAX_;
static id<TripleplaySyncdbResolver> TripleplaySyncdbResolver_TRUE__;
static id<TripleplaySyncdbResolver> TripleplaySyncdbResolver_FALSE__;

+ (id<TripleplaySyncdbResolver>)SERVER {
  return TripleplaySyncdbResolver_SERVER_;
}

+ (id<TripleplaySyncdbResolver>)INTMIN {
  return TripleplaySyncdbResolver_INTMIN_;
}

+ (id<TripleplaySyncdbResolver>)INTMAX {
  return TripleplaySyncdbResolver_INTMAX_;
}

+ (id<TripleplaySyncdbResolver>)LONGMAX {
  return TripleplaySyncdbResolver_LONGMAX_;
}

+ (id<TripleplaySyncdbResolver>)FLOATMAX {
  return TripleplaySyncdbResolver_FLOATMAX_;
}

+ (id<TripleplaySyncdbResolver>)getTRUE {
  return TripleplaySyncdbResolver_TRUE__;
}

+ (id<TripleplaySyncdbResolver>)getFALSE {
  return TripleplaySyncdbResolver_FALSE__;
}

+ (void)initialize OBJC_METHOD_FAMILY_NONE {
  TripleplaySyncdbResolver_SERVER_ = [[TripleplaySyncdbResolver_$1 alloc] init];
  TripleplaySyncdbResolver_INTMIN_ = [[TripleplaySyncdbResolver_$2 alloc] init];
  TripleplaySyncdbResolver_INTMAX_ = [[TripleplaySyncdbResolver_$3 alloc] init];
  TripleplaySyncdbResolver_LONGMAX_ = [[TripleplaySyncdbResolver_$4 alloc] init];
  TripleplaySyncdbResolver_FLOATMAX_ = [[TripleplaySyncdbResolver_$5 alloc] init];
  TripleplaySyncdbResolver_TRUE__ = [[TripleplaySyncdbResolver_$6 alloc] init];
  TripleplaySyncdbResolver_FALSE__ = [[TripleplaySyncdbResolver_$7 alloc] init];
}

@end
@implementation TripleplaySyncdbResolver_$1

- (id)resolveWithId:(id)client
             withId:(id)server {
  return server;
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplaySyncdbResolver_$2

- (id)resolveWithId:(JavaLangInteger *)client
             withId:(JavaLangInteger *)server {
  return (client > server) ? server : client;
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplaySyncdbResolver_$3

- (id)resolveWithId:(JavaLangInteger *)client
             withId:(JavaLangInteger *)server {
  return (client > server) ? client : server;
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplaySyncdbResolver_$4

- (id)resolveWithId:(JavaLangLong *)client
             withId:(JavaLangLong *)server {
  return (client > server) ? client : server;
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplaySyncdbResolver_$5

- (id)resolveWithId:(JavaLangFloat *)client
             withId:(JavaLangFloat *)server {
  return (client > server) ? client : server;
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplaySyncdbResolver_$6

- (id)resolveWithId:(JavaLangBoolean *)client
             withId:(JavaLangBoolean *)server {
  return client ? client : server;
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplaySyncdbResolver_$7

- (id)resolveWithId:(JavaLangBoolean *)client
             withId:(JavaLangBoolean *)server {
  return client ? server : client;
}

- (id)init {
  return [super init];
}

@end
