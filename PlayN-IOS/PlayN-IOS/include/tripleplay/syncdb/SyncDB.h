//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/syncdb/SyncDB.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !TripleplaySyncdbSyncDB_RESTRICT
#define TripleplaySyncdbSyncDB_INCLUDE_ALL 1
#endif
#undef TripleplaySyncdbSyncDB_RESTRICT
#if TripleplaySyncdbSyncDB_$6_INCLUDE
#define TripleplaySyncdbSyncDB_Property_INCLUDE 1
#endif
#if TripleplaySyncdbSyncDB_$5_INCLUDE
#define TripleplaySyncdbSyncDB_Property_INCLUDE 1
#endif
#if TripleplaySyncdbSyncDB_$4_INCLUDE
#define TripleplaySyncdbSyncDB_Property_INCLUDE 1
#endif
#if TripleplaySyncdbSyncDB_$2_INCLUDE
#define TripleplaySyncdbSyncDB_Property_INCLUDE 1
#endif

#if !defined (_TripleplaySyncdbSyncDB_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_INCLUDE)
#define _TripleplaySyncdbSyncDB_

@class ReactRMap;
@class ReactRSet;
@class ReactValue;
@class TripleplaySyncdbCodec;
@class TripleplaySyncdbSyncDB_SubDB;
@protocol JavaUtilMap;
@protocol JavaUtilSet;
@protocol PlaynCorePlatform;
@protocol PlaynCoreStorage;
@protocol PlaynCoreStorage_Batch;
@protocol TripleplaySyncdbResolver;
@protocol TripleplaySyncdbSetResolver;

@interface TripleplaySyncdbSyncDB : NSObject {
 @public
  id<PlaynCorePlatform> _platform_;
  id<PlaynCoreStorage> _storage_;
  id<PlaynCoreStorage_Batch> _batch_;
  id<JavaUtilMap> _props_;
  id<JavaUtilMap> _subdbs_;
  id<JavaUtilMap> _mods_;
  int _version_;
  BOOL _flushQueued_;
}

@property (nonatomic, strong) id<PlaynCorePlatform> _platform;
@property (nonatomic, strong) id<PlaynCoreStorage> _storage;
@property (nonatomic, strong) id<PlaynCoreStorage_Batch> _batch;
@property (nonatomic, strong) id<JavaUtilMap> _props;
@property (nonatomic, strong) id<JavaUtilMap> _subdbs;
@property (nonatomic, strong) id<JavaUtilMap> _mods;
@property (nonatomic, assign) int _version;
@property (nonatomic, assign) BOOL _flushQueued;

+ (NSString *)SYNC_VERS_KEY;
+ (NSString *)SYNC_MODS_KEY;
+ (NSString *)SYNC_PURGE_KEY;
+ (id<JavaUtilSet>)SYNC_KEYS;
- (int)version__;
- (BOOL)hasUnsyncedChanges;
- (id<JavaUtilMap>)getDelta;
- (id<JavaUtilMap>)getMods;
- (void)noteSyncWithInt:(int)version_
        withJavaUtilMap:(id<JavaUtilMap>)syncedMods;
- (BOOL)containsMergesWithJavaUtilMap:(id<JavaUtilMap>)delta;
- (void)applyDeltaWithInt:(int)version_
          withJavaUtilMap:(id<JavaUtilMap>)delta;
- (void)prepareToMeld;
- (void)processPurges;
- (id)initWithPlaynCorePlatform:(id<PlaynCorePlatform>)platform;
- (ReactValue *)valueWithNSString:(NSString *)name
                           withId:(id)defval
        withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)codec
     withTripleplaySyncdbResolver:(id<TripleplaySyncdbResolver>)resolver;
- (ReactRSet *)setWithNSString:(NSString *)name
     withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)codec
withTripleplaySyncdbSetResolver:(id<TripleplaySyncdbSetResolver>)resolver;
- (ReactRMap *)mapWithNSString:(NSString *)prefix
     withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)keyCodec
     withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)valCodec
  withTripleplaySyncdbResolver:(id<TripleplaySyncdbResolver>)resolver;
- (TripleplaySyncdbSyncDB_SubDB *)getSubDBWithNSString:(NSString *)prefix;
- (TripleplaySyncdbSyncDB_SubDB *)createSubDBWithNSString:(NSString *)prefix;
- (id)getWithNSString:(NSString *)name
               withId:(id)defval
withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)codec;
- (void)setWithNSString:(NSString *)name
                 withId:(id)value
withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)codec;
- (void)ssetWithNSString:(NSString *)name
         withJavaUtilSet:(id<JavaUtilSet>)set
withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)codec;
- (id<JavaUtilSet>)sgetWithNSString:(NSString *)name
          withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)codec;
- (void)updateVersionWithInt:(int)version_;
- (void)noteModifiedWithNSString:(NSString *)name;
- (void)flushMods;
- (void)queueFlushMods;
- (void)startBatch;
- (void)commitBatch;
- (void)setItemWithNSString:(NSString *)key
               withNSString:(NSString *)value;
- (void)removeItemWithNSString:(NSString *)key;
- (void)purgeDBsWithJavaUtilSet:(id<JavaUtilSet>)dbs;
+ (NSString *)mapKeysKeyWithNSString:(NSString *)mapPrefix;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_map_StorageMap_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_map_StorageMap_INCLUDE)
#define _TripleplaySyncdbSyncDB_map_StorageMap_

@class TripleplaySyncdbSyncDB;
@protocol JavaUtilSet;

#define JavaUtilAbstractMap_RESTRICT 1
#define JavaUtilAbstractMap_INCLUDE 1
#include "java/util/AbstractMap.h"

@interface TripleplaySyncdbSyncDB_map_StorageMap : JavaUtilAbstractMap {
 @public
  TripleplaySyncdbSyncDB *this$0_;
  id<JavaUtilSet> _keys_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB *this$0;
@property (nonatomic, strong) id<JavaUtilSet> _keys;

- (int)size;
- (BOOL)containsKeyWithId:(id)key;
- (id)getWithId:(id)rawKey;
- (id)putWithId:(id)key
         withId:(id)value;
- (id)removeWithId:(id)rawKey;
- (id<JavaUtilSet>)keySet;
- (id<JavaUtilSet>)entrySet;
- (NSString *)skeyWithId:(id)rawKey;
- (id)initWithTripleplaySyncdbSyncDB:(TripleplaySyncdbSyncDB *)outer$;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_map_StorageMap_$1_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_map_StorageMap_$1_INCLUDE)
#define _TripleplaySyncdbSyncDB_map_StorageMap_$1_

@class TripleplaySyncdbSyncDB_map_StorageMap;
@protocol JavaUtilIterator;

#define JavaUtilAbstractSet_RESTRICT 1
#define JavaUtilAbstractSet_INCLUDE 1
#include "java/util/AbstractSet.h"

@interface TripleplaySyncdbSyncDB_map_StorageMap_$1 : JavaUtilAbstractSet {
 @public
  TripleplaySyncdbSyncDB_map_StorageMap *this$0_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB_map_StorageMap *this$0;

- (id<JavaUtilIterator>)iterator;
- (int)size;
- (id)initWithTripleplaySyncdbSyncDB_map_StorageMap:(TripleplaySyncdbSyncDB_map_StorageMap *)outer$;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_map_StorageMap_$1_$1_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_map_StorageMap_$1_$1_INCLUDE)
#define _TripleplaySyncdbSyncDB_map_StorageMap_$1_$1_

@class TripleplaySyncdbSyncDB_map_StorageMap_$1;
@protocol JavaUtilMap_Entry;

#define JavaUtilIterator_RESTRICT 1
#define JavaUtilIterator_INCLUDE 1
#include "java/util/Iterator.h"

@interface TripleplaySyncdbSyncDB_map_StorageMap_$1_$1 : NSObject < JavaUtilIterator > {
 @public
  TripleplaySyncdbSyncDB_map_StorageMap_$1 *this$0_;
  id<JavaUtilIterator> _keysIter_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB_map_StorageMap_$1 *this$0;
@property (nonatomic, strong) id<JavaUtilIterator> _keysIter;

- (BOOL)hasNext;
- (id<JavaUtilMap_Entry>)next;
- (void)remove;
- (id)initWithTripleplaySyncdbSyncDB_map_StorageMap_$1:(TripleplaySyncdbSyncDB_map_StorageMap_$1 *)outer$;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_map_StorageMap_$1_$1_$1_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_map_StorageMap_$1_$1_$1_INCLUDE)
#define _TripleplaySyncdbSyncDB_map_StorageMap_$1_$1_$1_

@class TripleplaySyncdbSyncDB_map_StorageMap_$1_$1;

#define JavaUtilMap_RESTRICT 1
#define JavaUtilMap_Entry_INCLUDE 1
#include "java/util/Map.h"

@interface TripleplaySyncdbSyncDB_map_StorageMap_$1_$1_$1 : NSObject < JavaUtilMap_Entry > {
 @public
  TripleplaySyncdbSyncDB_map_StorageMap_$1_$1 *this$0_;
  id val$key_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB_map_StorageMap_$1_$1 *this$0;
@property (nonatomic, strong) id val$key;

- (id)getKey;
- (id)getValue;
- (id)setValueWithId:(id)value;
- (id)initWithTripleplaySyncdbSyncDB_map_StorageMap_$1_$1:(TripleplaySyncdbSyncDB_map_StorageMap_$1_$1 *)outer$
                                                   withId:(id)capture$0;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_map_StorageMap_$2_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_map_StorageMap_$2_INCLUDE)
#define _TripleplaySyncdbSyncDB_map_StorageMap_$2_

@class TripleplaySyncdbSyncDB_map_StorageMap;
@protocol JavaUtilIterator;
@protocol JavaUtilSet;

#define JavaUtilHashSet_RESTRICT 1
#define JavaUtilHashSet_INCLUDE 1
#include "java/util/HashSet.h"

@interface TripleplaySyncdbSyncDB_map_StorageMap_$2 : JavaUtilHashSet {
 @public
  TripleplaySyncdbSyncDB_map_StorageMap *this$0_;
  BOOL _superctordone_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB_map_StorageMap *this$0;
@property (nonatomic, assign) BOOL _superctordone;

- (BOOL)addWithId:(id)elem;
- (BOOL)removeWithId:(id)elem;
- (id<JavaUtilIterator>)iterator;
- (void)removeStorageWithId:(id)key;
- (id)initWithTripleplaySyncdbSyncDB_map_StorageMap:(TripleplaySyncdbSyncDB_map_StorageMap *)outer$
                                    withJavaUtilSet:(id<JavaUtilSet>)arg$0;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_map_StorageMap_$2_$1_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_map_StorageMap_$2_$1_INCLUDE)
#define _TripleplaySyncdbSyncDB_map_StorageMap_$2_$1_

@class TripleplaySyncdbSyncDB_map_StorageMap_$2;

#define JavaUtilIterator_RESTRICT 1
#define JavaUtilIterator_INCLUDE 1
#include "java/util/Iterator.h"

@interface TripleplaySyncdbSyncDB_map_StorageMap_$2_$1 : NSObject < JavaUtilIterator > {
 @public
  TripleplaySyncdbSyncDB_map_StorageMap_$2 *this$0_;
  id _current_;
  id<JavaUtilIterator> val$iter_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB_map_StorageMap_$2 *this$0;
@property (nonatomic, strong) id _current;
@property (nonatomic, strong) id<JavaUtilIterator> val$iter;

- (BOOL)hasNext;
- (id)next;
- (void)remove;
- (id)initWithTripleplaySyncdbSyncDB_map_StorageMap_$2:(TripleplaySyncdbSyncDB_map_StorageMap_$2 *)outer$
                                  withJavaUtilIterator:(id<JavaUtilIterator>)capture$0;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_SubDB_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_SubDB_INCLUDE)
#define _TripleplaySyncdbSyncDB_SubDB_

@class ReactRMap;
@class ReactRSet;
@class ReactValue;
@class TripleplaySyncdbCodec;
@class TripleplaySyncdbSyncDB;
@protocol TripleplaySyncdbResolver;
@protocol TripleplaySyncdbSetResolver;

@interface TripleplaySyncdbSyncDB_SubDB : NSObject {
 @public
  TripleplaySyncdbSyncDB *this$0_;
  NSString *_dbpre_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB *this$0;
@property (nonatomic, copy) NSString *_dbpre;

- (id)initWithTripleplaySyncdbSyncDB:(TripleplaySyncdbSyncDB *)outer$
                        withNSString:(NSString *)prefix;
- (ReactValue *)valueWithNSString:(NSString *)name
                           withId:(id)defval
        withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)codec
     withTripleplaySyncdbResolver:(id<TripleplaySyncdbResolver>)resolver;
- (ReactRSet *)setWithNSString:(NSString *)name
     withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)codec
withTripleplaySyncdbSetResolver:(id<TripleplaySyncdbSetResolver>)resolver;
- (ReactRMap *)mapWithNSString:(NSString *)prefix
     withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)keyCodec
     withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)valCodec
  withTripleplaySyncdbResolver:(id<TripleplaySyncdbResolver>)resolver;
- (NSString *)keyWithNSString:(NSString *)name;
- (void)purge;
- (void)queuePurge;
- (void)cancelQueuedPurge;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_$1_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_$1_INCLUDE)
#define _TripleplaySyncdbSyncDB_$1_

@class TripleplaySyncdbCodec;
@class TripleplaySyncdbSyncDB;

#define ReactValue_RESTRICT 1
#define ReactValue_INCLUDE 1
#include "react/Value.h"

@interface TripleplaySyncdbSyncDB_$1 : ReactValue {
 @public
  TripleplaySyncdbSyncDB *this$0_;
  NSString *val$name_;
  id val$defval_;
  TripleplaySyncdbCodec *val$codec_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB *this$0;
@property (nonatomic, copy) NSString *val$name;
@property (nonatomic, strong) id val$defval;
@property (nonatomic, strong) TripleplaySyncdbCodec *val$codec;

- (id)get;
- (id)updateLocalWithId:(id)value;
- (void)emitChangeWithId:(id)value
                  withId:(id)ovalue;
- (id)initWithTripleplaySyncdbSyncDB:(TripleplaySyncdbSyncDB *)outer$
                              withId:(id)arg$0
                        withNSString:(NSString *)capture$0
                              withId:(id)capture$1
           withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)capture$2;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_Property_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_Property_INCLUDE)
#define _TripleplaySyncdbSyncDB_Property_

@protocol TripleplaySyncdbSyncDB_Property < NSObject, JavaObject >
- (BOOL)mergeWithNSString:(NSString *)name
             withNSString:(NSString *)data;
- (void)updateWithNSString:(NSString *)name
              withNSString:(NSString *)data;
- (void)prepareToMeld;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_$2_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_$2_INCLUDE)
#define _TripleplaySyncdbSyncDB_$2_

@class ReactValue;
@class TripleplaySyncdbCodec;
@class TripleplaySyncdbSyncDB;
@protocol TripleplaySyncdbResolver;

@interface TripleplaySyncdbSyncDB_$2 : NSObject < TripleplaySyncdbSyncDB_Property > {
 @public
  TripleplaySyncdbSyncDB *this$0_;
  TripleplaySyncdbCodec *val$codec_;
  id val$defval_;
  id<TripleplaySyncdbResolver> val$resolver_;
  ReactValue *val$value_;
  NSString *val$name_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB *this$0;
@property (nonatomic, strong) TripleplaySyncdbCodec *val$codec;
@property (nonatomic, strong) id val$defval;
@property (nonatomic, strong) id<TripleplaySyncdbResolver> val$resolver;
@property (nonatomic, strong) ReactValue *val$value;
@property (nonatomic, copy) NSString *val$name;

- (BOOL)mergeWithNSString:(NSString *)name
             withNSString:(NSString *)data;
- (void)updateWithNSString:(NSString *)name
              withNSString:(NSString *)data;
- (void)prepareToMeld;
- (id)initWithTripleplaySyncdbSyncDB:(TripleplaySyncdbSyncDB *)outer$
           withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)capture$0
                              withId:(id)capture$1
        withTripleplaySyncdbResolver:(id<TripleplaySyncdbResolver>)capture$2
                      withReactValue:(ReactValue *)capture$3
                        withNSString:(NSString *)capture$4;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_$3_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_$3_INCLUDE)
#define _TripleplaySyncdbSyncDB_$3_

@class TripleplaySyncdbCodec;
@class TripleplaySyncdbSyncDB;
@protocol JavaUtilSet;

#define ReactRSet_RESTRICT 1
#define ReactRSet_INCLUDE 1
#include "react/RSet.h"

@interface TripleplaySyncdbSyncDB_$3 : ReactRSet {
 @public
  TripleplaySyncdbSyncDB *this$0_;
  NSString *val$name_;
  TripleplaySyncdbCodec *val$codec_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB *this$0;
@property (nonatomic, copy) NSString *val$name;
@property (nonatomic, strong) TripleplaySyncdbCodec *val$codec;

- (void)emitAddWithId:(id)elem;
- (void)emitRemoveWithId:(id)elem;
- (id)initWithTripleplaySyncdbSyncDB:(TripleplaySyncdbSyncDB *)outer$
                     withJavaUtilSet:(id<JavaUtilSet>)arg$0
                        withNSString:(NSString *)capture$0
           withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)capture$1;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_$4_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_$4_INCLUDE)
#define _TripleplaySyncdbSyncDB_$4_

@class ReactRSet;
@class TripleplaySyncdbCodec;
@class TripleplaySyncdbSyncDB;
@protocol TripleplaySyncdbSetResolver;

@interface TripleplaySyncdbSyncDB_$4 : NSObject < TripleplaySyncdbSyncDB_Property > {
 @public
  TripleplaySyncdbSyncDB *this$0_;
  TripleplaySyncdbCodec *val$codec_;
  id<TripleplaySyncdbSetResolver> val$resolver_;
  ReactRSet *val$rset_;
  NSString *val$name_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB *this$0;
@property (nonatomic, strong) TripleplaySyncdbCodec *val$codec;
@property (nonatomic, strong) id<TripleplaySyncdbSetResolver> val$resolver;
@property (nonatomic, strong) ReactRSet *val$rset;
@property (nonatomic, copy) NSString *val$name;

- (BOOL)mergeWithNSString:(NSString *)name
             withNSString:(NSString *)data;
- (void)updateWithNSString:(NSString *)name
              withNSString:(NSString *)data;
- (void)prepareToMeld;
- (id)initWithTripleplaySyncdbSyncDB:(TripleplaySyncdbSyncDB *)outer$
           withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)capture$0
     withTripleplaySyncdbSetResolver:(id<TripleplaySyncdbSetResolver>)capture$1
                       withReactRSet:(ReactRSet *)capture$2
                        withNSString:(NSString *)capture$3;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_$5_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_$5_INCLUDE)
#define _TripleplaySyncdbSyncDB_$5_

@class ReactRMap;
@class TripleplaySyncdbCodec;
@class TripleplaySyncdbSyncDB;
@protocol TripleplaySyncdbResolver;

@interface TripleplaySyncdbSyncDB_$5 : NSObject < TripleplaySyncdbSyncDB_Property > {
 @public
  TripleplaySyncdbSyncDB *this$0_;
  TripleplaySyncdbCodec *val$keyCodec_;
  NSString *val$prefix_;
  ReactRMap *val$map_;
  TripleplaySyncdbCodec *val$valCodec_;
  id<TripleplaySyncdbResolver> val$resolver_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB *this$0;
@property (nonatomic, strong) TripleplaySyncdbCodec *val$keyCodec;
@property (nonatomic, copy) NSString *val$prefix;
@property (nonatomic, strong) ReactRMap *val$map;
@property (nonatomic, strong) TripleplaySyncdbCodec *val$valCodec;
@property (nonatomic, strong) id<TripleplaySyncdbResolver> val$resolver;

- (BOOL)mergeWithNSString:(NSString *)name
             withNSString:(NSString *)data;
- (void)updateWithNSString:(NSString *)name
              withNSString:(NSString *)data;
- (void)prepareToMeld;
- (id)initWithTripleplaySyncdbSyncDB:(TripleplaySyncdbSyncDB *)outer$
           withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)capture$0
                        withNSString:(NSString *)capture$1
                       withReactRMap:(ReactRMap *)capture$2
           withTripleplaySyncdbCodec:(TripleplaySyncdbCodec *)capture$3
        withTripleplaySyncdbResolver:(id<TripleplaySyncdbResolver>)capture$4;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_$6_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_$6_INCLUDE)
#define _TripleplaySyncdbSyncDB_$6_

@interface TripleplaySyncdbSyncDB_$6 : NSObject < TripleplaySyncdbSyncDB_Property > {
}

- (BOOL)mergeWithNSString:(NSString *)name
             withNSString:(NSString *)data;
- (void)updateWithNSString:(NSString *)name
              withNSString:(NSString *)data;
- (void)prepareToMeld;
- (id)init;
@end
#endif

#if !defined (_TripleplaySyncdbSyncDB_$7_) && (TripleplaySyncdbSyncDB_INCLUDE_ALL || TripleplaySyncdbSyncDB_$7_INCLUDE)
#define _TripleplaySyncdbSyncDB_$7_

@class TripleplaySyncdbSyncDB;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@interface TripleplaySyncdbSyncDB_$7 : NSObject < JavaLangRunnable > {
 @public
  TripleplaySyncdbSyncDB *this$0_;
}

@property (nonatomic, strong) TripleplaySyncdbSyncDB *this$0;

- (void)run;
- (id)initWithTripleplaySyncdbSyncDB:(TripleplaySyncdbSyncDB *)outer$;
@end
#endif
