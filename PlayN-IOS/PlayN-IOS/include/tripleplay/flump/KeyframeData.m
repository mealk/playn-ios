//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/flump/KeyframeData.java
//
//  Created by Thomas on 7/10/13.
//

#import "java/lang/Float.h"
#import "playn/core/Json.h"
#import "pythagoras/f/IPoint.h"
#import "pythagoras/f/Point.h"
#import "tripleplay/flump/KeyframeData.h"
#import "tripleplay/flump/Symbol.h"

@implementation TripleplayFlumpKeyframeData

@synthesize index = index_;
@synthesize duration = duration_;
@synthesize label = label_;
@synthesize loc = loc_;
@synthesize scale_ = scale__;
@synthesize skew = skew_;
@synthesize pivot = pivot_;
@synthesize visible = visible_;
@synthesize alpha = alpha_;
@synthesize tweened = tweened_;
@synthesize ease = ease_;
@synthesize _symbol = _symbol_;
@synthesize _symbolName = _symbolName_;

- (id)initWithPlaynCoreJson_Object:(id<PlaynCoreJson_Object>)json
   withTripleplayFlumpKeyframeData:(TripleplayFlumpKeyframeData *)prevKf {
  if ((self = [super init])) {
    index_ = (prevKf != nil) ? ((TripleplayFlumpKeyframeData *) NIL_CHK(prevKf)).index + ((TripleplayFlumpKeyframeData *) NIL_CHK(prevKf)).duration : 0;
    duration_ = [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getIntWithNSString:@"duration"];
    label_ = [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getStringWithNSString:@"label"];
    loc_ = [TripleplayFlumpKeyframeData getPointWithPlaynCoreJson_Object:json withNSString:@"loc" withFloat:0 withFloat:0];
    scale__ = [TripleplayFlumpKeyframeData getPointWithPlaynCoreJson_Object:json withNSString:@"scale" withFloat:1 withFloat:1];
    skew_ = [TripleplayFlumpKeyframeData getPointWithPlaynCoreJson_Object:json withNSString:@"skew" withFloat:0 withFloat:0];
    pivot_ = [TripleplayFlumpKeyframeData getPointWithPlaynCoreJson_Object:json withNSString:@"pivot" withFloat:0 withFloat:0];
    alpha_ = [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getNumberWithNSString:@"alpha" withFloat:1];
    visible_ = [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getBooleanWithNSString:@"visible" withBOOL:YES];
    tweened_ = [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getBooleanWithNSString:@"tweened" withBOOL:YES];
    ease_ = [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getNumberWithNSString:@"ease" withFloat:0];
    _symbolName_ = [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getStringWithNSString:@"ref"];
  }
  return self;
}

- (id<TripleplayFlumpSymbol>)symbol {
  return _symbol_;
}

+ (id<PythagorasFIPoint>)getPointWithPlaynCoreJson_Object:(id<PlaynCoreJson_Object>)json
                                             withNSString:(NSString *)field
                                                withFloat:(float)defX
                                                withFloat:(float)defY {
  id<PlaynCoreJson_TypedArray> array = ((id<PlaynCoreJson_TypedArray>) [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getArrayWithNSString:field withIOSClass:[IOSClass classWithClass:[JavaLangFloat class]]]);
  return (array != nil) ? [[PythagorasFPoint alloc] initWithFloat:[((JavaLangFloat *) [((id<PlaynCoreJson_TypedArray>) NIL_CHK(array)) getWithInt:0]) floatValue] withFloat:[((JavaLangFloat *) [((id<PlaynCoreJson_TypedArray>) NIL_CHK(array)) getWithInt:1]) floatValue]] : [[PythagorasFPoint alloc] initWithFloat:defX withFloat:defY];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayFlumpKeyframeData *typedCopy = (TripleplayFlumpKeyframeData *) copy;
  typedCopy.index = index_;
  typedCopy.duration = duration_;
  typedCopy.label = label_;
  typedCopy.loc = loc_;
  typedCopy.scale_ = scale__;
  typedCopy.skew = skew_;
  typedCopy.pivot = pivot_;
  typedCopy.visible = visible_;
  typedCopy.alpha = alpha_;
  typedCopy.tweened = tweened_;
  typedCopy.ease = ease_;
  typedCopy._symbol = _symbol_;
  typedCopy._symbolName = _symbolName_;
}

@end
