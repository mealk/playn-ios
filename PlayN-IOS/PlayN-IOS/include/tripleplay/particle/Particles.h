//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/particle/Particles.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !TripleplayParticleParticles_RESTRICT
#define TripleplayParticleParticles_INCLUDE_ALL 1
#endif
#undef TripleplayParticleParticles_RESTRICT

#if !defined (_TripleplayParticleParticles_) && (TripleplayParticleParticles_INCLUDE_ALL || TripleplayParticleParticles_INCLUDE)
#define _TripleplayParticleParticles_

@class ReactSignal;
@class TripleplayParticleEmitter;
@class TripleplayParticleParticleShader;
@class TripleplayParticleParticles_Now;
@protocol PlaynCoreGroupLayer;
@protocol PlaynCoreImage;
@protocol PlaynCoreUtilClock;

#define TripleplayUtilPaintable_RESTRICT 1
#define TripleplayUtilPaintable_INCLUDE 1
#include "tripleplay/util/Paintable.h"

@interface TripleplayParticleParticles : NSObject < TripleplayUtilPaintable > {
 @public
  TripleplayParticleParticles_Now *_now_;
  ReactSignal *_onPaint_;
  TripleplayParticleParticleShader *_shader_;
}

@property (nonatomic, strong) TripleplayParticleParticles_Now *_now;
@property (nonatomic, strong) ReactSignal *_onPaint;
@property (nonatomic, strong) TripleplayParticleParticleShader *_shader;

- (TripleplayParticleEmitter *)createEmitterWithInt:(int)maxParticles
                                 withPlaynCoreImage:(id<PlaynCoreImage>)image;
- (TripleplayParticleEmitter *)createEmitterWithInt:(int)maxParticles
                                 withPlaynCoreImage:(id<PlaynCoreImage>)image
                            withPlaynCoreGroupLayer:(id<PlaynCoreGroupLayer>)onLayer;
- (void)paintWithPlaynCoreUtilClock:(id<PlaynCoreUtilClock>)clock;
- (void)clear;
- (float)now;
- (id)init;
@end
#endif

#if !defined (_TripleplayParticleParticles_Now_) && (TripleplayParticleParticles_INCLUDE_ALL || TripleplayParticleParticles_Now_INCLUDE)
#define _TripleplayParticleParticles_Now_

@interface TripleplayParticleParticles_Now : NSObject {
 @public
  float time_;
  float dt_;
}

@property (nonatomic, assign) float time;
@property (nonatomic, assign) float dt;

- (TripleplayParticleParticles_Now *)updateWithFloat:(float)delta;
- (id)init;
@end
#endif

#if !defined (_TripleplayParticleParticles_$1_) && (TripleplayParticleParticles_INCLUDE_ALL || TripleplayParticleParticles_$1_INCLUDE)
#define _TripleplayParticleParticles_$1_

@class TripleplayParticleEmitter;
@class TripleplayParticleParticles_Now;

#define ReactSlot_RESTRICT 1
#define ReactSlot_INCLUDE 1
#include "react/Slot.h"

@interface TripleplayParticleParticles_$1 : ReactSlot {
 @public
  TripleplayParticleEmitter *val$emitter_;
}

@property (nonatomic, strong) TripleplayParticleEmitter *val$emitter;

- (void)onEmitWithId:(TripleplayParticleParticles_Now *)now;
- (id)initWithTripleplayParticleEmitter:(TripleplayParticleEmitter *)capture$0;
@end
#endif
