//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/particle/init/Transform.java
//
//  Created by Thomas on 7/10/13.
//

@class IOSFloatArray;
@class TripleplayUtilRandoms;
@protocol PlaynCoreInternalTransform;
@protocol PlaynCoreLayer;

#import "JreEmulation.h"
#import "tripleplay/particle/Initializer.h"

@interface TripleplayParticleInitTransform : NSObject {
}

+ (TripleplayParticleInitializer *)identity;
+ (TripleplayParticleInitializer *)constantWithFloat:(float)tx
                                           withFloat:(float)ty;
+ (TripleplayParticleInitializer *)constantWithFloat:(float)scale_
                                           withFloat:(float)rot
                                           withFloat:(float)tx
                                           withFloat:(float)ty;
+ (TripleplayParticleInitializer *)scale__WithFloat:(float)scale_;
+ (TripleplayParticleInitializer *)randomScaleWithTripleplayUtilRandoms:(TripleplayUtilRandoms *)rando
                                                              withFloat:(float)minScale
                                                              withFloat:(float)maxScale;
+ (TripleplayParticleInitializer *)layerWithPlaynCoreLayer:(id<PlaynCoreLayer>)layer;
+ (TripleplayParticleInitializer *)randomPosWithTripleplayUtilRandoms:(TripleplayUtilRandoms *)rando
                                                            withFloat:(float)x
                                                            withFloat:(float)y
                                                            withFloat:(float)width
                                                            withFloat:(float)height;
+ (TripleplayParticleInitializer *)randomOffsetWithTripleplayUtilRandoms:(TripleplayUtilRandoms *)rando
                                                               withFloat:(float)noise;
- (id)init;
@end

@interface TripleplayParticleInitTransform_$1 : TripleplayParticleInitializer {
 @public
  float val$m00_;
  float val$m01_;
  float val$m10_;
  float val$m11_;
  float val$tx_;
  float val$ty_;
}

@property (nonatomic, assign) float val$m00;
@property (nonatomic, assign) float val$m01;
@property (nonatomic, assign) float val$m10;
@property (nonatomic, assign) float val$m11;
@property (nonatomic, assign) float val$tx;
@property (nonatomic, assign) float val$ty;

- (void)init__WithInt:(int)index
withJavaLangFloatArray:(IOSFloatArray *)data
              withInt:(int)start OBJC_METHOD_FAMILY_NONE;
- (id)initWithFloat:(float)capture$0
          withFloat:(float)capture$1
          withFloat:(float)capture$2
          withFloat:(float)capture$3
          withFloat:(float)capture$4
          withFloat:(float)capture$5;
@end

@interface TripleplayParticleInitTransform_$2 : TripleplayParticleInitializer {
 @public
  float val$scale_;
}

@property (nonatomic, assign) float val$scale;

- (void)init__WithInt:(int)index
withJavaLangFloatArray:(IOSFloatArray *)data
              withInt:(int)start OBJC_METHOD_FAMILY_NONE;
- (id)initWithFloat:(float)capture$0;
@end

@interface TripleplayParticleInitTransform_$3 : TripleplayParticleInitializer {
 @public
  TripleplayUtilRandoms *val$rando_;
  float val$minScale_;
  float val$maxScale_;
}

@property (nonatomic, strong) TripleplayUtilRandoms *val$rando;
@property (nonatomic, assign) float val$minScale;
@property (nonatomic, assign) float val$maxScale;

- (void)init__WithInt:(int)index
withJavaLangFloatArray:(IOSFloatArray *)data
              withInt:(int)start OBJC_METHOD_FAMILY_NONE;
- (id)initWithTripleplayUtilRandoms:(TripleplayUtilRandoms *)capture$0
                          withFloat:(float)capture$1
                          withFloat:(float)capture$2;
@end

@interface TripleplayParticleInitTransform_$4 : TripleplayParticleInitializer {
 @public
  id<PlaynCoreInternalTransform> xform_;
  IOSFloatArray *_matrix_;
  id<PlaynCoreLayer> val$layer_;
}

@property (nonatomic, strong) id<PlaynCoreInternalTransform> xform;
@property (nonatomic, strong) IOSFloatArray *_matrix;
@property (nonatomic, strong) id<PlaynCoreLayer> val$layer;

- (void)willInitWithInt:(int)count;
- (void)init__WithInt:(int)index
withJavaLangFloatArray:(IOSFloatArray *)data
              withInt:(int)start OBJC_METHOD_FAMILY_NONE;
- (id)initWithPlaynCoreLayer:(id<PlaynCoreLayer>)capture$0;
@end

@interface TripleplayParticleInitTransform_$5 : TripleplayParticleInitializer {
 @public
  float val$x_;
  TripleplayUtilRandoms *val$rando_;
  float val$width_;
  float val$y_;
  float val$height_;
}

@property (nonatomic, assign) float val$x;
@property (nonatomic, strong) TripleplayUtilRandoms *val$rando;
@property (nonatomic, assign) float val$width;
@property (nonatomic, assign) float val$y;
@property (nonatomic, assign) float val$height;

- (void)init__WithInt:(int)index
withJavaLangFloatArray:(IOSFloatArray *)data
              withInt:(int)start OBJC_METHOD_FAMILY_NONE;
- (id)initWithFloat:(float)capture$0
withTripleplayUtilRandoms:(TripleplayUtilRandoms *)capture$1
          withFloat:(float)capture$2
          withFloat:(float)capture$3
          withFloat:(float)capture$4;
@end

@interface TripleplayParticleInitTransform_$6 : TripleplayParticleInitializer {
 @public
  TripleplayUtilRandoms *val$rando_;
  float val$noise_;
}

@property (nonatomic, strong) TripleplayUtilRandoms *val$rando;
@property (nonatomic, assign) float val$noise;

- (void)init__WithInt:(int)index
withJavaLangFloatArray:(IOSFloatArray *)data
              withInt:(int)start OBJC_METHOD_FAMILY_NONE;
- (id)initWithTripleplayUtilRandoms:(TripleplayUtilRandoms *)capture$0
                          withFloat:(float)capture$1;
@end
