//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/MenuHost.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Boolean.h"
#include "java/lang/Math.h"
#include "playn/core/Connection.h"
#include "playn/core/Events.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/Layer.h"
#include "playn/core/PlayN.h"
#include "playn/core/Pointer.h"
#include "playn/core/UIOverlay.h"
#include "pythagoras/f/Dimension.h"
#include "pythagoras/f/IDimension.h"
#include "pythagoras/f/IPoint.h"
#include "pythagoras/f/IRectangle.h"
#include "pythagoras/f/Point.h"
#include "pythagoras/f/Rectangle.h"
#include "react/Connection.h"
#include "react/SignalView.h"
#include "react/Slot.h"
#include "tripleplay/anim/Animator.h"
#include "tripleplay/ui/Element.h"
#include "tripleplay/ui/Elements.h"
#include "tripleplay/ui/Interface.h"
#include "tripleplay/ui/Layout.h"
#include "tripleplay/ui/Menu.h"
#include "tripleplay/ui/MenuHost.h"
#include "tripleplay/ui/Root.h"
#include "tripleplay/ui/Style.h"
#include "tripleplay/ui/Stylesheet.h"

@implementation TripleplayUiMenuHost

@synthesize rootLayer = rootLayer_;
@synthesize iface = iface_;
@synthesize _stylesheet = _stylesheet_;
@synthesize _active = _active_;

+ (id<PlaynCoreConnection>)relayEventsWithPlaynCoreLayer:(id<PlaynCoreLayer>)from
                                    withTripleplayUiMenu:(TripleplayUiMenu *)to {
  return [((id<PlaynCoreLayer>) nil_chk(from)) addListenerWithPlaynCorePointer_Listener:[[TripleplayUiMenuHost_$1 alloc] initWithTripleplayUiMenu:to]];
}

- (id)initWithTripleplayUiInterface:(TripleplayUiInterface *)iface
           withTripleplayUiElements:(TripleplayUiElements *)root {
  if ((self = [self initTripleplayUiMenuHostWithTripleplayUiInterface:iface withPlaynCoreGroupLayer:((TripleplayUiElements *) nil_chk(root)).layer])) {
    _stylesheet_ = [((TripleplayUiElements *) nil_chk(root)) stylesheet];
  }
  return self;
}

- (id)initTripleplayUiMenuHostWithTripleplayUiInterface:(TripleplayUiInterface *)iface
                                withPlaynCoreGroupLayer:(id<PlaynCoreGroupLayer>)rootLayer {
  if ((self = [super init])) {
    _stylesheet_ = [((TripleplayUiStylesheet_Builder *) nil_chk([TripleplayUiStylesheet builder])) create];
    self.iface = iface;
    self.rootLayer = rootLayer;
  }
  return self;
}

- (id)initWithTripleplayUiInterface:(TripleplayUiInterface *)iface
            withPlaynCoreGroupLayer:(id<PlaynCoreGroupLayer>)rootLayer {
  return [self initTripleplayUiMenuHostWithTripleplayUiInterface:iface withPlaynCoreGroupLayer:rootLayer];
}

- (TripleplayUiMenuHost *)setStylesheetWithTripleplayUiStylesheet:(TripleplayUiStylesheet *)sheet {
  _stylesheet_ = sheet;
  return self;
}

- (ReactSlot *)onPopup {
  return [[TripleplayUiMenuHost_$2 alloc] initWithTripleplayUiMenuHost:self];
}

- (void)popupWithTripleplayUiMenuHost_Pop:(TripleplayUiMenuHost_Pop *)pop {
  if (((TripleplayUiMenuHost_Pop *) nil_chk(pop)).bounds == nil) (void) [((TripleplayUiMenuHost_Pop *) nil_chk(pop)) inScreenAreaWithPythagorasFIRectangle:[[PythagorasFRectangle alloc] initWithFloat:0 withFloat:0 withFloat:[((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) width] withFloat:[((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) height]]];
  TripleplayUiRoot *menuRoot = [((TripleplayUiInterface *) nil_chk(iface_)) createRootWithTripleplayUiLayout:[[TripleplayUiMenuHost_RootLayout alloc] init] withTripleplayUiStylesheet:_stylesheet_ withPlaynCoreGroupLayer:rootLayer_];
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(((TripleplayUiRoot *) nil_chk(menuRoot)).layer)) setDepthWithFloat:1];
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(((TripleplayUiRoot *) nil_chk(menuRoot)).layer)) setHitTesterWithPlaynCoreLayer_HitTester:nil];
  (void) [((TripleplayUiRoot *) nil_chk(menuRoot)) addWithTripleplayUiElementArray:[IOSObjectArray arrayWithObjects:(id[]){ [((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop)).menu)) setConstraintWithTripleplayUiLayout_Constraint:pop] } count:1 type:[IOSClass classWithClass:[TripleplayUiElement class]]]];
  (void) [((TripleplayUiRoot *) nil_chk(menuRoot)) pack];
  PythagorasFPoint *loc = [PlaynCoreLayer_Util screenToLayerWithPlaynCoreLayer:rootLayer_ withFloat:[((id<PythagorasFIPoint>) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop)).position)) x] + [((TripleplayUiStyle_HAlignEnum *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop))._halign)) offsetWithFloat:[((id<PythagorasFIDimension>) nil_chk([((TripleplayUiRoot *) nil_chk(menuRoot)) size])) width] withFloat:0] withFloat:[((id<PythagorasFIPoint>) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop)).position)) y] + [((TripleplayUiStyle_VAlignEnum *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop))._valign)) offsetWithFloat:[((id<PythagorasFIDimension>) nil_chk([((TripleplayUiRoot *) nil_chk(menuRoot)) size])) height] withFloat:0]];
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(((TripleplayUiRoot *) nil_chk(menuRoot)).layer)) setTranslationWithFloat:((PythagorasFPoint *) nil_chk(loc)).x_ withFloat:((PythagorasFPoint *) nil_chk(loc)).y_];
  TripleplayUiMenuHost_Activation *activation = [[TripleplayUiMenuHost_Activation alloc] initWithTripleplayUiMenuHost_Pop:pop];
  ((TripleplayUiMenuHost_Activation *) nil_chk(activation)).deactivated = [((id<ReactSignalView>) nil_chk([((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop)).menu)) deactivated])) connectWithReactSlot:[[TripleplayUiMenuHost_$3 alloc] initWithTripleplayUiMenuHost:self withTripleplayUiMenuHost_Pop:pop withTripleplayUiRoot:menuRoot withTripleplayUiMenuHost_Activation:activation]];
  ((TripleplayUiMenuHost_Activation *) nil_chk(activation)).triggerRemoved = [((id<ReactSignalView>) nil_chk([((TripleplayUiElement *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop)).trigger)) hierarchyChanged])) connectWithReactSlot:[[TripleplayUiMenuHost_$4 alloc] initWithTripleplayUiMenuHost_Pop:pop]];
  if (_active_ != nil) [((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(_active_.pop)).menu)) deactivate];
  [((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop)).menu)) init__WithTripleplayAnimAnimator:[((TripleplayUiInterface *) nil_chk(iface_)) animator]];
  _active_ = activation;
  [((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop)).menu)) activate];
}

- (TripleplayUiMenu *)active {
  return _active_ != nil ? ((TripleplayUiMenuHost_Pop *) nil_chk(((TripleplayUiMenuHost_Activation *) nil_chk(_active_)).pop)).menu : nil;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiMenuHost *typedCopy = (TripleplayUiMenuHost *) copy;
  typedCopy.rootLayer = rootLayer_;
  typedCopy.iface = iface_;
  typedCopy._stylesheet = _stylesheet_;
  typedCopy._active = _active_;
}

@end
@implementation TripleplayUiMenuHost_Pop

@synthesize trigger = trigger_;
@synthesize menu = menu_;
@synthesize position = position_;
@synthesize bounds = bounds_;
@synthesize _retain = _retain_;
@synthesize _relayTarget = _relayTarget_;
@synthesize _halign = _halign_;
@synthesize _valign = _valign_;

- (id)initWithTripleplayUiElement:(TripleplayUiElement *)trigger
             withTripleplayUiMenu:(TripleplayUiMenu *)menu {
  if ((self = [super init])) {
    _halign_ = [TripleplayUiStyle_HAlignEnum LEFT];
    _valign_ = [TripleplayUiStyle_VAlignEnum TOP];
    self.menu = menu;
    self.trigger = trigger;
    position_ = [[PythagorasFPoint alloc] initWithFloat:0 withFloat:0];
  }
  return self;
}

- (TripleplayUiMenuHost_Pop *)relayEventsWithPlaynCoreLayer:(id<PlaynCoreLayer>)layer {
  _relayTarget_ = layer;
  return self;
}

- (TripleplayUiMenuHost_Pop *)atEventPosWithPlaynCoreEvents_Position:(id<PlaynCoreEvents_Position>)pos {
  return [self atScreenPosWithFloat:[((id<PlaynCoreEvents_Position>) nil_chk(pos)) x] withFloat:[((id<PlaynCoreEvents_Position>) nil_chk(pos)) y]];
}

- (TripleplayUiMenuHost_Pop *)atScreenPosWithFloat:(float)x
                                         withFloat:(float)y {
  position_ = [[PythagorasFPoint alloc] initWithFloat:x withFloat:y];
  return self;
}

- (TripleplayUiMenuHost_Pop *)atLayerXWithPlaynCoreLayer:(id<PlaynCoreLayer>)layer
                                               withFloat:(float)x {
  return [self atScreenPosWithFloat:((PythagorasFPoint *) nil_chk([PlaynCoreLayer_Util layerToScreenWithPlaynCoreLayer:layer withFloat:x withFloat:0])).x_ withFloat:[((id<PythagorasFIPoint>) nil_chk(position_)) y]];
}

- (TripleplayUiMenuHost_Pop *)atLayerYWithPlaynCoreLayer:(id<PlaynCoreLayer>)layer
                                               withFloat:(float)y {
  return [self atScreenPosWithFloat:[((id<PythagorasFIPoint>) nil_chk(position_)) x] withFloat:((PythagorasFPoint *) nil_chk([PlaynCoreLayer_Util layerToScreenWithPlaynCoreLayer:layer withFloat:0 withFloat:y])).y_];
}

- (TripleplayUiMenuHost_Pop *)halignWithTripleplayUiStyle_HAlignEnum:(TripleplayUiStyle_HAlignEnum *)halign {
  _halign_ = halign;
  return self;
}

- (TripleplayUiMenuHost_Pop *)valignWithTripleplayUiStyle_VAlignEnum:(TripleplayUiStyle_VAlignEnum *)valign {
  _valign_ = valign;
  return self;
}

- (TripleplayUiMenuHost_Pop *)toLeftWithFloat:(float)x {
  return [((TripleplayUiMenuHost_Pop *) nil_chk([self atLayerXWithPlaynCoreLayer:((TripleplayUiElement *) nil_chk(trigger_)).layer withFloat:x])) halignWithTripleplayUiStyle_HAlignEnum:[TripleplayUiStyle_HAlignEnum RIGHT]];
}

- (TripleplayUiMenuHost_Pop *)toRightWithFloat:(float)x {
  return [((TripleplayUiMenuHost_Pop *) nil_chk([self atLayerXWithPlaynCoreLayer:((TripleplayUiElement *) nil_chk(trigger_)).layer withFloat:[((id<PythagorasFIDimension>) nil_chk([((TripleplayUiElement *) nil_chk(trigger_)) size])) width] + x])) halignWithTripleplayUiStyle_HAlignEnum:[TripleplayUiStyle_HAlignEnum LEFT]];
}

- (TripleplayUiMenuHost_Pop *)toTopWithFloat:(float)y {
  return [((TripleplayUiMenuHost_Pop *) nil_chk([self atLayerYWithPlaynCoreLayer:((TripleplayUiElement *) nil_chk(trigger_)).layer withFloat:y])) valignWithTripleplayUiStyle_VAlignEnum:[TripleplayUiStyle_VAlignEnum TOP]];
}

- (TripleplayUiMenuHost_Pop *)toBottomWithFloat:(float)y {
  return [((TripleplayUiMenuHost_Pop *) nil_chk([self atLayerYWithPlaynCoreLayer:((TripleplayUiElement *) nil_chk(trigger_)).layer withFloat:[((id<PythagorasFIDimension>) nil_chk([((TripleplayUiElement *) nil_chk(trigger_)) size])) height] + y])) valignWithTripleplayUiStyle_VAlignEnum:[TripleplayUiStyle_VAlignEnum BOTTOM]];
}

- (TripleplayUiMenuHost_Pop *)retainMenu {
  _retain_ = YES;
  return self;
}

- (TripleplayUiMenuHost_Pop *)inScreenAreaWithPythagorasFIRectangle:(id<PythagorasFIRectangle>)area {
  bounds_ = [[PythagorasFRectangle alloc] initWithPythagorasFIRectangle:area];
  return self;
}

- (TripleplayUiMenuHost_Pop *)inElementWithTripleplayUiElement:(TripleplayUiElement *)elem {
  PythagorasFPoint *tl = [PlaynCoreLayer_Util layerToScreenWithPlaynCoreLayer:((TripleplayUiElement *) nil_chk(elem)).layer withFloat:0 withFloat:0];
  PythagorasFPoint *br = [PlaynCoreLayer_Util layerToScreenWithPlaynCoreLayer:((TripleplayUiElement *) nil_chk(elem)).layer withFloat:[((id<PythagorasFIDimension>) nil_chk([((TripleplayUiElement *) nil_chk(elem)) size])) width] withFloat:[((id<PythagorasFIDimension>) nil_chk([((TripleplayUiElement *) nil_chk(elem)) size])) height]];
  bounds_ = [[PythagorasFRectangle alloc] initWithFloat:[((PythagorasFPoint *) nil_chk(tl)) x] withFloat:[((PythagorasFPoint *) nil_chk(tl)) y] withFloat:[((PythagorasFPoint *) nil_chk(br)) x] - [((PythagorasFPoint *) nil_chk(tl)) x] withFloat:[((PythagorasFPoint *) nil_chk(br)) y] - [((PythagorasFPoint *) nil_chk(tl)) y]];
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiMenuHost_Pop *typedCopy = (TripleplayUiMenuHost_Pop *) copy;
  typedCopy.trigger = trigger_;
  typedCopy.menu = menu_;
  typedCopy.position = position_;
  typedCopy.bounds = bounds_;
  typedCopy._retain = _retain_;
  typedCopy._relayTarget = _relayTarget_;
  typedCopy._halign = _halign_;
  typedCopy._valign = _valign_;
}

@end
@implementation TripleplayUiMenuHost_RootLayout

- (PythagorasFDimension *)computeSizeWithTripleplayUiElements:(TripleplayUiElements *)elems
                                                    withFloat:(float)hintX
                                                    withFloat:(float)hintY {
  return [[PythagorasFDimension alloc] initWithPythagorasFIDimension:[self preferredSizeWithTripleplayUiElement:[((TripleplayUiElements *) nil_chk(elems)) childAtWithInt:0] withFloat:hintX withFloat:hintY]];
}

- (void)layoutWithTripleplayUiElements:(TripleplayUiElements *)elems
                             withFloat:(float)left
                             withFloat:(float)top
                             withFloat:(float)width
                             withFloat:(float)height {
  if ([((TripleplayUiElements *) nil_chk(elems)) childCount] == 0) return;
  TripleplayUiMenuHost_Pop *pop = (TripleplayUiMenuHost_Pop *) [((TripleplayUiElement *) nil_chk([((TripleplayUiElements *) nil_chk(elems)) childAtWithInt:0])) constraint];
  if ([((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(pop)).menu)) automaticallyConfine]) {
    id<PythagorasFIRectangle> bounds = ((TripleplayUiMenuHost_Pop *) nil_chk(pop)).bounds;
    PythagorasFPoint *tl = [PlaynCoreLayer_Util screenToLayerWithPlaynCoreLayer:((TripleplayUiElements *) nil_chk(elems)).layer withFloat:[((id<PythagorasFIRectangle>) nil_chk(bounds)) x] withFloat:[((id<PythagorasFIRectangle>) nil_chk(bounds)) y]];
    PythagorasFPoint *br = [PlaynCoreLayer_Util screenToLayerWithPlaynCoreLayer:((TripleplayUiElements *) nil_chk(elems)).layer withFloat:[((id<PythagorasFIRectangle>) nil_chk(bounds)) x] + [((id<PythagorasFIRectangle>) nil_chk(bounds)) width] withFloat:[((id<PythagorasFIRectangle>) nil_chk(bounds)) y] + [((id<PythagorasFIRectangle>) nil_chk(bounds)) height]];
    left = [JavaLangMath minWithFloat:[JavaLangMath maxWithFloat:left withFloat:((PythagorasFPoint *) nil_chk(tl)).x_] withFloat:((PythagorasFPoint *) nil_chk(br)).x_ - width];
    top = [JavaLangMath minWithFloat:[JavaLangMath maxWithFloat:top withFloat:((PythagorasFPoint *) nil_chk(tl)).y_] withFloat:((PythagorasFPoint *) nil_chk(br)).y_ - height];
  }
  [self setBoundsWithTripleplayUiElement:[((TripleplayUiElements *) nil_chk(elems)) childAtWithInt:0] withFloat:left withFloat:top withFloat:width withFloat:height];
  PythagorasFRectangle *bounds = [((TripleplayUiElement *) nil_chk([((TripleplayUiElements *) nil_chk(elems)) childAtWithInt:0])) boundsWithPythagorasFRectangle:[[PythagorasFRectangle alloc] init]];
  [((PythagorasFRectangle *) nil_chk(bounds)) setLocationWithPythagorasFIPoint:[PlaynCoreLayer_Util layerToScreenWithPlaynCoreLayer:((TripleplayUiElement *) nil_chk([((TripleplayUiElements *) nil_chk(elems)) childAtWithInt:0])).layer withFloat:0 withFloat:0]];
  [((id<PlaynCoreUIOverlay>) nil_chk([PlaynCorePlayN uiOverlay])) hideOverlayWithPythagorasFIRectangle:bounds];
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplayUiMenuHost_Activation

@synthesize pop = pop_;
@synthesize pointerRelay = pointerRelay_;
@synthesize triggerRemoved = triggerRemoved_;
@synthesize deactivated = deactivated_;

- (id)initWithTripleplayUiMenuHost_Pop:(TripleplayUiMenuHost_Pop *)pop {
  if ((self = [super init])) {
    self.pop = pop;
    id<PlaynCoreLayer> target = ((TripleplayUiMenuHost_Pop *) nil_chk(pop))._relayTarget;
    if (target != nil) pointerRelay_ = [TripleplayUiMenuHost relayEventsWithPlaynCoreLayer:target withTripleplayUiMenu:((TripleplayUiMenuHost_Pop *) nil_chk(pop)).menu];
  }
  return self;
}

- (void)clear {
  if (pointerRelay_ != nil) [pointerRelay_ disconnect];
  if (triggerRemoved_ != nil) [triggerRemoved_ disconnect];
  if (deactivated_ != nil) [deactivated_ disconnect];
  pointerRelay_ = nil;
  triggerRemoved_ = nil;
  deactivated_ = nil;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiMenuHost_Activation *typedCopy = (TripleplayUiMenuHost_Activation *) copy;
  typedCopy.pop = pop_;
  typedCopy.pointerRelay = pointerRelay_;
  typedCopy.triggerRemoved = triggerRemoved_;
  typedCopy.deactivated = deactivated_;
}

@end
@implementation TripleplayUiMenuHost_$1

@synthesize val$to = val$to_;

- (void)onPointerDragWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)e {
  [((TripleplayUiMenu *) nil_chk(val$to_)) onPointerDragWithPlaynCorePointer_Event:e];
}

- (void)onPointerEndWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)e {
  [((TripleplayUiMenu *) nil_chk(val$to_)) onPointerEndWithPlaynCorePointer_Event:e];
}

- (id)initWithTripleplayUiMenu:(TripleplayUiMenu *)capture$0 {
  if ((self = [super init])) {
    val$to_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiMenuHost_$1 *typedCopy = (TripleplayUiMenuHost_$1 *) copy;
  typedCopy.val$to = val$to_;
}

@end
@implementation TripleplayUiMenuHost_$2

@synthesize this$0 = this$0_;

- (void)onEmitWithId:(TripleplayUiMenuHost_Pop *)event {
  [this$0_ popupWithTripleplayUiMenuHost_Pop:event];
}

- (id)initWithTripleplayUiMenuHost:(TripleplayUiMenuHost *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiMenuHost_$2 *typedCopy = (TripleplayUiMenuHost_$2 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation TripleplayUiMenuHost_$3

@synthesize this$0 = this$0_;
@synthesize val$pop = val$pop_;
@synthesize val$menuRoot = val$menuRoot_;
@synthesize val$activation = val$activation_;

- (void)onEmitWithId:(TripleplayUiMenu *)event {
  if ([((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(val$pop_)).menu)) parent] == val$menuRoot_) {
    (void) [((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(val$pop_)).menu)) setConstraintWithTripleplayUiLayout_Constraint:nil];
    if (((TripleplayUiMenuHost_Pop *) nil_chk(val$pop_))._retain) [((TripleplayUiRoot *) nil_chk(val$menuRoot_)) removeWithTripleplayUiElement:((TripleplayUiMenuHost_Pop *) nil_chk(val$pop_)).menu];
    else [((TripleplayUiRoot *) nil_chk(val$menuRoot_)) destroyWithTripleplayUiElement:((TripleplayUiMenuHost_Pop *) nil_chk(val$pop_)).menu];
    [((id<PlaynCoreUIOverlay>) nil_chk([PlaynCorePlayN uiOverlay])) hideOverlayWithPythagorasFIRectangle:nil];
  }
  [((TripleplayUiMenuHost_Activation *) nil_chk(val$activation_)) clear];
  [((TripleplayUiInterface *) nil_chk(this$0_.iface)) destroyRootWithTripleplayUiRoot:val$menuRoot_];
  if (this$0_._active != nil && ((TripleplayUiMenuHost_Pop *) nil_chk(((TripleplayUiMenuHost_Activation *) nil_chk(this$0_._active)).pop)).menu == event) this$0_._active = nil;
}

- (id)initWithTripleplayUiMenuHost:(TripleplayUiMenuHost *)outer$
      withTripleplayUiMenuHost_Pop:(TripleplayUiMenuHost_Pop *)capture$0
              withTripleplayUiRoot:(TripleplayUiRoot *)capture$1
withTripleplayUiMenuHost_Activation:(TripleplayUiMenuHost_Activation *)capture$2 {
  if ((self = [super init])) {
    this$0_ = outer$;
    val$pop_ = capture$0;
    val$menuRoot_ = capture$1;
    val$activation_ = capture$2;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiMenuHost_$3 *typedCopy = (TripleplayUiMenuHost_$3 *) copy;
  typedCopy.this$0 = this$0_;
  typedCopy.val$pop = val$pop_;
  typedCopy.val$menuRoot = val$menuRoot_;
  typedCopy.val$activation = val$activation_;
}

@end
@implementation TripleplayUiMenuHost_$4

@synthesize val$pop = val$pop_;

- (void)onEmitWithId:(JavaLangBoolean *)event {
  if (![((JavaLangBoolean *) nil_chk(event)) booleanValue]) [((TripleplayUiMenu *) nil_chk(((TripleplayUiMenuHost_Pop *) nil_chk(val$pop_)).menu)) deactivate];
}

- (id)initWithTripleplayUiMenuHost_Pop:(TripleplayUiMenuHost_Pop *)capture$0 {
  if ((self = [super init])) {
    val$pop_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiMenuHost_$4 *typedCopy = (TripleplayUiMenuHost_$4 *) copy;
  typedCopy.val$pop = val$pop_;
}

@end
