//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Stylesheet.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "tripleplay/ui/Element.h"
#include "tripleplay/ui/Style.h"
#include "tripleplay/ui/Styles.h"
#include "tripleplay/ui/Stylesheet.h"

@implementation TripleplayUiStylesheet

@synthesize _styles = _styles_;

+ (TripleplayUiStylesheet_Builder *)builder {
  return [[TripleplayUiStylesheet_Builder alloc] init];
}

- (id)getWithTripleplayUiStyles_Binding:(TripleplayUiStyles_Binding *)key
                           withIOSClass:(IOSClass *)eclass
                withTripleplayUiElement:(TripleplayUiElement *)elem {
  TripleplayUiStyles *styles = [((id<JavaUtilMap>) nil_chk(_styles_)) getWithId:eclass];
  id value = (styles == nil) ? nil : [((TripleplayUiStyles *) nil_chk(styles)) getWithTripleplayUiStyles_Binding:key withTripleplayUiElement:elem];
  if (value != nil) return value;
  if (!((TripleplayUiStyle *) nil_chk(((TripleplayUiStyles_Binding *) nil_chk(key)).style)).inherited || eclass == [IOSClass classWithClass:[TripleplayUiElement class]]) return nil;
  IOSClass *parent = [((IOSClass *) nil_chk(eclass)) getSuperclass];
  if (parent == nil) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Your PlayN application must not be compiled with -XdisableClassMetadata. It breaks TriplePlay stylesheets."];
  }
  return [self getWithTripleplayUiStyles_Binding:key withIOSClass:parent withTripleplayUiElement:elem];
}

- (id)initWithJavaUtilMap:(id<JavaUtilMap>)styles {
  if ((self = [super init])) {
    _styles_ = styles;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStylesheet *typedCopy = (TripleplayUiStylesheet *) copy;
  typedCopy._styles = _styles_;
}

@end
@implementation TripleplayUiStylesheet_Builder

@synthesize _styles = _styles_;

- (TripleplayUiStylesheet_Builder *)addWithIOSClass:(IOSClass *)eclass
                             withTripleplayUiStyles:(TripleplayUiStyles *)styles {
  TripleplayUiStyles *ostyles = [((id<JavaUtilMap>) nil_chk(_styles_)) getWithId:eclass];
  (void) [((id<JavaUtilMap>) nil_chk(_styles_)) putWithId:eclass withId:ostyles == nil ? styles : [((TripleplayUiStyles *) nil_chk(ostyles)) mergeWithTripleplayUiStyles:styles]];
  return self;
}

- (TripleplayUiStylesheet_Builder *)addWithIOSClass:(IOSClass *)eclass
                 withTripleplayUiStyle_BindingArray:(IOSObjectArray *)styles {
  return [self addWithIOSClass:eclass withTripleplayUiStyles:[TripleplayUiStyles makeWithTripleplayUiStyle_BindingArray:styles]];
}

- (TripleplayUiStylesheet_Builder *)addWithIOSClass:(IOSClass *)eclass
                     withTripleplayUiStyle_ModeEnum:(TripleplayUiStyle_ModeEnum *)mode
                 withTripleplayUiStyle_BindingArray:(IOSObjectArray *)styles {
  return [self addWithIOSClass:eclass withTripleplayUiStyles:[((TripleplayUiStyles *) nil_chk([TripleplayUiStyles none])) addWithTripleplayUiStyle_ModeEnum:mode withTripleplayUiStyle_BindingArray:styles]];
}

- (TripleplayUiStylesheet *)create {
  TripleplayUiStylesheet *sheet = [[TripleplayUiStylesheet alloc] initWithJavaUtilMap:_styles_];
  _styles_ = nil;
  return sheet;
}

- (id)init {
  if ((self = [super init])) {
    _styles_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStylesheet_Builder *typedCopy = (TripleplayUiStylesheet_Builder *) copy;
  typedCopy._styles = _styles_;
}

@end
