//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Scroller.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "playn/core/Asserts.h"
#include "playn/core/Color.h"
#include "playn/core/Connection.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/ImmediateLayer.h"
#include "playn/core/Layer.h"
#include "playn/core/Mouse.h"
#include "playn/core/PlayN.h"
#include "playn/core/Pointer.h"
#include "playn/core/Surface.h"
#include "pythagoras/f/Dimension.h"
#include "pythagoras/f/IDimension.h"
#include "pythagoras/f/IPoint.h"
#include "pythagoras/f/Point.h"
#include "pythagoras/f/Rectangle.h"
#include "react/Signal.h"
#include "tripleplay/ui/Element.h"
#include "tripleplay/ui/Elements.h"
#include "tripleplay/ui/Group.h"
#include "tripleplay/ui/Interface.h"
#include "tripleplay/ui/Layout.h"
#include "tripleplay/ui/Root.h"
#include "tripleplay/ui/Scroller.h"
#include "tripleplay/ui/Style.h"
#include "tripleplay/ui/layout/AxisLayout.h"
#include "tripleplay/ui/util/XYFlicker.h"
#include "tripleplay/util/Colors.h"
#include "tripleplay/util/Layers.h"

@implementation TripleplayUiScroller

static TripleplayUiStyle * TripleplayUiScroller_BAR_SIZE_;
static TripleplayUiStyle * TripleplayUiScroller_BAR_COLOR_;
static TripleplayUiStyle * TripleplayUiScroller_BAR_RENDERER_;

@synthesize content = content_;
@synthesize hbar = hbar_;
@synthesize vbar = vbar_;
@synthesize _scroller = _scroller_;
@synthesize _flicker = _flicker_;
@synthesize _clippable = _clippable_;
@synthesize _contentSize = _contentSize_;
@synthesize _updater = _updater_;
@synthesize _barLayer = _barLayer_;
@synthesize _queuedScroll = _queuedScroll_;
@synthesize _barAlpha = _barAlpha_;
@synthesize _barRenderer = _barRenderer_;
@synthesize _lners = _lners_;

+ (TripleplayUiStyle *)BAR_SIZE {
  return TripleplayUiScroller_BAR_SIZE_;
}

+ (TripleplayUiStyle *)BAR_COLOR {
  return TripleplayUiScroller_BAR_COLOR_;
}

+ (TripleplayUiStyle *)BAR_RENDERER {
  return TripleplayUiScroller_BAR_RENDERER_;
}

+ (float)BAR_FADE_SPEED {
  return TripleplayUiScroller_BAR_FADE_SPEED;
}

+ (float)BAR_TOP_ALPHA {
  return TripleplayUiScroller_BAR_TOP_ALPHA;
}

+ (TripleplayUiScroller *)findScrollParentWithTripleplayUiElement:(TripleplayUiElement *)elem {
  for (; elem != nil && !([elem isKindOfClass:[TripleplayUiScroller class]]); elem = [((TripleplayUiElement *) nil_chk(elem)) parent]) {
  }
  return (TripleplayUiScroller *) elem;
}

+ (BOOL)makeVisibleWithTripleplayUiElement:(TripleplayUiElement *)elem {
  TripleplayUiScroller *scroller = [TripleplayUiScroller findScrollParentWithTripleplayUiElement:elem];
  if (scroller == nil) return NO;
  if (![((TripleplayUiScroller *) nil_chk(scroller)) isSetWithTripleplayUiElement_FlagEnum:[TripleplayUiElement_FlagEnum VALID]]) {
    [PlaynCorePlayN invokeLaterWithJavaLangRunnable:[[TripleplayUiScroller_$2 alloc] initWithTripleplayUiElement:elem]];
    return YES;
  }
  PythagorasFPoint *offset = [TripleplayUtilLayers transformWithPythagorasFIPoint:[[PythagorasFPoint alloc] initWithFloat:0 withFloat:0] withPlaynCoreLayer:((TripleplayUiElement *) nil_chk(elem)).layer withPlaynCoreLayer:((TripleplayUiElement *) nil_chk(((TripleplayUiScroller *) nil_chk(scroller)).content)).layer];
  [((TripleplayUiScroller *) nil_chk(scroller)) scrollWithFloat:((PythagorasFPoint *) nil_chk(offset)).x_ withFloat:((PythagorasFPoint *) nil_chk(offset)).y_];
  return YES;
}

- (id)initWithTripleplayUiElement:(TripleplayUiElement *)content {
  if ((self = [super initWithTripleplayUiLayout:[((TripleplayUiLayoutAxisLayout *) nil_chk([((TripleplayUiLayoutAxisLayout *) nil_chk([((TripleplayUiLayoutAxisLayout_Horizontal *) nil_chk([TripleplayUiLayoutAxisLayout horizontal])) stretchByDefault])) offStretch])) gapWithInt:0]])) {
    hbar_ = [self createBar];
    vbar_ = [self createBar];
    _scroller_ = [[TripleplayUiScroller_$6 alloc] initWithTripleplayUiScroller_ScrollLayout:[[TripleplayUiScroller_ScrollLayout alloc] initWithTripleplayUiScroller:self]];
    _contentSize_ = [[PythagorasFDimension alloc] init];
    (void) [self addWithTripleplayUiElementArray:[IOSObjectArray arrayWithObjects:(id[]){ [((TripleplayUiGroup *) nil_chk(_scroller_)) addWithTripleplayUiElementArray:[IOSObjectArray arrayWithObjects:(id[]){ self.content = content } count:1 type:[IOSClass classWithClass:[TripleplayUiElement class]]]] } count:1 type:[IOSClass classWithClass:[TripleplayUiElement class]]]];
    if ([content conformsToProtocol: @protocol(TripleplayUiScroller_Clippable)]) {
      _clippable_ = (id<TripleplayUiScroller_Clippable>) content;
    }
    else {
      _clippable_ = [[TripleplayUiScroller_$3 alloc] initWithTripleplayUiScroller:self];
    }
    [self setWithTripleplayUiElement_FlagEnum:[TripleplayUiElement_FlagEnum HIT_ABSORB] withBOOL:YES];
    (void) [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addListenerWithPlaynCoreMouse_LayerListener:[[TripleplayUiScroller_$4 alloc] initWithTripleplayUiScroller:self]];
    (void) [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addListenerWithPlaynCorePointer_Listener:_flicker_ = [[TripleplayUiUtilXYFlicker alloc] init]];
  }
  return self;
}

- (TripleplayUiScroller *)setBehaviorWithTripleplayUiScroller_BehaviorEnum:(TripleplayUiScroller_BehaviorEnum *)beh {
  ((TripleplayUiScroller_Bar *) nil_chk(hbar_))._on = [((TripleplayUiScroller_BehaviorEnum *) nil_chk(beh)) hasHorizontal];
  ((TripleplayUiScroller_Bar *) nil_chk(vbar_))._on = [((TripleplayUiScroller_BehaviorEnum *) nil_chk(beh)) hasVertical];
  [self invalidate];
  return self;
}

- (void)addListenerWithTripleplayUiScroller_Listener:(id<TripleplayUiScroller_Listener>)lner {
  if (_lners_ == nil) _lners_ = [[JavaUtilArrayList alloc] init];
  [((id<JavaUtilList>) nil_chk(_lners_)) addWithId:lner];
}

- (void)removeListenerWithTripleplayUiScroller_Listener:(id<TripleplayUiScroller_Listener>)lner {
  if (_lners_ != nil) [_lners_ removeWithId:lner];
}

- (float)xpos {
  return ((TripleplayUiScroller_Bar *) nil_chk(hbar_))._cpos;
}

- (float)ypos {
  return ((TripleplayUiScroller_Bar *) nil_chk(vbar_))._cpos;
}

- (void)scrollXWithFloat:(float)x {
  [self scrollWithFloat:x withFloat:[self ypos]];
}

- (void)scrollYWithFloat:(float)y {
  [self scrollWithFloat:[self xpos] withFloat:y];
}

- (void)scrollWithFloat:(float)x
              withFloat:(float)y {
  x = [JavaLangMath maxWithFloat:0 withFloat:[JavaLangMath minWithFloat:x withFloat:((TripleplayUiScroller_Bar *) nil_chk(hbar_))._max]];
  y = [JavaLangMath maxWithFloat:0 withFloat:[JavaLangMath minWithFloat:y withFloat:((TripleplayUiScroller_Bar *) nil_chk(vbar_))._max]];
  [((TripleplayUiUtilXYFlicker *) nil_chk(_flicker_)) positionChangedWithFloat:x withFloat:y];
}

- (void)queueScrollWithFloat:(float)x
                   withFloat:(float)y {
  _queuedScroll_ = [[PythagorasFPoint alloc] initWithFloat:x withFloat:y];
}

- (id<PythagorasFIDimension>)contentSize {
  return _contentSize_;
}

- (id<PythagorasFIDimension>)viewSize {
  return [((TripleplayUiGroup *) nil_chk(_scroller_)) size];
}

- (ReactSignal *)contentClicked {
  return ((TripleplayUiUtilXYFlicker *) nil_chk(_flicker_)).clicked;
}

- (TripleplayUiScroller *)addWithTripleplayUiElementArray:(IOSObjectArray *)children {
  [PlaynCoreAsserts checkStateWithBOOL:[self childCount] + (int) [((IOSObjectArray *) nil_chk(children)) count] == 1];
  return [super addWithTripleplayUiElementArray:children];
}

- (TripleplayUiScroller *)addWithInt:(int)index
             withTripleplayUiElement:(TripleplayUiElement *)child {
  [PlaynCoreAsserts checkStateWithBOOL:[self childCount] == 0];
  return [super addWithInt:index withTripleplayUiElement:child];
}

- (void)updateWithInt:(int)delta {
  [((TripleplayUiUtilXYFlicker *) nil_chk(_flicker_)) updateWithInt:delta];
  [self updateWithBOOL:NO];
  if (_barAlpha_ > 0) [self setBarAlphaWithFloat:_barAlpha_ - TripleplayUiScroller_BAR_FADE_SPEED * delta];
}

- (void)updateWithBOOL:(BOOL)force {
  id<PythagorasFIPoint> pos = [((TripleplayUiUtilXYFlicker *) nil_chk(_flicker_)) position];
  BOOL dx = [((TripleplayUiScroller_Bar *) nil_chk(hbar_)) setWithFloat:[((id<PythagorasFIPoint>) nil_chk(pos)) x]], dy = [((TripleplayUiScroller_Bar *) nil_chk(vbar_)) setWithFloat:[((id<PythagorasFIPoint>) nil_chk(pos)) y]];
  if (dx || dy || force) {
    [((id<TripleplayUiScroller_Clippable>) nil_chk(_clippable_)) setPositionWithFloat:-[((id<PythagorasFIPoint>) nil_chk(pos)) x] withFloat:-[((id<PythagorasFIPoint>) nil_chk(pos)) y]];
    if (!force) [self updateVisibility];
    [self firePositionChange];
    [self setBarAlphaWithFloat:TripleplayUiScroller_BAR_TOP_ALPHA];
  }
}

- (TripleplayUiScroller_Bar *)createBar {
  return [[TripleplayUiScroller_Bar alloc] init];
}

- (TripleplayUiElement_LayoutData *)createLayoutDataWithFloat:(float)hintX
                                                    withFloat:(float)hintY {
  return [[TripleplayUiScroller_BarsLayoutData alloc] initWithTripleplayUiScroller:self];
}

- (IOSClass *)getStyleClass {
  return [IOSClass classWithClass:[TripleplayUiScroller class]];
}

- (void)wasAdded {
  [super wasAdded];
  _updater_ = [((TripleplayUiInterface *) nil_chk([((TripleplayUiRoot *) nil_chk([self root])) iface])) addTaskWithTripleplayUiInterface_Task:[[TripleplayUiScroller_$5 alloc] initWithTripleplayUiScroller:self]];
}

- (void)wasRemoved {
  [super wasRemoved];
  [((id<TripleplayUiInterface_TaskHandle>) nil_chk(_updater_)) remove];
}

- (void)updateVisibility {
  if (!([content_ isKindOfClass:[TripleplayUiElements class]])) {
    return;
  }
  float x = ((TripleplayUiScroller_Bar *) nil_chk(hbar_))._cpos, y = ((TripleplayUiScroller_Bar *) nil_chk(vbar_))._cpos, wid = ((TripleplayUiScroller_Bar *) nil_chk(hbar_))._size, hei = ((TripleplayUiScroller_Bar *) nil_chk(vbar_))._size;
  {
    id<JavaUtilIterator> iter__ = [(TripleplayUiElements *) content_ iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
      TripleplayUiElement *child = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
      id<PythagorasFIDimension> size = [((TripleplayUiElement *) nil_chk(child)) size];
      if ([((TripleplayUiElement *) nil_chk(child)) isVisible]) (void) [((id<PlaynCoreGroupLayer>) nil_chk(((TripleplayUiElement *) nil_chk(child)).layer)) setVisibleWithBOOL:[((TripleplayUiElement *) nil_chk(child)) x] < x + wid && [((TripleplayUiElement *) nil_chk(child)) x] + [((id<PythagorasFIDimension>) nil_chk(size)) width] > x && [((TripleplayUiElement *) nil_chk(child)) y] < y + hei && [((TripleplayUiElement *) nil_chk(child)) y] + [((id<PythagorasFIDimension>) nil_chk(size)) height] > y];
    }
  }
}

- (void)fireViewChanged {
  if (_lners_ == nil) return;
  id<PythagorasFIDimension> csize = [self contentSize], ssize = [self viewSize];
  {
    id<JavaUtilIterator> iter__ = [((id<JavaUtilList>) nil_chk(_lners_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
      id<TripleplayUiScroller_Listener> lner = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
      [((id<TripleplayUiScroller_Listener>) nil_chk(lner)) viewChangedWithPythagorasFIDimension:csize withPythagorasFIDimension:ssize];
    }
  }
}

- (void)firePositionChange {
  if (_lners_ == nil) return;
  {
    id<JavaUtilIterator> iter__ = [((id<JavaUtilList>) nil_chk(_lners_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
      id<TripleplayUiScroller_Listener> lner = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
      [((id<TripleplayUiScroller_Listener>) nil_chk(lner)) positionChangedWithFloat:[self xpos] withFloat:[self ypos]];
    }
  }
}

- (void)setBarAlphaWithFloat:(float)alpha {
  _barAlpha_ = [JavaLangMath minWithFloat:TripleplayUiScroller_BAR_TOP_ALPHA withFloat:[JavaLangMath maxWithFloat:0 withFloat:alpha]];
  if (_barLayer_ != nil) {
    (void) [_barLayer_ setAlphaWithFloat:[JavaLangMath minWithFloat:_barAlpha_ withFloat:1]];
    (void) [_barLayer_ setVisibleWithBOOL:_barAlpha_ > 0];
  }
}

+ (void)initialize {
  if (self == [TripleplayUiScroller class]) {
    TripleplayUiScroller_BAR_SIZE_ = [TripleplayUiStyle newStyleWithBOOL:YES withId:[JavaLangFloat valueOfWithFloat:5.0f]];
    TripleplayUiScroller_BAR_COLOR_ = [TripleplayUiStyle newStyleWithBOOL:YES withId:[JavaLangInteger valueOfWithInt:[PlaynCoreColor withAlphaWithInt:[TripleplayUtilColors BLACK] withInt:128]]];
    TripleplayUiScroller_BAR_RENDERER_ = [TripleplayUiStyle newStyleWithBOOL:NO withId:[[TripleplayUiScroller_$1 alloc] init]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller *typedCopy = (TripleplayUiScroller *) copy;
  typedCopy.content = content_;
  typedCopy.hbar = hbar_;
  typedCopy.vbar = vbar_;
  typedCopy._scroller = _scroller_;
  typedCopy._flicker = _flicker_;
  typedCopy._clippable = _clippable_;
  typedCopy._contentSize = _contentSize_;
  typedCopy._updater = _updater_;
  typedCopy._barLayer = _barLayer_;
  typedCopy._queuedScroll = _queuedScroll_;
  typedCopy._barAlpha = _barAlpha_;
  typedCopy._barRenderer = _barRenderer_;
  typedCopy._lners = _lners_;
}

@end

static TripleplayUiScroller_BehaviorEnum *TripleplayUiScroller_BehaviorEnum_HORIZONTAL;
static TripleplayUiScroller_BehaviorEnum *TripleplayUiScroller_BehaviorEnum_VERTICAL;
static TripleplayUiScroller_BehaviorEnum *TripleplayUiScroller_BehaviorEnum_BOTH;
IOSObjectArray *TripleplayUiScroller_BehaviorEnum_values;

@implementation TripleplayUiScroller_BehaviorEnum

+ (TripleplayUiScroller_BehaviorEnum *)HORIZONTAL {
  return TripleplayUiScroller_BehaviorEnum_HORIZONTAL;
}
+ (TripleplayUiScroller_BehaviorEnum *)VERTICAL {
  return TripleplayUiScroller_BehaviorEnum_VERTICAL;
}
+ (TripleplayUiScroller_BehaviorEnum *)BOTH {
  return TripleplayUiScroller_BehaviorEnum_BOTH;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (BOOL)hasHorizontal {
  return self == TripleplayUiScroller_BehaviorEnum_HORIZONTAL || self == TripleplayUiScroller_BehaviorEnum_BOTH;
}

- (BOOL)hasVertical {
  return self == TripleplayUiScroller_BehaviorEnum_VERTICAL || self == TripleplayUiScroller_BehaviorEnum_BOTH;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [TripleplayUiScroller_BehaviorEnum class]) {
    TripleplayUiScroller_BehaviorEnum_HORIZONTAL = [[TripleplayUiScroller_BehaviorEnum alloc] initWithNSString:@"HORIZONTAL" withInt:0];
    TripleplayUiScroller_BehaviorEnum_VERTICAL = [[TripleplayUiScroller_BehaviorEnum alloc] initWithNSString:@"VERTICAL" withInt:1];
    TripleplayUiScroller_BehaviorEnum_BOTH = [[TripleplayUiScroller_BehaviorEnum alloc] initWithNSString:@"BOTH" withInt:2];
    TripleplayUiScroller_BehaviorEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ TripleplayUiScroller_BehaviorEnum_HORIZONTAL, TripleplayUiScroller_BehaviorEnum_VERTICAL, TripleplayUiScroller_BehaviorEnum_BOTH, nil } count:3 type:[IOSClass classWithClass:[TripleplayUiScroller_BehaviorEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:TripleplayUiScroller_BehaviorEnum_values];
}

+ (TripleplayUiScroller_BehaviorEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [TripleplayUiScroller_BehaviorEnum_values count]; i++) {
    TripleplayUiScroller_BehaviorEnum *e = [TripleplayUiScroller_BehaviorEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
@implementation TripleplayUiScroller_Bar

@synthesize _on = _on_;
@synthesize _size = _size_;
@synthesize _csize = _csize_;
@synthesize _pos = _pos_;
@synthesize _cpos = _cpos_;
@synthesize _extent = _extent_;
@synthesize _max = _max_;

- (float)max {
  return _max_;
}

- (BOOL)active {
  return _max_ != 0;
}

- (float)setRangeWithFloat:(float)viewSize
                 withFloat:(float)contentSize {
  _size_ = viewSize;
  _csize_ = contentSize;
  if (!_on_ || _size_ >= _csize_) {
    _max_ = _extent_ = _pos_ = _cpos_ = 0;
    return 0;
  }
  else {
    _max_ = _csize_ - _size_;
    _extent_ = _size_ * _size_ / _csize_;
    _pos_ = [JavaLangMath minWithFloat:_pos_ withFloat:_size_ - _extent_];
    _cpos_ = _pos_ / (_size_ - _extent_) * _max_;
    return _cpos_;
  }
}

- (BOOL)setWithFloat:(float)cpos {
  if (cpos == _cpos_) return NO;
  _cpos_ = cpos;
  _pos_ = _max_ == 0 ? 0 : cpos / _max_ * (_size_ - _extent_);
  return YES;
}

- (float)getContentSize {
  return _on_ ? _csize_ : _size_;
}

- (float)extendHintWithFloat:(float)hint {
  return _on_ ? 100000 : hint;
}

- (id)init {
  if ((self = [super init])) {
    _on_ = YES;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller_Bar *typedCopy = (TripleplayUiScroller_Bar *) copy;
  typedCopy._on = _on_;
  typedCopy._size = _size_;
  typedCopy._csize = _csize_;
  typedCopy._pos = _pos_;
  typedCopy._cpos = _cpos_;
  typedCopy._extent = _extent_;
  typedCopy._max = _max_;
}

@end
@implementation TripleplayUiScroller_BarsLayoutData

@synthesize this$3 = this$3_;
@synthesize barColor = barColor_;
@synthesize barSize = barSize_;
@synthesize barRenderer = barRenderer_;

- (void)layoutWithFloat:(float)left
              withFloat:(float)top
              withFloat:(float)width
              withFloat:(float)height {
  [super layoutWithFloat:left withFloat:top withFloat:width withFloat:height];
  [this$3_ updateVisibility];
  id<PlaynCoreImmediateLayer> bars = nil;
  if (barRenderer_ != nil && ([((TripleplayUiScroller_Bar *) nil_chk(this$3_.hbar)) active] || [((TripleplayUiScroller_Bar *) nil_chk(this$3_.vbar)) active])) {
    bars = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createImmediateLayerWithPlaynCoreImmediateLayer_Renderer:[[TripleplayUiScroller_BarsLayoutData_$1 alloc] initWithTripleplayUiScroller_BarsLayoutData:self withFloat:height withFloat:width]];
  }
  if (this$3_._barLayer != nil) [this$3_._barLayer destroy];
  if ((this$3_._barLayer = bars) != nil) [((id<PlaynCoreGroupLayer>) nil_chk(((TripleplayUiGroup *) nil_chk(this$3_._scroller)).layer)) addWithPlaynCoreLayer:[((id<PlaynCoreLayer>) nil_chk([((id<PlaynCoreLayer>) nil_chk(this$3_._barLayer)) setDepthWithFloat:1])) setAlphaWithFloat:this$3_._barAlpha]];
}

- (id)initWithTripleplayUiScroller:(TripleplayUiScroller *)outer$ {
  if ((self = [super initWithTripleplayUiElements:outer$])) {
    this$3_ = outer$;
    barColor_ = [((JavaLangInteger *) nil_chk([outer$ resolveStyleWithTripleplayUiStyle:[TripleplayUiScroller BAR_COLOR]])) intValue];
    barSize_ = [((JavaLangFloat *) nil_chk([outer$ resolveStyleWithTripleplayUiStyle:[TripleplayUiScroller BAR_SIZE]])) floatValue];
    barRenderer_ = [outer$ resolveStyleWithTripleplayUiStyle:[TripleplayUiScroller BAR_RENDERER]];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller_BarsLayoutData *typedCopy = (TripleplayUiScroller_BarsLayoutData *) copy;
  typedCopy.this$3 = this$3_;
  typedCopy.barColor = barColor_;
  typedCopy.barSize = barSize_;
  typedCopy.barRenderer = barRenderer_;
}

@end
@implementation TripleplayUiScroller_BarsLayoutData_$1

@synthesize this$0 = this$0_;
@synthesize area = area_;
@synthesize val$height = val$height_;
@synthesize val$width = val$width_;

- (void)renderWithPlaynCoreSurface:(id<PlaynCoreSurface>)surface {
  (void) [((id<PlaynCoreSurface>) nil_chk(surface)) save];
  (void) [((id<PlaynCoreSurface>) nil_chk(surface)) setFillColorWithInt:this$0_.barColor];
  if ([((TripleplayUiScroller_Bar *) nil_chk(this$0_.this$3.hbar)) active]) {
    [((PythagorasFRectangle *) nil_chk(area_)) setBoundsWithFloat:((TripleplayUiScroller_Bar *) nil_chk(this$0_.this$3.hbar))._pos withFloat:val$height_ - this$0_.barSize withFloat:((TripleplayUiScroller_Bar *) nil_chk(this$0_.this$3.hbar))._extent withFloat:this$0_.barSize];
    [((id<TripleplayUiScroller_BarRenderer>) nil_chk(this$0_.barRenderer)) drawBarWithPlaynCoreSurface:surface withPythagorasFRectangle:area_];
  }
  if ([((TripleplayUiScroller_Bar *) nil_chk(this$0_.this$3.vbar)) active]) {
    [((PythagorasFRectangle *) nil_chk(area_)) setBoundsWithFloat:val$width_ - this$0_.barSize withFloat:((TripleplayUiScroller_Bar *) nil_chk(this$0_.this$3.vbar))._pos withFloat:this$0_.barSize withFloat:((TripleplayUiScroller_Bar *) nil_chk(this$0_.this$3.vbar))._extent];
    [((id<TripleplayUiScroller_BarRenderer>) nil_chk(this$0_.barRenderer)) drawBarWithPlaynCoreSurface:surface withPythagorasFRectangle:area_];
  }
  (void) [((id<PlaynCoreSurface>) nil_chk(surface)) restore];
}

- (id)initWithTripleplayUiScroller_BarsLayoutData:(TripleplayUiScroller_BarsLayoutData *)outer$
                                        withFloat:(float)capture$0
                                        withFloat:(float)capture$1 {
  if ((self = [super init])) {
    this$0_ = outer$;
    val$height_ = capture$0;
    val$width_ = capture$1;
    area_ = [[PythagorasFRectangle alloc] init];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller_BarsLayoutData_$1 *typedCopy = (TripleplayUiScroller_BarsLayoutData_$1 *) copy;
  typedCopy.this$0 = this$0_;
  typedCopy.area = area_;
  typedCopy.val$height = val$height_;
  typedCopy.val$width = val$width_;
}

@end
@implementation TripleplayUiScroller_ScrollLayout

@synthesize this$0 = this$0_;

- (PythagorasFDimension *)computeSizeWithTripleplayUiElements:(TripleplayUiElements *)elems
                                                    withFloat:(float)hintX
                                                    withFloat:(float)hintY {
  [PlaynCoreAsserts checkArgumentWithBOOL:[((TripleplayUiElements *) nil_chk(elems)) childCount] == 1 && [((TripleplayUiElements *) nil_chk(elems)) childAtWithInt:0] == this$0_.content];
  [((PythagorasFDimension *) nil_chk(this$0_._contentSize)) setSizeWithPythagorasFIDimension:[self preferredSizeWithTripleplayUiElement:[((TripleplayUiElements *) nil_chk(elems)) childAtWithInt:0] withFloat:[((TripleplayUiScroller_Bar *) nil_chk(this$0_.hbar)) extendHintWithFloat:hintX] withFloat:[((TripleplayUiScroller_Bar *) nil_chk(this$0_.vbar)) extendHintWithFloat:hintY]]];
  return [[PythagorasFDimension alloc] initWithPythagorasFIDimension:this$0_._contentSize];
}

- (void)layoutWithTripleplayUiElements:(TripleplayUiElements *)elems
                             withFloat:(float)left
                             withFloat:(float)top
                             withFloat:(float)width
                             withFloat:(float)height {
  [PlaynCoreAsserts checkArgumentWithBOOL:[((TripleplayUiElements *) nil_chk(elems)) childCount] == 1 && [((TripleplayUiElements *) nil_chk(elems)) childAtWithInt:0] == this$0_.content];
  left = [((TripleplayUiScroller_Bar *) nil_chk(this$0_.hbar)) setRangeWithFloat:width withFloat:((PythagorasFDimension *) nil_chk(this$0_._contentSize)).width_];
  top = [((TripleplayUiScroller_Bar *) nil_chk(this$0_.vbar)) setRangeWithFloat:height withFloat:((PythagorasFDimension *) nil_chk(this$0_._contentSize)).height_];
  [self setBoundsWithTripleplayUiElement:this$0_.content withFloat:0 withFloat:0 withFloat:[((TripleplayUiScroller_Bar *) nil_chk(this$0_.hbar)) getContentSize] withFloat:[((TripleplayUiScroller_Bar *) nil_chk(this$0_.vbar)) getContentSize]];
  [((id<TripleplayUiScroller_Clippable>) nil_chk(this$0_._clippable)) setViewAreaWithFloat:width withFloat:height];
  [((id<PlaynCoreGroupLayer_Clipped>) ((TripleplayUiGroup *) nil_chk(this$0_._scroller)).layer) setSizeWithFloat:width withFloat:height];
  [((TripleplayUiUtilXYFlicker *) nil_chk(this$0_._flicker)) resetWithFloat:[((TripleplayUiScroller_Bar *) nil_chk(this$0_.hbar)) max] withFloat:[((TripleplayUiScroller_Bar *) nil_chk(this$0_.vbar)) max]];
  if (this$0_._queuedScroll != nil) {
    [this$0_ scrollWithFloat:this$0_._queuedScroll.x_ withFloat:this$0_._queuedScroll.y_];
    this$0_._queuedScroll = nil;
  }
  else {
    [this$0_ scrollWithFloat:left withFloat:top];
  }
  [this$0_ updateWithBOOL:YES];
  [this$0_ fireViewChanged];
}

- (id)initWithTripleplayUiScroller:(TripleplayUiScroller *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller_ScrollLayout *typedCopy = (TripleplayUiScroller_ScrollLayout *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation TripleplayUiScroller_$1

- (void)drawBarWithPlaynCoreSurface:(id<PlaynCoreSurface>)surface
           withPythagorasFRectangle:(PythagorasFRectangle *)area {
  (void) [((id<PlaynCoreSurface>) nil_chk(surface)) fillRectWithFloat:((PythagorasFRectangle *) nil_chk(area)).x_ withFloat:((PythagorasFRectangle *) nil_chk(area)).y_ withFloat:((PythagorasFRectangle *) nil_chk(area)).width_ withFloat:((PythagorasFRectangle *) nil_chk(area)).height_];
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplayUiScroller_$2

@synthesize val$elem = val$elem_;

- (void)run {
  [TripleplayUiScroller makeVisibleWithTripleplayUiElement:val$elem_];
}

- (id)initWithTripleplayUiElement:(TripleplayUiElement *)capture$0 {
  if ((self = [super init])) {
    val$elem_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller_$2 *typedCopy = (TripleplayUiScroller_$2 *) copy;
  typedCopy.val$elem = val$elem_;
}

@end
@implementation TripleplayUiScroller_$3

@synthesize this$0 = this$0_;

- (void)setViewAreaWithFloat:(float)width
                   withFloat:(float)height {
}

- (void)setPositionWithFloat:(float)x
                   withFloat:(float)y {
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(((TripleplayUiElement *) nil_chk(this$0_.content)).layer)) setTranslationWithFloat:x withFloat:y];
}

- (id)initWithTripleplayUiScroller:(TripleplayUiScroller *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller_$3 *typedCopy = (TripleplayUiScroller_$3 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation TripleplayUiScroller_$4

@synthesize this$0 = this$0_;

- (void)onMouseWheelScrollWithPlaynCoreMouse_WheelEvent:(id<PlaynCoreMouse_WheelEvent>)event {
  float delta = [((id<PlaynCoreMouse_WheelEvent>) nil_chk(event)) velocity] * .25f;
  if ([((TripleplayUiScroller_Bar *) nil_chk(this$0_.vbar)) active]) [this$0_ scrollYWithFloat:[this$0_ ypos] + (int) (delta * [((id<PythagorasFIDimension>) nil_chk([this$0_ viewSize])) height])];
  else [this$0_ scrollXWithFloat:[this$0_ xpos] + (int) (delta * [((id<PythagorasFIDimension>) nil_chk([this$0_ viewSize])) width])];
}

- (id)initWithTripleplayUiScroller:(TripleplayUiScroller *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller_$4 *typedCopy = (TripleplayUiScroller_$4 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation TripleplayUiScroller_$5

@synthesize this$0 = this$0_;

- (void)updateWithInt:(int)delta {
  [this$0_ updateWithInt:delta];
}

- (id)initWithTripleplayUiScroller:(TripleplayUiScroller *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiScroller_$5 *typedCopy = (TripleplayUiScroller_$5 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation TripleplayUiScroller_$6

- (id<PlaynCoreGroupLayer>)createLayer {
  return [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createGroupLayerWithFloat:1 withFloat:1];
}

- (id)initWithTripleplayUiScroller_ScrollLayout:(TripleplayUiScroller_ScrollLayout *)arg$0 {
  return [super initWithTripleplayUiLayout:arg$0];
}

@end
