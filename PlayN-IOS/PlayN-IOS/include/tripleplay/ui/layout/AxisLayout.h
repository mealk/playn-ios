//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/layout/AxisLayout.java
//
//  Created by Thomas on 7/10/13.
//

@class PythagorasFDimension;
@class TripleplayUiElement;
@class TripleplayUiElements;
@class TripleplayUiLayoutAxisLayout_Horizontal;
@class TripleplayUiLayoutAxisLayout_Metrics;
@class TripleplayUiLayoutAxisLayout_Vertical;

#import "JreEmulation.h"
#import "java/lang/Enum.h"
#import "tripleplay/ui/Layout.h"

typedef enum {
  TripleplayUiLayoutAxisLayout_Policy_DEFAULT = 0,
  TripleplayUiLayoutAxisLayout_Policy_STRETCH = 1,
  TripleplayUiLayoutAxisLayout_Policy_EQUALIZE = 2,
  TripleplayUiLayoutAxisLayout_Policy_CONSTRAIN = 3,
} TripleplayUiLayoutAxisLayout_Policy;

@interface TripleplayUiLayoutAxisLayout_PolicyEnum : JavaLangEnum < NSCopying > {
}
+ (TripleplayUiLayoutAxisLayout_PolicyEnum *)DEFAULT;
+ (TripleplayUiLayoutAxisLayout_PolicyEnum *)STRETCH;
+ (TripleplayUiLayoutAxisLayout_PolicyEnum *)EQUALIZE;
+ (TripleplayUiLayoutAxisLayout_PolicyEnum *)CONSTRAIN;
+ (IOSObjectArray *)values;
+ (TripleplayUiLayoutAxisLayout_PolicyEnum *)valueOfWithNSString:(NSString *)name;
- (id)copyWithZone:(NSZone *)zone;
- (float)computeSizeWithFloat:(float)size
                    withFloat:(float)maxSize
                    withFloat:(float)extent;
- (id)initWithNSString:(NSString *)name withInt:(int)ordinal;
@end

@interface TripleplayUiLayoutAxisLayout_PolicyEnum_$1 : TripleplayUiLayoutAxisLayout_PolicyEnum {
}

- (float)computeSizeWithFloat:(float)size
                    withFloat:(float)maxSize
                    withFloat:(float)extent;
- (id)initWithNSString:(NSString *)name withInt:(int)ordinal;
@end

@interface TripleplayUiLayoutAxisLayout_PolicyEnum_$2 : TripleplayUiLayoutAxisLayout_PolicyEnum {
}

- (float)computeSizeWithFloat:(float)size
                    withFloat:(float)maxSize
                    withFloat:(float)extent;
- (id)initWithNSString:(NSString *)name withInt:(int)ordinal;
@end

@interface TripleplayUiLayoutAxisLayout_PolicyEnum_$3 : TripleplayUiLayoutAxisLayout_PolicyEnum {
}

- (float)computeSizeWithFloat:(float)size
                    withFloat:(float)maxSize
                    withFloat:(float)extent;
- (id)initWithNSString:(NSString *)name withInt:(int)ordinal;
@end

@interface TripleplayUiLayoutAxisLayout_PolicyEnum_$4 : TripleplayUiLayoutAxisLayout_PolicyEnum {
}

- (float)computeSizeWithFloat:(float)size
                    withFloat:(float)maxSize
                    withFloat:(float)extent;
- (id)initWithNSString:(NSString *)name withInt:(int)ordinal;
@end

@interface TripleplayUiLayoutAxisLayout_Constraint : TripleplayUiLayout_Constraint {
 @public
  BOOL stretch_;
  float weight_;
}

@property (nonatomic, assign) BOOL stretch;
@property (nonatomic, assign) float weight;

- (id)initWithBOOL:(BOOL)stretch
         withFloat:(float)weight;
- (float)computeSizeWithFloat:(float)size
                    withFloat:(float)totalWeight
                    withFloat:(float)availSize;
@end

@interface TripleplayUiLayoutAxisLayout : TripleplayUiLayout {
 @public
  int _gap_;
  BOOL _stretchByDefault_;
  TripleplayUiLayoutAxisLayout_PolicyEnum *_offPolicy_;
}

@property (nonatomic, assign) int _gap;
@property (nonatomic, assign) BOOL _stretchByDefault;
@property (nonatomic, strong) TripleplayUiLayoutAxisLayout_PolicyEnum *_offPolicy;

+ (TripleplayUiLayoutAxisLayout_Constraint *)UNSTRETCHED;
+ (TripleplayUiLayoutAxisLayout_Constraint *)UNIFORM_STRETCHED;
+ (TripleplayUiLayoutAxisLayout_Vertical *)vertical;
+ (TripleplayUiLayoutAxisLayout_Horizontal *)horizontal;
+ (TripleplayUiLayoutAxisLayout_Constraint *)stretched;
+ (TripleplayUiLayoutAxisLayout_Constraint *)fixed;
+ (TripleplayUiLayoutAxisLayout_Constraint *)stretchedWithFloat:(float)weight;
+ (id)stretchWithId:(TripleplayUiElement *)elem;
+ (id)stretchWithId:(TripleplayUiElement *)elem
          withFloat:(float)weight;
- (TripleplayUiLayoutAxisLayout *)stretchByDefault;
- (TripleplayUiLayoutAxisLayout *)offPolicyWithTripleplayUiLayoutAxisLayout_PolicyEnum:(TripleplayUiLayoutAxisLayout_PolicyEnum *)policy;
- (TripleplayUiLayoutAxisLayout *)offStretch;
- (TripleplayUiLayoutAxisLayout *)offEqualize;
- (TripleplayUiLayoutAxisLayout *)offConstrain;
- (TripleplayUiLayoutAxisLayout *)gapWithInt:(int)gap;
- (TripleplayUiLayoutAxisLayout_Metrics *)computeMetricsWithTripleplayUiElements:(TripleplayUiElements *)elems
                                                                       withFloat:(float)hintX
                                                                       withFloat:(float)hintY
                                                                        withBOOL:(BOOL)vert;
- (TripleplayUiLayoutAxisLayout_Constraint *)constraintWithTripleplayUiElement:(TripleplayUiElement *)elem;
- (id)init;
@end

@interface TripleplayUiLayoutAxisLayout_Vertical : TripleplayUiLayoutAxisLayout {
}

- (PythagorasFDimension *)computeSizeWithTripleplayUiElements:(TripleplayUiElements *)elems
                                                    withFloat:(float)hintX
                                                    withFloat:(float)hintY;
- (void)layoutWithTripleplayUiElements:(TripleplayUiElements *)elems
                             withFloat:(float)left
                             withFloat:(float)top
                             withFloat:(float)width
                             withFloat:(float)height;
- (id)init;
@end

@interface TripleplayUiLayoutAxisLayout_Horizontal : TripleplayUiLayoutAxisLayout {
}

- (PythagorasFDimension *)computeSizeWithTripleplayUiElements:(TripleplayUiElements *)elems
                                                    withFloat:(float)hintX
                                                    withFloat:(float)hintY;
- (void)layoutWithTripleplayUiElements:(TripleplayUiElements *)elems
                             withFloat:(float)left
                             withFloat:(float)top
                             withFloat:(float)width
                             withFloat:(float)height;
- (id)init;
@end

@interface TripleplayUiLayoutAxisLayout_Metrics : NSObject {
 @public
  int count_;
  float prefWidth_;
  float prefHeight_;
  float maxWidth_;
  float maxHeight_;
  float fixWidth_;
  float fixHeight_;
  float unitWidth_;
  float unitHeight_;
  int stretchers_;
  float totalWeight_;
}

@property (nonatomic, assign) int count;
@property (nonatomic, assign) float prefWidth;
@property (nonatomic, assign) float prefHeight;
@property (nonatomic, assign) float maxWidth;
@property (nonatomic, assign) float maxHeight;
@property (nonatomic, assign) float fixWidth;
@property (nonatomic, assign) float fixHeight;
@property (nonatomic, assign) float unitWidth;
@property (nonatomic, assign) float unitHeight;
@property (nonatomic, assign) int stretchers;
@property (nonatomic, assign) float totalWeight;

- (float)gapsWithFloat:(float)gap;
- (id)init;
@end
