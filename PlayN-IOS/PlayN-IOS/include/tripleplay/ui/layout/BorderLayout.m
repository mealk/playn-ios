//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/layout/BorderLayout.java
//
//  Created by Thomas on 7/10/13.
//

#import "IOSObjectArray.h"
#import "java/lang/IllegalArgumentException.h"
#import "java/lang/IllegalStateException.h"
#import "java/lang/Math.h"
#import "java/util/Collection.h"
#import "java/util/HashMap.h"
#import "java/util/Iterator.h"
#import "java/util/Map.h"
#import "pythagoras/f/Dimension.h"
#import "pythagoras/f/IDimension.h"
#import "pythagoras/f/Rectangle.h"
#import "tripleplay/ui/Element.h"
#import "tripleplay/ui/Elements.h"
#import "tripleplay/ui/Layout.h"
#import "tripleplay/ui/Style.h"
#import "tripleplay/ui/layout/BorderLayout.h"

@implementation TripleplayUiLayoutBorderLayout

static TripleplayUiLayoutBorderLayout_Constraint * TripleplayUiLayoutBorderLayout_CENTER_;
static TripleplayUiLayoutBorderLayout_Constraint * TripleplayUiLayoutBorderLayout_NORTH_;
static TripleplayUiLayoutBorderLayout_Constraint * TripleplayUiLayoutBorderLayout_SOUTH_;
static TripleplayUiLayoutBorderLayout_Constraint * TripleplayUiLayoutBorderLayout_EAST_;
static TripleplayUiLayoutBorderLayout_Constraint * TripleplayUiLayoutBorderLayout_WEST_;
static IOSObjectArray * TripleplayUiLayoutBorderLayout_NS_;
static IOSObjectArray * TripleplayUiLayoutBorderLayout_WE_;
static IOSObjectArray * TripleplayUiLayoutBorderLayout_WCE_;

@synthesize hgap = hgap_;
@synthesize vgap = vgap_;

+ (TripleplayUiLayoutBorderLayout_Constraint *)CENTER {
  return TripleplayUiLayoutBorderLayout_CENTER_;
}

+ (TripleplayUiLayoutBorderLayout_Constraint *)NORTH {
  return TripleplayUiLayoutBorderLayout_NORTH_;
}

+ (TripleplayUiLayoutBorderLayout_Constraint *)SOUTH {
  return TripleplayUiLayoutBorderLayout_SOUTH_;
}

+ (TripleplayUiLayoutBorderLayout_Constraint *)EAST {
  return TripleplayUiLayoutBorderLayout_EAST_;
}

+ (TripleplayUiLayoutBorderLayout_Constraint *)WEST {
  return TripleplayUiLayoutBorderLayout_WEST_;
}

+ (IOSObjectArray *)NS {
  return TripleplayUiLayoutBorderLayout_NS_;
}

+ (IOSObjectArray *)WE {
  return TripleplayUiLayoutBorderLayout_WE_;
}

+ (IOSObjectArray *)WCE {
  return TripleplayUiLayoutBorderLayout_WCE_;
}

- (id)init {
  return [self initTripleplayUiLayoutBorderLayoutWithFloat:0];
}

- (id)initTripleplayUiLayoutBorderLayoutWithFloat:(float)gaps {
  return [self initTripleplayUiLayoutBorderLayoutWithFloat:gaps withFloat:gaps];
}

- (id)initWithFloat:(float)gaps {
  return [self initTripleplayUiLayoutBorderLayoutWithFloat:gaps];
}

- (id)initTripleplayUiLayoutBorderLayoutWithFloat:(float)hgap
                                        withFloat:(float)vgap {
  if ((self = [super init])) {
    self.hgap = hgap;
    self.vgap = vgap;
  }
  return self;
}

- (id)initWithFloat:(float)hgap
          withFloat:(float)vgap {
  return [self initTripleplayUiLayoutBorderLayoutWithFloat:hgap withFloat:vgap];
}

- (PythagorasFDimension *)computeSizeWithTripleplayUiElements:(TripleplayUiElements *)elems
                                                    withFloat:(float)hintX
                                                    withFloat:(float)hintY {
  return [((TripleplayUiLayoutBorderLayout_Slots *) [[TripleplayUiLayoutBorderLayout_Slots alloc] initWithTripleplayUiLayoutBorderLayout:self withTripleplayUiElements:elems]) computeSizeWithFloat:hintX withFloat:hintY];
}

- (void)layoutWithTripleplayUiElements:(TripleplayUiElements *)elems
                             withFloat:(float)left
                             withFloat:(float)top
                             withFloat:(float)width
                             withFloat:(float)height {
  TripleplayUiStyle_HAlignEnum *halign = ((TripleplayUiStyle_HAlignEnum *) [self resolveStyleWithTripleplayUiElement:elems withTripleplayUiStyle:[TripleplayUiStyle HALIGN]]);
  TripleplayUiStyle_VAlignEnum *valign = ((TripleplayUiStyle_VAlignEnum *) [self resolveStyleWithTripleplayUiElement:elems withTripleplayUiStyle:[TripleplayUiStyle VALIGN]]);
  TripleplayUiLayoutBorderLayout_Slots *slots = [[TripleplayUiLayoutBorderLayout_Slots alloc] initWithTripleplayUiLayoutBorderLayout:self withTripleplayUiElements:elems];
  PythagorasFRectangle *bounds = [[PythagorasFRectangle alloc] initWithFloat:left withFloat:top withFloat:width withFloat:height];
  [((TripleplayUiLayoutBorderLayout_Slots *) NIL_CHK(slots)) layoutNsWithTripleplayUiLayoutBorderLayout_PositionEnum:[TripleplayUiLayoutBorderLayout_PositionEnum NORTH] withTripleplayUiStyle_HAlignEnum:halign withPythagorasFRectangle:bounds];
  [((TripleplayUiLayoutBorderLayout_Slots *) NIL_CHK(slots)) layoutNsWithTripleplayUiLayoutBorderLayout_PositionEnum:[TripleplayUiLayoutBorderLayout_PositionEnum SOUTH] withTripleplayUiStyle_HAlignEnum:halign withPythagorasFRectangle:bounds];
  [((TripleplayUiLayoutBorderLayout_Slots *) NIL_CHK(slots)) layoutWeWithTripleplayUiLayoutBorderLayout_PositionEnum:[TripleplayUiLayoutBorderLayout_PositionEnum WEST] withTripleplayUiStyle_VAlignEnum:valign withPythagorasFRectangle:bounds];
  [((TripleplayUiLayoutBorderLayout_Slots *) NIL_CHK(slots)) layoutWeWithTripleplayUiLayoutBorderLayout_PositionEnum:[TripleplayUiLayoutBorderLayout_PositionEnum EAST] withTripleplayUiStyle_VAlignEnum:valign withPythagorasFRectangle:bounds];
  TripleplayUiLayoutBorderLayout_PositionEnum *p = [TripleplayUiLayoutBorderLayout_PositionEnum CENTER];
  id<PythagorasFIDimension> dim = [((TripleplayUiLayoutBorderLayout_Slots *) NIL_CHK(slots)) sizeWithTripleplayUiLayoutBorderLayout_PositionEnum:p withFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).width_ withFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).height_];
  if (dim == nil) {
    return;
  }
  TripleplayUiLayoutBorderLayout_Constraint *c = [((TripleplayUiLayoutBorderLayout_Slots *) NIL_CHK(slots)) constraintWithTripleplayUiLayoutBorderLayout_PositionEnum:p];
  dim = [((TripleplayUiLayoutBorderLayout_Constraint *) NIL_CHK(c)) adjustWithPythagorasFIDimension:dim withPythagorasFRectangle:bounds];
  [((TripleplayUiLayoutBorderLayout_Slots *) NIL_CHK(slots)) setBoundsWithTripleplayUiLayoutBorderLayout_PositionEnum:p withFloat:[((TripleplayUiLayoutBorderLayout_Constraint *) NIL_CHK(c)) alignWithFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).x_ withFloat:[((TripleplayUiStyle_HAlignEnum *) NIL_CHK(halign)) offsetWithFloat:[((id<PythagorasFIDimension>) NIL_CHK(dim)) width] withFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).width_]] withFloat:[((TripleplayUiLayoutBorderLayout_Constraint *) NIL_CHK(c)) alignWithFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).y_ withFloat:[((TripleplayUiStyle_VAlignEnum *) NIL_CHK(valign)) offsetWithFloat:[((id<PythagorasFIDimension>) NIL_CHK(dim)) height] withFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).height_]] withPythagorasFIDimension:dim];
}

+ (void)initialize {
  if (self == [TripleplayUiLayoutBorderLayout class]) {
    TripleplayUiLayoutBorderLayout_CENTER_ = ((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK([TripleplayUiLayoutBorderLayout_PositionEnum CENTER])).stretched;
    TripleplayUiLayoutBorderLayout_NORTH_ = ((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK([TripleplayUiLayoutBorderLayout_PositionEnum NORTH])).stretched;
    TripleplayUiLayoutBorderLayout_SOUTH_ = ((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK([TripleplayUiLayoutBorderLayout_PositionEnum SOUTH])).stretched;
    TripleplayUiLayoutBorderLayout_EAST_ = ((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK([TripleplayUiLayoutBorderLayout_PositionEnum EAST])).stretched;
    TripleplayUiLayoutBorderLayout_WEST_ = ((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK([TripleplayUiLayoutBorderLayout_PositionEnum WEST])).stretched;
    TripleplayUiLayoutBorderLayout_NS_ = [IOSObjectArray arrayWithObjects:(id[]){ [TripleplayUiLayoutBorderLayout_PositionEnum NORTH], [TripleplayUiLayoutBorderLayout_PositionEnum SOUTH] } count:2 type:[IOSClass classWithClass:[TripleplayUiLayoutBorderLayout_PositionEnum class]]];
    TripleplayUiLayoutBorderLayout_WE_ = [IOSObjectArray arrayWithObjects:(id[]){ [TripleplayUiLayoutBorderLayout_PositionEnum WEST], [TripleplayUiLayoutBorderLayout_PositionEnum EAST] } count:2 type:[IOSClass classWithClass:[TripleplayUiLayoutBorderLayout_PositionEnum class]]];
    TripleplayUiLayoutBorderLayout_WCE_ = [IOSObjectArray arrayWithObjects:(id[]){ [TripleplayUiLayoutBorderLayout_PositionEnum WEST], [TripleplayUiLayoutBorderLayout_PositionEnum CENTER], [TripleplayUiLayoutBorderLayout_PositionEnum EAST] } count:3 type:[IOSClass classWithClass:[TripleplayUiLayoutBorderLayout_PositionEnum class]]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiLayoutBorderLayout *typedCopy = (TripleplayUiLayoutBorderLayout *) copy;
  typedCopy.hgap = hgap_;
  typedCopy.vgap = vgap_;
}

@end
@implementation TripleplayUiLayoutBorderLayout_Constraint

@synthesize _pos = _pos_;
@synthesize _stretch = _stretch_;

- (TripleplayUiLayoutBorderLayout_Constraint *)stretched {
  return ((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK(_pos_)).stretched;
}

- (TripleplayUiLayoutBorderLayout_Constraint *)unstretched {
  return ((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK(_pos_)).unstretched;
}

- (id)initWithTripleplayUiLayoutBorderLayout_PositionEnum:(TripleplayUiLayoutBorderLayout_PositionEnum *)pos
                                                 withBOOL:(BOOL)stretch {
  if ((self = [super init])) {
    _pos_ = pos;
    _stretch_ = stretch;
  }
  return self;
}

- (PythagorasFDimension *)adjustWithPythagorasFIDimension:(id<PythagorasFIDimension>)pref
                                 withPythagorasFRectangle:(PythagorasFRectangle *)boundary {
  PythagorasFDimension *dim = [[PythagorasFDimension alloc] initWithPythagorasFIDimension:pref];
  if (_stretch_) {
    if ((((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK(_pos_)).orient & 1) != 0) {
      ((PythagorasFDimension *) NIL_CHK(dim)).width_ = ((PythagorasFRectangle *) NIL_CHK(boundary)).width_;
    }
    if ((((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK(_pos_)).orient & 2) != 0) {
      ((PythagorasFDimension *) NIL_CHK(dim)).height_ = ((PythagorasFRectangle *) NIL_CHK(boundary)).height_;
    }
  }
  ((PythagorasFDimension *) NIL_CHK(dim)).width_ = [JavaLangMath minWithFloat:((PythagorasFDimension *) NIL_CHK(dim)).width_ withFloat:((PythagorasFRectangle *) NIL_CHK(boundary)).width_];
  ((PythagorasFDimension *) NIL_CHK(dim)).height_ = [JavaLangMath minWithFloat:((PythagorasFDimension *) NIL_CHK(dim)).height_ withFloat:((PythagorasFRectangle *) NIL_CHK(boundary)).height_];
  return dim;
}

- (float)alignWithFloat:(float)origin
              withFloat:(float)offset {
  return _stretch_ ? origin : origin + offset;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiLayoutBorderLayout_Constraint *typedCopy = (TripleplayUiLayoutBorderLayout_Constraint *) copy;
  typedCopy._pos = _pos_;
  typedCopy._stretch = _stretch_;
}

@end
@implementation TripleplayUiLayoutBorderLayout_Slots

@synthesize this$0 = this$0_;
@synthesize elements = elements_;

- (id)initWithTripleplayUiLayoutBorderLayout:(TripleplayUiLayoutBorderLayout *)outer$
                    withTripleplayUiElements:(TripleplayUiElements *)elems {
  if ((self = [super init])) {
    this$0_ = outer$;
    elements_ = [[JavaUtilHashMap alloc] init];
    {
      id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((TripleplayUiElements *) NIL_CHK(elems)) iterator]);
      while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
        TripleplayUiElement *elem = ((TripleplayUiElement *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
        TripleplayUiLayoutBorderLayout_PositionEnum *p = [TripleplayUiLayoutBorderLayout_PositionEnum positionOfWithTripleplayUiLayout_Constraint:[((TripleplayUiElement *) NIL_CHK(elem)) constraint]];
        if (p == nil) {
          @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"Element with a non-BorderLayout constraint"];
        }
        if (((TripleplayUiElement *) [((id<JavaUtilMap>) NIL_CHK(elements_)) putWithId:p withId:elem]) != nil) {
          @throw [[JavaLangIllegalStateException alloc] initWithNSString:[NSString stringWithFormat:@"Multiple elements with the same constraint: %@", p]];
        }
      }
    }
    for (id<JavaUtilIterator> it = ((id<JavaUtilIterator>) [((id<JavaUtilCollection>) [((id<JavaUtilMap>) NIL_CHK(elements_)) values]) iterator]); [((id<JavaUtilIterator>) NIL_CHK(it)) hasNext]; ) {
      if (![((TripleplayUiElement *) [((id<JavaUtilIterator>) NIL_CHK(it)) next]) isVisible]) {
        [((id<JavaUtilIterator>) NIL_CHK(it)) remove];
      }
    }
  }
  return self;
}

- (PythagorasFDimension *)computeSizeWithFloat:(float)hintX
                                     withFloat:(float)hintY {
  int wce = [self countWithTripleplayUiLayoutBorderLayout_PositionEnumArray:[TripleplayUiLayoutBorderLayout WCE]];
  PythagorasFDimension *nsSize = [[PythagorasFDimension alloc] init];
  {
    IOSObjectArray *a__ = [TripleplayUiLayoutBorderLayout NS];
    int n__ = (int) [((IOSObjectArray *) NIL_CHK(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      TripleplayUiLayoutBorderLayout_PositionEnum *pos = ((TripleplayUiLayoutBorderLayout_PositionEnum *) [((IOSObjectArray *) NIL_CHK(a__)) objectAtIndex:i__]);
      id<PythagorasFIDimension> dim = [self sizeWithTripleplayUiLayoutBorderLayout_PositionEnum:pos withFloat:hintX withFloat:0];
      if (dim == nil) {
        continue;
      }
      ((PythagorasFDimension *) NIL_CHK(nsSize)).height_ += [((id<PythagorasFIDimension>) NIL_CHK(dim)) height];
      ((PythagorasFDimension *) NIL_CHK(nsSize)).width_ = [JavaLangMath maxWithFloat:((PythagorasFDimension *) NIL_CHK(nsSize)).width_ withFloat:[((id<PythagorasFIDimension>) NIL_CHK(dim)) width]];
      if (wce > 0) {
        ((PythagorasFDimension *) NIL_CHK(nsSize)).height_ += this$0_.vgap;
      }
    }
  }
  float ehintY = [JavaLangMath maxWithFloat:0 withFloat:hintY - ((PythagorasFDimension *) NIL_CHK(nsSize)).height_];
  PythagorasFDimension *weSize = [[PythagorasFDimension alloc] init];
  {
    IOSObjectArray *a__ = [TripleplayUiLayoutBorderLayout WE];
    int n__ = (int) [((IOSObjectArray *) NIL_CHK(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      TripleplayUiLayoutBorderLayout_PositionEnum *pos = ((TripleplayUiLayoutBorderLayout_PositionEnum *) [((IOSObjectArray *) NIL_CHK(a__)) objectAtIndex:i__]);
      id<PythagorasFIDimension> dim = [self sizeWithTripleplayUiLayoutBorderLayout_PositionEnum:pos withFloat:0 withFloat:ehintY];
      if (dim == nil) {
        continue;
      }
      ((PythagorasFDimension *) NIL_CHK(weSize)).width_ += [((id<PythagorasFIDimension>) NIL_CHK(dim)) width];
      ((PythagorasFDimension *) NIL_CHK(weSize)).height_ = [JavaLangMath maxWithFloat:((PythagorasFDimension *) NIL_CHK(weSize)).height_ withFloat:[((id<PythagorasFIDimension>) NIL_CHK(dim)) height]];
    }
  }
  ((PythagorasFDimension *) NIL_CHK(weSize)).width_ += [JavaLangMath maxWithInt:wce - 1 withInt:0] * this$0_.hgap;
  float ehintX = [JavaLangMath maxWithFloat:0 withFloat:hintX - ((PythagorasFDimension *) NIL_CHK(weSize)).width_];
  id<PythagorasFIDimension> csize = [self sizeWithTripleplayUiLayoutBorderLayout_PositionEnum:[TripleplayUiLayoutBorderLayout_PositionEnum CENTER] withFloat:ehintX withFloat:ehintY];
  if (csize != nil) {
    ((PythagorasFDimension *) NIL_CHK(weSize)).width_ += [csize width];
    ((PythagorasFDimension *) NIL_CHK(nsSize)).height_ += [csize height];
  }
  return [[PythagorasFDimension alloc] initWithFloat:[JavaLangMath maxWithFloat:((PythagorasFDimension *) NIL_CHK(weSize)).width_ withFloat:((PythagorasFDimension *) NIL_CHK(nsSize)).width_] withFloat:[JavaLangMath maxWithFloat:((PythagorasFDimension *) NIL_CHK(weSize)).height_ withFloat:((PythagorasFDimension *) NIL_CHK(nsSize)).height_]];
}

- (void)layoutNsWithTripleplayUiLayoutBorderLayout_PositionEnum:(TripleplayUiLayoutBorderLayout_PositionEnum *)p
                               withTripleplayUiStyle_HAlignEnum:(TripleplayUiStyle_HAlignEnum *)halign
                                       withPythagorasFRectangle:(PythagorasFRectangle *)bounds {
  id<PythagorasFIDimension> dim = [self sizeWithTripleplayUiLayoutBorderLayout_PositionEnum:p withFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).width_ withFloat:0];
  if (dim == nil) {
    return;
  }
  TripleplayUiLayoutBorderLayout_Constraint *c = [self constraintWithTripleplayUiLayoutBorderLayout_PositionEnum:p];
  dim = [((TripleplayUiLayoutBorderLayout_Constraint *) NIL_CHK(c)) adjustWithPythagorasFIDimension:dim withPythagorasFRectangle:bounds];
  float y = ((PythagorasFRectangle *) NIL_CHK(bounds)).y_;
  if (p == [TripleplayUiLayoutBorderLayout_PositionEnum NORTH]) {
    ((PythagorasFRectangle *) NIL_CHK(bounds)).y_ += [((id<PythagorasFIDimension>) NIL_CHK(dim)) height] + this$0_.vgap;
  }
  else {
    y += ((PythagorasFRectangle *) NIL_CHK(bounds)).height_ - [((id<PythagorasFIDimension>) NIL_CHK(dim)) height];
  }
  ((PythagorasFRectangle *) NIL_CHK(bounds)).height_ -= [((id<PythagorasFIDimension>) NIL_CHK(dim)) height] + this$0_.vgap;
  [self setBoundsWithTripleplayUiLayoutBorderLayout_PositionEnum:p withFloat:[((TripleplayUiLayoutBorderLayout_Constraint *) NIL_CHK(c)) alignWithFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).x_ withFloat:[((TripleplayUiStyle_HAlignEnum *) NIL_CHK(halign)) offsetWithFloat:[((id<PythagorasFIDimension>) NIL_CHK(dim)) width] withFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).width_]] withFloat:y withPythagorasFIDimension:dim];
}

- (void)layoutWeWithTripleplayUiLayoutBorderLayout_PositionEnum:(TripleplayUiLayoutBorderLayout_PositionEnum *)p
                               withTripleplayUiStyle_VAlignEnum:(TripleplayUiStyle_VAlignEnum *)valign
                                       withPythagorasFRectangle:(PythagorasFRectangle *)bounds {
  id<PythagorasFIDimension> dim = [self sizeWithTripleplayUiLayoutBorderLayout_PositionEnum:p withFloat:0 withFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).height_];
  if (dim == nil) {
    return;
  }
  TripleplayUiLayoutBorderLayout_Constraint *c = [self constraintWithTripleplayUiLayoutBorderLayout_PositionEnum:p];
  dim = [((TripleplayUiLayoutBorderLayout_Constraint *) NIL_CHK(c)) adjustWithPythagorasFIDimension:dim withPythagorasFRectangle:bounds];
  float x = ((PythagorasFRectangle *) NIL_CHK(bounds)).x_;
  if (p == [TripleplayUiLayoutBorderLayout_PositionEnum WEST]) {
    ((PythagorasFRectangle *) NIL_CHK(bounds)).x_ += [((id<PythagorasFIDimension>) NIL_CHK(dim)) width] + this$0_.hgap;
  }
  else {
    x += ((PythagorasFRectangle *) NIL_CHK(bounds)).width_ - [((id<PythagorasFIDimension>) NIL_CHK(dim)) width];
  }
  ((PythagorasFRectangle *) NIL_CHK(bounds)).width_ -= [((id<PythagorasFIDimension>) NIL_CHK(dim)) width] + this$0_.hgap;
  [self setBoundsWithTripleplayUiLayoutBorderLayout_PositionEnum:p withFloat:x withFloat:[((TripleplayUiLayoutBorderLayout_Constraint *) NIL_CHK(c)) alignWithFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).y_ withFloat:[((TripleplayUiStyle_VAlignEnum *) NIL_CHK(valign)) offsetWithFloat:[((id<PythagorasFIDimension>) NIL_CHK(dim)) height] withFloat:((PythagorasFRectangle *) NIL_CHK(bounds)).height_]] withPythagorasFIDimension:dim];
}

- (void)setBoundsWithTripleplayUiLayoutBorderLayout_PositionEnum:(TripleplayUiLayoutBorderLayout_PositionEnum *)p
                                                       withFloat:(float)x
                                                       withFloat:(float)y
                                       withPythagorasFIDimension:(id<PythagorasFIDimension>)dim {
  [this$0_ setBoundsWithTripleplayUiElement:[self getWithTripleplayUiLayoutBorderLayout_PositionEnum:p] withFloat:x withFloat:y withFloat:[((id<PythagorasFIDimension>) NIL_CHK(dim)) width] withFloat:[((id<PythagorasFIDimension>) NIL_CHK(dim)) height]];
}

- (int)countWithTripleplayUiLayoutBorderLayout_PositionEnumArray:(IOSObjectArray *)ps {
  int count = 0;
  {
    IOSObjectArray *a__ = ps;
    int n__ = (int) [((IOSObjectArray *) NIL_CHK(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      TripleplayUiLayoutBorderLayout_PositionEnum *p = ((TripleplayUiLayoutBorderLayout_PositionEnum *) [((IOSObjectArray *) NIL_CHK(a__)) objectAtIndex:i__]);
      if ([((id<JavaUtilMap>) NIL_CHK(elements_)) containsKeyWithId:p]) {
        count++;
      }
    }
  }
  return count;
}

- (BOOL)stretchWithTripleplayUiLayoutBorderLayout_PositionEnum:(TripleplayUiLayoutBorderLayout_PositionEnum *)p {
  return ((TripleplayUiLayoutBorderLayout_Constraint *) [[self getWithTripleplayUiLayoutBorderLayout_PositionEnum:p] constraint])._stretch;
}

- (TripleplayUiElement *)getWithTripleplayUiLayoutBorderLayout_PositionEnum:(TripleplayUiLayoutBorderLayout_PositionEnum *)p {
  return (TripleplayUiElement *) ((TripleplayUiElement *) [((id<JavaUtilMap>) NIL_CHK(elements_)) getWithId:p]);
}

- (TripleplayUiLayoutBorderLayout_Constraint *)constraintWithTripleplayUiLayoutBorderLayout_PositionEnum:(TripleplayUiLayoutBorderLayout_PositionEnum *)p {
  return (TripleplayUiLayoutBorderLayout_Constraint *) [[self getWithTripleplayUiLayoutBorderLayout_PositionEnum:p] constraint];
}

- (id<PythagorasFIDimension>)sizeWithTripleplayUiLayoutBorderLayout_PositionEnum:(TripleplayUiLayoutBorderLayout_PositionEnum *)p
                                                                       withFloat:(float)hintX
                                                                       withFloat:(float)hintY {
  TripleplayUiElement *e = ((TripleplayUiElement *) [((id<JavaUtilMap>) NIL_CHK(elements_)) getWithId:p]);
  return e == nil ? nil : [this$0_ preferredSizeWithTripleplayUiElement:e withFloat:hintX withFloat:hintY];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiLayoutBorderLayout_Slots *typedCopy = (TripleplayUiLayoutBorderLayout_Slots *) copy;
  typedCopy.this$0 = this$0_;
  typedCopy.elements = elements_;
}

@end

static TripleplayUiLayoutBorderLayout_PositionEnum *TripleplayUiLayoutBorderLayout_PositionEnum_CENTER;
static TripleplayUiLayoutBorderLayout_PositionEnum *TripleplayUiLayoutBorderLayout_PositionEnum_NORTH;
static TripleplayUiLayoutBorderLayout_PositionEnum *TripleplayUiLayoutBorderLayout_PositionEnum_SOUTH;
static TripleplayUiLayoutBorderLayout_PositionEnum *TripleplayUiLayoutBorderLayout_PositionEnum_EAST;
static TripleplayUiLayoutBorderLayout_PositionEnum *TripleplayUiLayoutBorderLayout_PositionEnum_WEST;
IOSObjectArray *TripleplayUiLayoutBorderLayout_PositionEnum_values;

@implementation TripleplayUiLayoutBorderLayout_PositionEnum

+ (TripleplayUiLayoutBorderLayout_PositionEnum *)CENTER {
  return TripleplayUiLayoutBorderLayout_PositionEnum_CENTER;
}
+ (TripleplayUiLayoutBorderLayout_PositionEnum *)NORTH {
  return TripleplayUiLayoutBorderLayout_PositionEnum_NORTH;
}
+ (TripleplayUiLayoutBorderLayout_PositionEnum *)SOUTH {
  return TripleplayUiLayoutBorderLayout_PositionEnum_SOUTH;
}
+ (TripleplayUiLayoutBorderLayout_PositionEnum *)EAST {
  return TripleplayUiLayoutBorderLayout_PositionEnum_EAST;
}
+ (TripleplayUiLayoutBorderLayout_PositionEnum *)WEST {
  return TripleplayUiLayoutBorderLayout_PositionEnum_WEST;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

@synthesize unstretched = unstretched_;
@synthesize stretched = stretched_;
@synthesize orient = orient_;

+ (TripleplayUiLayoutBorderLayout_PositionEnum *)positionOfWithTripleplayUiLayout_Constraint:(TripleplayUiLayout_Constraint *)c {
  {
    IOSObjectArray *a__ = [TripleplayUiLayoutBorderLayout_PositionEnum values];
    int n__ = (int) [((IOSObjectArray *) NIL_CHK(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      TripleplayUiLayoutBorderLayout_PositionEnum *p = ((TripleplayUiLayoutBorderLayout_PositionEnum *) [((IOSObjectArray *) NIL_CHK(a__)) objectAtIndex:i__]);
      if (((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK(p)).unstretched == c || ((TripleplayUiLayoutBorderLayout_PositionEnum *) NIL_CHK(p)).stretched == c) {
        return p;
      }
    }
  }
  return nil;
}

- (id)initWithInt:(int)orient
     withNSString:(NSString *)name
          withInt:(int)ordinal {
  if ((self = [super initWithNSString:name withInt:ordinal])) {
    self.orient = orient;
    unstretched_ = [[TripleplayUiLayoutBorderLayout_Constraint alloc] initWithTripleplayUiLayoutBorderLayout_PositionEnum:self withBOOL:NO];
    stretched_ = [[TripleplayUiLayoutBorderLayout_Constraint alloc] initWithTripleplayUiLayoutBorderLayout_PositionEnum:self withBOOL:YES];
  }
  return self;
}

+ (void)initialize {
  if (self == [TripleplayUiLayoutBorderLayout_PositionEnum class]) {
    TripleplayUiLayoutBorderLayout_PositionEnum_CENTER = [[TripleplayUiLayoutBorderLayout_PositionEnum alloc] initWithInt:3 withNSString:@"TripleplayUiLayoutBorderLayout_Position_CENTER" withInt:0];
    TripleplayUiLayoutBorderLayout_PositionEnum_NORTH = [[TripleplayUiLayoutBorderLayout_PositionEnum alloc] initWithInt:1 withNSString:@"TripleplayUiLayoutBorderLayout_Position_NORTH" withInt:1];
    TripleplayUiLayoutBorderLayout_PositionEnum_SOUTH = [[TripleplayUiLayoutBorderLayout_PositionEnum alloc] initWithInt:1 withNSString:@"TripleplayUiLayoutBorderLayout_Position_SOUTH" withInt:2];
    TripleplayUiLayoutBorderLayout_PositionEnum_EAST = [[TripleplayUiLayoutBorderLayout_PositionEnum alloc] initWithInt:2 withNSString:@"TripleplayUiLayoutBorderLayout_Position_EAST" withInt:3];
    TripleplayUiLayoutBorderLayout_PositionEnum_WEST = [[TripleplayUiLayoutBorderLayout_PositionEnum alloc] initWithInt:2 withNSString:@"TripleplayUiLayoutBorderLayout_Position_WEST" withInt:4];
    TripleplayUiLayoutBorderLayout_PositionEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ TripleplayUiLayoutBorderLayout_PositionEnum_CENTER, TripleplayUiLayoutBorderLayout_PositionEnum_NORTH, TripleplayUiLayoutBorderLayout_PositionEnum_SOUTH, TripleplayUiLayoutBorderLayout_PositionEnum_EAST, TripleplayUiLayoutBorderLayout_PositionEnum_WEST, nil } count:5 type:[IOSClass classWithClass:[TripleplayUiLayoutBorderLayout_PositionEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:TripleplayUiLayoutBorderLayout_PositionEnum_values];
}

+ (TripleplayUiLayoutBorderLayout_PositionEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [TripleplayUiLayoutBorderLayout_PositionEnum_values count]; i++) {
    TripleplayUiLayoutBorderLayout_PositionEnum *e = [TripleplayUiLayoutBorderLayout_PositionEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
