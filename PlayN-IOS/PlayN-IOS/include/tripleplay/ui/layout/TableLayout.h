//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/layout/TableLayout.java
//
//  Created by Thomas on 7/25/13.
//

#import "JreEmulation.h"

#if !TripleplayUiLayoutTableLayout_RESTRICT
#define TripleplayUiLayoutTableLayout_INCLUDE_ALL 1
#endif
#undef TripleplayUiLayoutTableLayout_RESTRICT

#if !defined (_TripleplayUiLayoutTableLayout_) && (TripleplayUiLayoutTableLayout_INCLUDE_ALL || TripleplayUiLayoutTableLayout_INCLUDE)
#define _TripleplayUiLayoutTableLayout_

@class IOSFloatArray;
@class IOSObjectArray;
@class PythagorasFDimension;
@class TripleplayUiElement;
@class TripleplayUiElements;
@class TripleplayUiLayoutTableLayout_Column;
@class TripleplayUiLayoutTableLayout_Metrics;
@class TripleplayUiStyle_VAlignEnum;

#define TripleplayUiLayout_RESTRICT 1
#define TripleplayUiLayout_INCLUDE 1
#include "tripleplay/ui/Layout.h"

@interface TripleplayUiLayoutTableLayout : TripleplayUiLayout {
 @public
  IOSObjectArray *_columns_;
  int _rowgap_, _colgap_;
  BOOL _vstretch_;
  TripleplayUiStyle_VAlignEnum *_rowVAlign_;
}

@property (nonatomic, strong) IOSObjectArray *_columns;
@property (nonatomic, assign) int _rowgap;
@property (nonatomic, assign) int _colgap;
@property (nonatomic, assign) BOOL _vstretch;
@property (nonatomic, strong) TripleplayUiStyle_VAlignEnum *_rowVAlign;

+ (TripleplayUiLayoutTableLayout_Column *)COL;
+ (IOSObjectArray *)columnsWithInt:(int)count;
+ (id)colspanWithId:(TripleplayUiElement *)elem
            withInt:(int)colspan;
- (id)initWithInt:(int)columns;
- (id)initWithTripleplayUiLayoutTableLayout_ColumnArray:(IOSObjectArray *)columns;
- (TripleplayUiLayoutTableLayout *)gapsWithInt:(int)rowgap
                                       withInt:(int)colgap;
- (TripleplayUiLayoutTableLayout *)alignTop;
- (TripleplayUiLayoutTableLayout *)alignBottom;
- (TripleplayUiLayoutTableLayout *)fillHeight;
- (int)columns;
- (PythagorasFDimension *)computeSizeWithTripleplayUiElements:(TripleplayUiElements *)elems
                                                    withFloat:(float)hintX
                                                    withFloat:(float)hintY;
- (void)layoutWithTripleplayUiElements:(TripleplayUiElements *)elems
                             withFloat:(float)left
                             withFloat:(float)top
                             withFloat:(float)width
                             withFloat:(float)height;
- (float)freeWeight;
- (TripleplayUiLayoutTableLayout_Metrics *)computeMetricsWithTripleplayUiElements:(TripleplayUiElements *)elems
                                                                        withFloat:(float)hintX
                                                                        withFloat:(float)hintY;
+ (int)colspanWithTripleplayUiElement:(TripleplayUiElement *)elem;
+ (float)sumWithFloatArray:(IOSFloatArray *)values;
@end
#endif

#if !defined (_TripleplayUiLayoutTableLayout_Column_) && (TripleplayUiLayoutTableLayout_INCLUDE_ALL || TripleplayUiLayoutTableLayout_Column_INCLUDE)
#define _TripleplayUiLayoutTableLayout_Column_

@class IOSObjectArray;
@class TripleplayUiStyle_HAlignEnum;

@interface TripleplayUiLayoutTableLayout_Column : NSObject {
 @public
  TripleplayUiStyle_HAlignEnum *_halign_;
  BOOL _stretch_;
  float _weight_, _minWidth_;
}

@property (nonatomic, strong) TripleplayUiStyle_HAlignEnum *_halign;
@property (nonatomic, assign) BOOL _stretch;
@property (nonatomic, assign) float _weight;
@property (nonatomic, assign) float _minWidth;

- (id)initWithTripleplayUiStyle_HAlignEnum:(TripleplayUiStyle_HAlignEnum *)halign
                                  withBOOL:(BOOL)stretch
                                 withFloat:(float)weight
                                 withFloat:(float)minWidth;
- (TripleplayUiLayoutTableLayout_Column *)alignLeft;
- (TripleplayUiLayoutTableLayout_Column *)alignRight;
- (TripleplayUiLayoutTableLayout_Column *)fixed;
- (TripleplayUiLayoutTableLayout_Column *)freeWithFloat:(float)weight;
- (TripleplayUiLayoutTableLayout_Column *)stretch;
- (TripleplayUiLayoutTableLayout_Column *)minWidthWithFloat:(float)minWidth;
- (IOSObjectArray *)copy__WithInt:(int)count OBJC_METHOD_FAMILY_NONE;
@end
#endif

#if !defined (_TripleplayUiLayoutTableLayout_Colspan_) && (TripleplayUiLayoutTableLayout_INCLUDE_ALL || TripleplayUiLayoutTableLayout_Colspan_INCLUDE)
#define _TripleplayUiLayoutTableLayout_Colspan_

#define TripleplayUiLayout_RESTRICT 1
#define TripleplayUiLayout_Constraint_INCLUDE 1
#include "tripleplay/ui/Layout.h"

@interface TripleplayUiLayoutTableLayout_Colspan : TripleplayUiLayout_Constraint {
 @public
  int colspan_;
}

@property (nonatomic, assign) int colspan;

- (id)initWithInt:(int)colspan;
@end
#endif

#if !defined (_TripleplayUiLayoutTableLayout_Metrics_) && (TripleplayUiLayoutTableLayout_INCLUDE_ALL || TripleplayUiLayoutTableLayout_Metrics_INCLUDE)
#define _TripleplayUiLayoutTableLayout_Metrics_

@class IOSFloatArray;

@interface TripleplayUiLayoutTableLayout_Metrics : NSObject {
 @public
  IOSFloatArray *columnWidths_;
  IOSFloatArray *rowHeights_;
}

@property (nonatomic, strong) IOSFloatArray *columnWidths;
@property (nonatomic, strong) IOSFloatArray *rowHeights;

- (int)columns;
- (int)rows;
- (float)totalWidthWithFloat:(float)gap;
- (float)totalHeightWithFloat:(float)gap;
- (id)init;
@end
#endif
