//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Button.java
//
//  Created by Thomas on 7/10/13.
//

#import "IOSClass.h"
#import "java/lang/Integer.h"
#import "playn/core/Image.h"
#import "playn/core/Pointer.h"
#import "playn/core/Sound.h"
#import "react/Connection.h"
#import "react/Signal.h"
#import "react/SignalView.h"
#import "react/Slot.h"
#import "react/UnitSlot.h"
#import "react/Value.h"
#import "tripleplay/ui/Button.h"
#import "tripleplay/ui/Element.h"
#import "tripleplay/ui/Icon.h"
#import "tripleplay/ui/Icons.h"
#import "tripleplay/ui/Style.h"
#import "tripleplay/ui/TextWidget.h"

@implementation TripleplayUiButton

static TripleplayUiStyle * TripleplayUiButton_DEBOUNCE_DELAY_;

@synthesize text_ = text__;
@synthesize icon_ = icon__;
@synthesize _clicked = _clicked_;
@synthesize _actionSound = _actionSound_;
@synthesize _debounceDelay = _debounceDelay_;
@synthesize _lastClickStamp = _lastClickStamp_;

+ (TripleplayUiStyle *)DEBOUNCE_DELAY {
  return TripleplayUiButton_DEBOUNCE_DELAY_;
}

+ (void)setDEBOUNCE_DELAY:(TripleplayUiStyle *)DEBOUNCE_DELAY {
  TripleplayUiButton_DEBOUNCE_DELAY_ = DEBOUNCE_DELAY;
}

- (id)init {
  return [self initTripleplayUiButtonWithNSString:nil withTripleplayUiIcon:(id<TripleplayUiIcon>) nil];
}

- (id)initWithNSString:(NSString *)text {
  return [self initTripleplayUiButtonWithNSString:text withTripleplayUiIcon:(id<TripleplayUiIcon>) nil];
}

- (id)initWithTripleplayUiIcon:(id<TripleplayUiIcon>)icon {
  return [self initTripleplayUiButtonWithNSString:nil withTripleplayUiIcon:icon];
}

- (id)initWithPlaynCoreImage:(id<PlaynCoreImage>)icon {
  return [self initTripleplayUiButtonWithNSString:nil withTripleplayUiIcon:[TripleplayUiIcons imageWithPlaynCoreImage:icon]];
}

- (id)initWithNSString:(NSString *)text
    withPlaynCoreImage:(id<PlaynCoreImage>)icon {
  return [self initTripleplayUiButtonWithNSString:text withTripleplayUiIcon:[TripleplayUiIcons imageWithPlaynCoreImage:icon]];
}

- (id)initTripleplayUiButtonWithNSString:(NSString *)text
                    withTripleplayUiIcon:(id<TripleplayUiIcon>)icon {
  if ((self = [super init])) {
    text__ = ((ReactValue *) [ReactValue createWithId:(NSString *) nil]);
    icon__ = ((ReactValue *) [ReactValue createWithId:nil]);
    _clicked_ = ((ReactSignal *) [ReactSignal create]);
    (void) [((ReactValue *) NIL_CHK(self.text_)) updateWithId:text];
    (void) [((ReactValue *) NIL_CHK(self.icon_)) updateWithId:icon];
    (void) [((ReactValue *) NIL_CHK(self.text_)) connectWithReactValueView_Listener:[self textDidChange]];
    (void) [((ReactValue *) NIL_CHK(self.icon_)) connectWithReactValueView_Listener:[self iconDidChange]];
  }
  return self;
}

- (id)initWithNSString:(NSString *)text
  withTripleplayUiIcon:(id<TripleplayUiIcon>)icon {
  return [self initTripleplayUiButtonWithNSString:text withTripleplayUiIcon:icon];
}

- (void)click {
  if (_actionSound_ != nil) [_actionSound_ play];
  [((ReactSignal *) NIL_CHK(_clicked_)) emitWithId:self];
}

- (id<ReactSignalView>)clicked {
  return _clicked_;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"Button(%@)", ((NSString *) [((ReactValue *) NIL_CHK(text__)) get])];
}

- (IOSClass *)getStyleClass {
  return [IOSClass classWithClass:[TripleplayUiButton class]];
}

- (void)layout {
  [super layout];
  _actionSound_ = ((id<PlaynCoreSound>) [self resolveStyleWithTripleplayUiStyle:[TripleplayUiStyle ACTION_SOUND]]);
  _debounceDelay_ = [((JavaLangInteger *) [self resolveStyleWithTripleplayUiStyle:TripleplayUiButton_DEBOUNCE_DELAY_]) intValue];
}

- (void)onPressWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event {
  if ([((id<PlaynCorePointer_Event>) NIL_CHK(event)) time] - _lastClickStamp_ > _debounceDelay_) [super onPressWithPlaynCorePointer_Event:event];
}

- (void)onClickWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event {
  _lastClickStamp_ = [((id<PlaynCorePointer_Event>) NIL_CHK(event)) time];
  [self click];
}

- (NSString *)text {
  return ((NSString *) [((ReactValue *) NIL_CHK(text__)) get]);
}

- (id<TripleplayUiIcon>)icon {
  return ((id<TripleplayUiIcon>) [((ReactValue *) NIL_CHK(icon__)) get]);
}

+ (void)initialize {
  if (self == [TripleplayUiButton class]) {
    TripleplayUiButton_DEBOUNCE_DELAY_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:YES withId:[JavaLangInteger valueOfWithInt:500]]);
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiButton *typedCopy = (TripleplayUiButton *) copy;
  typedCopy.text_ = text__;
  typedCopy.icon_ = icon__;
  typedCopy._clicked = _clicked_;
  typedCopy._actionSound = _actionSound_;
  typedCopy._debounceDelay = _debounceDelay_;
  typedCopy._lastClickStamp = _lastClickStamp_;
}

@end
