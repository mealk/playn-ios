//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Constraints.java
//
//  Created by Thomas on 7/10/13.
//

#import "java/lang/Math.h"
#import "playn/core/Graphics.h"
#import "playn/core/PlayN.h"
#import "playn/core/TextFormat.h"
#import "playn/core/TextLayout.h"
#import "pythagoras/f/Dimension.h"
#import "tripleplay/ui/Constraints.h"
#import "tripleplay/ui/Element.h"
#import "tripleplay/ui/Layout.h"
#import "tripleplay/ui/Style.h"

@implementation TripleplayUiConstraints

+ (TripleplayUiLayout_Constraint *)fixedWidthWithFloat:(float)width {
  return [[TripleplayUiConstraints_$1 alloc] initWithFloat:width];
}

+ (TripleplayUiLayout_Constraint *)fixedHeightWithFloat:(float)height {
  return [[TripleplayUiConstraints_$2 alloc] initWithFloat:height];
}

+ (TripleplayUiLayout_Constraint *)fixedSizeWithFloat:(float)width
                                            withFloat:(float)height {
  return [[TripleplayUiConstraints_$3 alloc] initWithFloat:width withFloat:height];
}

+ (TripleplayUiLayout_Constraint *)maxWidthWithFloat:(float)width {
  return [[TripleplayUiConstraints_$4 alloc] initWithFloat:width];
}

+ (TripleplayUiLayout_Constraint *)maxHeightWithFloat:(float)height {
  return [[TripleplayUiConstraints_$5 alloc] initWithFloat:height];
}

+ (TripleplayUiLayout_Constraint *)maxSizeWithFloat:(float)width
                                          withFloat:(float)height {
  return [[TripleplayUiConstraints_$6 alloc] initWithFloat:width withFloat:height];
}

+ (TripleplayUiLayout_Constraint *)minWidthWithFloat:(float)width {
  return [[TripleplayUiConstraints_$7 alloc] initWithFloat:width];
}

+ (TripleplayUiLayout_Constraint *)minHeightWithFloat:(float)height {
  return [[TripleplayUiConstraints_$8 alloc] initWithFloat:height];
}

+ (TripleplayUiLayout_Constraint *)minSizeWithFloat:(float)width
                                          withFloat:(float)height {
  return [[TripleplayUiConstraints_$9 alloc] initWithFloat:width withFloat:height];
}

+ (TripleplayUiLayout_Constraint *)minSizeWithNSString:(NSString *)text {
  return [[TripleplayUiConstraints_$10 alloc] initWithNSString:text];
}

+ (TripleplayUiLayout_Constraint *)fixedSizeWithNSString:(NSString *)text {
  return [[TripleplayUiConstraints_$11 alloc] initWithNSString:text];
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplayUiConstraints_$1

@synthesize val$width = val$width_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).width_ = val$width_;
}

- (id)initWithFloat:(float)capture$0 {
  if ((self = [super init])) {
    val$width_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$1 *typedCopy = (TripleplayUiConstraints_$1 *) copy;
  typedCopy.val$width = val$width_;
}

@end
@implementation TripleplayUiConstraints_$2

@synthesize val$height = val$height_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).height_ = val$height_;
}

- (id)initWithFloat:(float)capture$0 {
  if ((self = [super init])) {
    val$height_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$2 *typedCopy = (TripleplayUiConstraints_$2 *) copy;
  typedCopy.val$height = val$height_;
}

@end
@implementation TripleplayUiConstraints_$3

@synthesize val$width = val$width_;
@synthesize val$height = val$height_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).width_ = val$width_;
  ((PythagorasFDimension *) NIL_CHK(psize)).height_ = val$height_;
}

- (id)initWithFloat:(float)capture$0
          withFloat:(float)capture$1 {
  if ((self = [super init])) {
    val$width_ = capture$0;
    val$height_ = capture$1;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$3 *typedCopy = (TripleplayUiConstraints_$3 *) copy;
  typedCopy.val$width = val$width_;
  typedCopy.val$height = val$height_;
}

@end
@implementation TripleplayUiConstraints_$4

@synthesize val$width = val$width_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).width_ = [JavaLangMath minWithFloat:((PythagorasFDimension *) NIL_CHK(psize)).width_ withFloat:val$width_];
}

- (id)initWithFloat:(float)capture$0 {
  if ((self = [super init])) {
    val$width_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$4 *typedCopy = (TripleplayUiConstraints_$4 *) copy;
  typedCopy.val$width = val$width_;
}

@end
@implementation TripleplayUiConstraints_$5

@synthesize val$height = val$height_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).height_ = [JavaLangMath minWithFloat:((PythagorasFDimension *) NIL_CHK(psize)).height_ withFloat:val$height_];
}

- (id)initWithFloat:(float)capture$0 {
  if ((self = [super init])) {
    val$height_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$5 *typedCopy = (TripleplayUiConstraints_$5 *) copy;
  typedCopy.val$height = val$height_;
}

@end
@implementation TripleplayUiConstraints_$6

@synthesize val$width = val$width_;
@synthesize val$height = val$height_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).width_ = [JavaLangMath minWithFloat:((PythagorasFDimension *) NIL_CHK(psize)).width_ withFloat:val$width_];
  ((PythagorasFDimension *) NIL_CHK(psize)).height_ = [JavaLangMath minWithFloat:((PythagorasFDimension *) NIL_CHK(psize)).height_ withFloat:val$height_];
}

- (id)initWithFloat:(float)capture$0
          withFloat:(float)capture$1 {
  if ((self = [super init])) {
    val$width_ = capture$0;
    val$height_ = capture$1;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$6 *typedCopy = (TripleplayUiConstraints_$6 *) copy;
  typedCopy.val$width = val$width_;
  typedCopy.val$height = val$height_;
}

@end
@implementation TripleplayUiConstraints_$7

@synthesize val$width = val$width_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).width_ = [JavaLangMath maxWithFloat:((PythagorasFDimension *) NIL_CHK(psize)).width_ withFloat:val$width_];
}

- (id)initWithFloat:(float)capture$0 {
  if ((self = [super init])) {
    val$width_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$7 *typedCopy = (TripleplayUiConstraints_$7 *) copy;
  typedCopy.val$width = val$width_;
}

@end
@implementation TripleplayUiConstraints_$8

@synthesize val$height = val$height_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).height_ = [JavaLangMath maxWithFloat:((PythagorasFDimension *) NIL_CHK(psize)).height_ withFloat:val$height_];
}

- (id)initWithFloat:(float)capture$0 {
  if ((self = [super init])) {
    val$height_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$8 *typedCopy = (TripleplayUiConstraints_$8 *) copy;
  typedCopy.val$height = val$height_;
}

@end
@implementation TripleplayUiConstraints_$9

@synthesize val$width = val$width_;
@synthesize val$height = val$height_;

- (void)adjustPreferredSizeWithPythagorasFDimension:(PythagorasFDimension *)psize
                                          withFloat:(float)hintX
                                          withFloat:(float)hintY {
  ((PythagorasFDimension *) NIL_CHK(psize)).width_ = [JavaLangMath maxWithFloat:((PythagorasFDimension *) NIL_CHK(psize)).width_ withFloat:val$width_];
  ((PythagorasFDimension *) NIL_CHK(psize)).height_ = [JavaLangMath maxWithFloat:((PythagorasFDimension *) NIL_CHK(psize)).height_ withFloat:val$height_];
}

- (id)initWithFloat:(float)capture$0
          withFloat:(float)capture$1 {
  if ((self = [super init])) {
    val$width_ = capture$0;
    val$height_ = capture$1;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_$9 *typedCopy = (TripleplayUiConstraints_$9 *) copy;
  typedCopy.val$width = val$width_;
  typedCopy.val$height = val$height_;
}

@end
@implementation TripleplayUiConstraints_TextConstraint

- (void)addTextSizeWithPythagorasFDimension:(PythagorasFDimension *)tsize
                    withPlaynCoreTextLayout:(id<PlaynCoreTextLayout>)layout {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplayUiConstraints_TemplateTextConstraint

@synthesize _tmpl = _tmpl_;
@synthesize _elem = _elem_;

- (id)initWithNSString:(NSString *)tmpl {
  if ((self = [super init])) {
    _tmpl_ = tmpl;
  }
  return self;
}

- (void)setElementWithTripleplayUiElement:(TripleplayUiElement *)elem {
  _elem_ = elem;
}

- (void)addTextSizeWithPythagorasFDimension:(PythagorasFDimension *)tsize
                    withPlaynCoreTextLayout:(id<PlaynCoreTextLayout>)layout {
  PlaynCoreTextFormat *format = [TripleplayUiStyle createTextFormatWithTripleplayUiElement:_elem_];
  [self addTextSizeWithPythagorasFDimension:tsize withPlaynCoreTextLayout:layout withPlaynCoreTextLayout:[((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) layoutTextWithNSString:_tmpl_ withPlaynCoreTextFormat:format]];
}

- (void)addTextSizeWithPythagorasFDimension:(PythagorasFDimension *)tsize
                    withPlaynCoreTextLayout:(id<PlaynCoreTextLayout>)layout
                    withPlaynCoreTextLayout:(id<PlaynCoreTextLayout>)tmplLayout {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiConstraints_TemplateTextConstraint *typedCopy = (TripleplayUiConstraints_TemplateTextConstraint *) copy;
  typedCopy._tmpl = _tmpl_;
  typedCopy._elem = _elem_;
}

@end
@implementation TripleplayUiConstraints_$10

- (void)addTextSizeWithPythagorasFDimension:(PythagorasFDimension *)tsize
                    withPlaynCoreTextLayout:(id<PlaynCoreTextLayout>)layout
                    withPlaynCoreTextLayout:(id<PlaynCoreTextLayout>)tmplLayout {
  float lwidth = (layout == nil) ? 0 : [((id<PlaynCoreTextLayout>) NIL_CHK(layout)) width];
  float lheight = (layout == nil) ? 0 : [((id<PlaynCoreTextLayout>) NIL_CHK(layout)) height];
  ((PythagorasFDimension *) NIL_CHK(tsize)).width_ += [JavaLangMath maxWithFloat:lwidth withFloat:[((id<PlaynCoreTextLayout>) NIL_CHK(tmplLayout)) width]];
  ((PythagorasFDimension *) NIL_CHK(tsize)).height_ += [JavaLangMath maxWithFloat:lheight withFloat:[((id<PlaynCoreTextLayout>) NIL_CHK(tmplLayout)) height]];
}

- (id)initWithNSString:(NSString *)arg$0 {
  return [super initWithNSString:arg$0];
}

@end
@implementation TripleplayUiConstraints_$11

- (void)addTextSizeWithPythagorasFDimension:(PythagorasFDimension *)tsize
                    withPlaynCoreTextLayout:(id<PlaynCoreTextLayout>)layout
                    withPlaynCoreTextLayout:(id<PlaynCoreTextLayout>)tmplLayout {
  ((PythagorasFDimension *) NIL_CHK(tsize)).width_ += [((id<PlaynCoreTextLayout>) NIL_CHK(tmplLayout)) width];
  ((PythagorasFDimension *) NIL_CHK(tsize)).height_ += [((id<PlaynCoreTextLayout>) NIL_CHK(tmplLayout)) height];
}

- (id)initWithNSString:(NSString *)arg$0 {
  return [super initWithNSString:arg$0];
}

@end
