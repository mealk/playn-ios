//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Styles.java
//
//  Created by Thomas on 7/10/13.
//

#import "IOSClass.h"
#import "IOSIntArray.h"
#import "IOSObjectArray.h"
#import "java/lang/ClassCastException.h"
#import "java/lang/System.h"
#import "java/util/Arrays.h"
#import "playn/core/Asserts.h"
#import "tripleplay/ui/Element.h"
#import "tripleplay/ui/Elements.h"
#import "tripleplay/ui/Style.h"
#import "tripleplay/ui/Styles.h"
#import "tripleplay/ui/Stylesheet.h"

@implementation TripleplayUiStyles

static TripleplayUiStyles * TripleplayUiStyles__noneSingleton_;

@synthesize _bindings = _bindings_;

+ (TripleplayUiStyles *)_noneSingleton {
  return TripleplayUiStyles__noneSingleton_;
}

+ (TripleplayUiStyles *)none {
  return TripleplayUiStyles__noneSingleton_;
}

+ (TripleplayUiStyles *)makeWithTripleplayUiStyle_BindingArray:(IOSObjectArray *)bindings {
  return [[TripleplayUiStyles none] addWithTripleplayUiStyle_ModeEnum:[TripleplayUiStyle_ModeEnum DEFAULT] withTripleplayUiStyle_BindingArray:bindings];
}

- (TripleplayUiStyles *)addWithTripleplayUiStyle_BindingArray:(IOSObjectArray *)bindings {
  return [self addWithTripleplayUiStyle_ModeEnum:[TripleplayUiStyle_ModeEnum DEFAULT] withTripleplayUiStyle_BindingArray:bindings];
}

- (TripleplayUiStyles *)addDisabledWithTripleplayUiStyle_BindingArray:(IOSObjectArray *)bindings {
  return [self addWithTripleplayUiStyle_ModeEnum:[TripleplayUiStyle_ModeEnum DISABLED] withTripleplayUiStyle_BindingArray:bindings];
}

- (TripleplayUiStyles *)addSelectedWithTripleplayUiStyle_BindingArray:(IOSObjectArray *)bindings {
  return [self addWithTripleplayUiStyle_ModeEnum:[TripleplayUiStyle_ModeEnum SELECTED] withTripleplayUiStyle_BindingArray:bindings];
}

- (TripleplayUiStyles *)addDisabledSelectedWithTripleplayUiStyle_BindingArray:(IOSObjectArray *)bindings {
  return [self addWithTripleplayUiStyle_ModeEnum:[TripleplayUiStyle_ModeEnum DISABLED_SELECTED] withTripleplayUiStyle_BindingArray:bindings];
}

- (TripleplayUiStyles *)addWithTripleplayUiStyle_ModeEnum:(TripleplayUiStyle_ModeEnum *)mode
                       withTripleplayUiStyle_BindingArray:(IOSObjectArray *)bindings {
  if ((int) [((IOSObjectArray *) NIL_CHK(bindings)) count] == 0) return self;
  IOSObjectArray *nbindings = [[IOSObjectArray alloc] initWithLength:(int) [((IOSObjectArray *) NIL_CHK(bindings)) count] type:[IOSClass classWithClass:[TripleplayUiStyles_Binding class]]];
  for (int ii = 0; ii < (int) [((IOSObjectArray *) NIL_CHK(bindings)) count]; ii++) {
    [((IOSObjectArray *) NIL_CHK(nbindings)) replaceObjectAtIndex:ii withObject:((TripleplayUiStyles_Binding *) [TripleplayUiStyles newBindingWithTripleplayUiStyle_Binding:((TripleplayUiStyle_Binding *) [((IOSObjectArray *) NIL_CHK(bindings)) objectAtIndex:ii]) withTripleplayUiStyle_ModeEnum:mode])];
  }
  return [self mergeWithTripleplayUiStyles_BindingArray:nbindings];
}

- (TripleplayUiStyles *)clearWithTripleplayUiStyle_ModeEnum:(TripleplayUiStyle_ModeEnum *)mode
                                      withTripleplayUiStyle:(TripleplayUiStyle *)style {
  int index = [JavaUtilArrays binarySearchWithNSObjectArray:_bindings_ withId:[[TripleplayUiStyles_Binding alloc] initWithTripleplayUiStyle:style]];
  if (index < 0) return self;
  TripleplayUiStyles_Binding *binding = (TripleplayUiStyles_Binding *) ((TripleplayUiStyles_Binding *) [((IOSObjectArray *) NIL_CHK(_bindings_)) objectAtIndex:index]);
  IOSObjectArray *nbindings = [[IOSObjectArray alloc] initWithLength:(int) [((IOSObjectArray *) NIL_CHK(_bindings_)) count] type:[IOSClass classWithClass:[TripleplayUiStyles_Binding class]]];
  [JavaLangSystem arraycopyWithId:_bindings_ withInt:0 withId:nbindings withInt:0 withInt:(int) [((IOSObjectArray *) NIL_CHK(nbindings)) count]];
  [((IOSObjectArray *) NIL_CHK(nbindings)) replaceObjectAtIndex:index withObject:((TripleplayUiStyles_Binding *) [((TripleplayUiStyles_Binding *) NIL_CHK(binding)) clearWithTripleplayUiStyle_ModeEnum:mode])];
  return [[TripleplayUiStyles alloc] initWithTripleplayUiStyles_BindingArray:nbindings];
}

- (TripleplayUiStyles *)mergeWithTripleplayUiStyles:(TripleplayUiStyles *)styles {
  return [self mergeWithTripleplayUiStyles_BindingArray:((TripleplayUiStyles *) NIL_CHK(styles))._bindings];
}

- (id)getWithTripleplayUiStyles_Binding:(TripleplayUiStyles_Binding *)key
                withTripleplayUiElement:(TripleplayUiElement *)elem {
  int index = [JavaUtilArrays binarySearchWithNSObjectArray:_bindings_ withId:key];
  if (index < 0) return nil;
  TripleplayUiStyles_Binding *binding = (TripleplayUiStyles_Binding *) ((TripleplayUiStyles_Binding *) [((IOSObjectArray *) NIL_CHK(_bindings_)) objectAtIndex:index]);
  return [((TripleplayUiStyles_Binding *) NIL_CHK(binding)) getWithTripleplayUiElement:elem];
}

- (TripleplayUiStyles *)mergeWithTripleplayUiStyles_BindingArray:(IOSObjectArray *)obindings {
  if ((int) [((IOSObjectArray *) NIL_CHK(obindings)) count] == 0) return self;
  IOSIntArray *dupidx = [[IOSIntArray alloc] initWithLength:(int) [((IOSObjectArray *) NIL_CHK(obindings)) count]];
  int dups = 0;
  for (int ii = 0; ii < (int) [((IOSObjectArray *) NIL_CHK(obindings)) count]; ii++) {
    int idx = [JavaUtilArrays binarySearchWithNSObjectArray:_bindings_ withId:((TripleplayUiStyles_Binding *) [((IOSObjectArray *) NIL_CHK(obindings)) objectAtIndex:ii])];
    if (idx >= 0) dups++;
    [((IOSIntArray *) NIL_CHK(dupidx)) replaceIntAtIndex:ii withInt:idx];
  }
  IOSObjectArray *nbindings = [[IOSObjectArray alloc] initWithLength:(int) [((IOSObjectArray *) NIL_CHK(_bindings_)) count] + (int) [((IOSObjectArray *) NIL_CHK(obindings)) count] - dups type:[IOSClass classWithClass:[TripleplayUiStyles_Binding class]]];
  [JavaLangSystem arraycopyWithId:_bindings_ withInt:0 withId:nbindings withInt:0 withInt:(int) [((IOSObjectArray *) NIL_CHK(_bindings_)) count]];
  int idx = (int) [((IOSObjectArray *) NIL_CHK(_bindings_)) count];
  for (int ii = 0; ii < (int) [((IOSObjectArray *) NIL_CHK(obindings)) count]; ii++) {
    int didx = [((IOSIntArray *) NIL_CHK(dupidx)) intAtIndex:ii];
    if (didx >= 0) {
      TripleplayUiStyles_Binding *nb = (TripleplayUiStyles_Binding *) ((TripleplayUiStyles_Binding *) [((IOSObjectArray *) NIL_CHK(nbindings)) objectAtIndex:didx]), *ob = (TripleplayUiStyles_Binding *) ((TripleplayUiStyles_Binding *) [((IOSObjectArray *) NIL_CHK(obindings)) objectAtIndex:ii]);
      [((IOSObjectArray *) NIL_CHK(nbindings)) replaceObjectAtIndex:didx withObject:((TripleplayUiStyles_Binding *) [((TripleplayUiStyles_Binding *) NIL_CHK(nb)) mergeWithTripleplayUiStyles_Binding:ob])];
    }
    else [((IOSObjectArray *) NIL_CHK(nbindings)) replaceObjectAtIndex:idx++ withObject:((TripleplayUiStyles_Binding *) [((IOSObjectArray *) NIL_CHK(obindings)) objectAtIndex:ii])];
  }
  [JavaUtilArrays sortWithNSObjectArray:nbindings];
  return [[TripleplayUiStyles alloc] initWithTripleplayUiStyles_BindingArray:nbindings];
}

- (id)initWithTripleplayUiStyles_BindingArray:(IOSObjectArray *)bindings {
  if ((self = [super init])) {
    _bindings_ = bindings;
  }
  return self;
}

+ (id)resolveStyleWithTripleplayUiElement:(TripleplayUiElement *)element
                    withTripleplayUiStyle:(TripleplayUiStyle *)style {
  TripleplayUiStyles_Binding *key = [[TripleplayUiStyles_Binding alloc] initWithTripleplayUiStyle:style];
  id value = [[((TripleplayUiElement *) NIL_CHK(element)) styles] getWithTripleplayUiStyles_Binding:key withTripleplayUiElement:element];
  if (value != nil) return value;
  TripleplayUiElements *group = ([element isKindOfClass:[TripleplayUiElements class]]) ? (TripleplayUiElements *) element : [((TripleplayUiElement *) NIL_CHK(element)) parent];
  for (; group != nil; group = [((TripleplayUiElements *) NIL_CHK(group)) parent]) {
    TripleplayUiStylesheet *sheet = [((TripleplayUiElements *) NIL_CHK(group)) stylesheet];
    if (sheet == nil) continue;
    value = [((TripleplayUiStylesheet *) NIL_CHK(sheet)) getWithTripleplayUiStyles_Binding:key withIOSClass:[((TripleplayUiElement *) NIL_CHK(element)) getStyleClass] withTripleplayUiElement:element];
    if (value != nil) return value;
  }
  return [((TripleplayUiStyle *) NIL_CHK(style)) getDefaultWithTripleplayUiElement:element];
}

+ (TripleplayUiStyles_Binding *)newBindingWithTripleplayUiStyle_Binding:(TripleplayUiStyle_Binding *)binding
                                         withTripleplayUiStyle_ModeEnum:(TripleplayUiStyle_ModeEnum *)mode OBJC_METHOD_FAMILY_NONE {
  return [[TripleplayUiStyles_Binding alloc] initWithTripleplayUiStyle_Binding:binding withTripleplayUiStyle_ModeEnum:mode];
}

+ (void)initialize {
  if (self == [TripleplayUiStyles class]) {
    TripleplayUiStyles__noneSingleton_ = [[TripleplayUiStyles alloc] initWithTripleplayUiStyles_BindingArray:[[IOSObjectArray alloc] initWithLength:0 type:[IOSClass classWithClass:[TripleplayUiStyles_Binding class]]]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyles *typedCopy = (TripleplayUiStyles *) copy;
  typedCopy._bindings = _bindings_;
}

@end
@implementation TripleplayUiStyles_Binding

@synthesize style = style_;
@synthesize _defaultV = _defaultV_;
@synthesize _disabledV = _disabledV_;
@synthesize _selectedV = _selectedV_;
@synthesize _disSelectedV = _disSelectedV_;

- (id)initTripleplayUiStyles_BindingWithTripleplayUiStyle:(TripleplayUiStyle *)style {
  if ((self = [super init])) {
    self.style = style;
  }
  return self;
}

- (id)initWithTripleplayUiStyle:(TripleplayUiStyle *)style {
  return [self initTripleplayUiStyles_BindingWithTripleplayUiStyle:style];
}

- (id)initWithTripleplayUiStyle_Binding:(TripleplayUiStyle_Binding *)binding
         withTripleplayUiStyle_ModeEnum:(TripleplayUiStyle_ModeEnum *)mode {
  if ((self = [self initTripleplayUiStyles_BindingWithTripleplayUiStyle:((TripleplayUiStyle_Binding *) NIL_CHK(binding)).style])) {
    switch ([mode ordinal]) {
      case TripleplayUiStyle_Mode_DEFAULT:
      _defaultV_ = ((TripleplayUiStyle_Binding *) NIL_CHK(binding)).value;
      break;
      case TripleplayUiStyle_Mode_DISABLED:
      _disabledV_ = ((TripleplayUiStyle_Binding *) NIL_CHK(binding)).value;
      break;
      case TripleplayUiStyle_Mode_SELECTED:
      _selectedV_ = ((TripleplayUiStyle_Binding *) NIL_CHK(binding)).value;
      break;
      case TripleplayUiStyle_Mode_DISABLED_SELECTED:
      _disSelectedV_ = ((TripleplayUiStyle_Binding *) NIL_CHK(binding)).value;
      break;
    }
  }
  return self;
}

- (id)initWithTripleplayUiStyle:(TripleplayUiStyle *)style
                         withId:(id)defaultV
                         withId:(id)disabledV
                         withId:(id)selectedV
                         withId:(id)disSelectedV {
  if ((self = [self initTripleplayUiStyles_BindingWithTripleplayUiStyle:style])) {
    _defaultV_ = defaultV;
    _disabledV_ = disabledV;
    _selectedV_ = selectedV;
    _disSelectedV_ = disSelectedV;
  }
  return self;
}

- (id)getWithTripleplayUiElement:(TripleplayUiElement *)elem {
  if ([((TripleplayUiElement *) NIL_CHK(elem)) isEnabled]) {
    if ([((TripleplayUiElement *) NIL_CHK(elem)) isSelected] && _selectedV_ != nil) return _selectedV_;
  }
  else {
    if ([((TripleplayUiElement *) NIL_CHK(elem)) isSelected] && _disSelectedV_ != nil) return _disSelectedV_;
    if (_disabledV_ != nil) return _disabledV_;
  }
  return _defaultV_;
}

- (TripleplayUiStyles_Binding *)mergeWithTripleplayUiStyles_Binding:(TripleplayUiStyles_Binding *)other {
  return [[TripleplayUiStyles_Binding alloc] initWithTripleplayUiStyle:style_ withId:[self mergeWithId:_defaultV_ withId:((TripleplayUiStyles_Binding *) NIL_CHK(other))._defaultV] withId:[self mergeWithId:_disabledV_ withId:((TripleplayUiStyles_Binding *) NIL_CHK(other))._disabledV] withId:[self mergeWithId:_selectedV_ withId:((TripleplayUiStyles_Binding *) NIL_CHK(other))._selectedV] withId:[self mergeWithId:_disSelectedV_ withId:((TripleplayUiStyles_Binding *) NIL_CHK(other))._disSelectedV]];
}

- (TripleplayUiStyles_Binding *)clearWithTripleplayUiStyle_ModeEnum:(TripleplayUiStyle_ModeEnum *)mode {
  switch ([mode ordinal]) {
    case TripleplayUiStyle_Mode_DEFAULT:
    return [[TripleplayUiStyles_Binding alloc] initWithTripleplayUiStyle:style_ withId:nil withId:_disabledV_ withId:_selectedV_ withId:_disSelectedV_];
    case TripleplayUiStyle_Mode_DISABLED:
    return [[TripleplayUiStyles_Binding alloc] initWithTripleplayUiStyle:style_ withId:_defaultV_ withId:nil withId:_selectedV_ withId:_disSelectedV_];
    case TripleplayUiStyle_Mode_SELECTED:
    return [[TripleplayUiStyles_Binding alloc] initWithTripleplayUiStyle:style_ withId:_defaultV_ withId:_disabledV_ withId:nil withId:_disSelectedV_];
    case TripleplayUiStyle_Mode_DISABLED_SELECTED:
    return [[TripleplayUiStyles_Binding alloc] initWithTripleplayUiStyle:style_ withId:_defaultV_ withId:_disabledV_ withId:_selectedV_ withId:nil];
    default:
    return self;
  }
}

- (int)compareToWithId:(TripleplayUiStyles_Binding *)other {
  if (other != nil && ![other isKindOfClass:[TripleplayUiStyles_Binding class]]) {
    @throw [[JavaLangClassCastException alloc] init];
  }
  if (self.style == ((TripleplayUiStyles_Binding *) NIL_CHK(other)).style) return 0;
  int hc = [((TripleplayUiStyle *) NIL_CHK(self.style)) hash], ohc = [((TripleplayUiStyle *) NIL_CHK(other.style)) hash];
  [PlaynCoreAsserts checkStateWithBOOL:hc != ohc];
  return (hc < ohc) ? -1 : 1;
}

- (id)mergeWithId:(id)ours
           withId:(id)theirs {
  return (theirs == nil) ? ours : theirs;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyles_Binding *typedCopy = (TripleplayUiStyles_Binding *) copy;
  typedCopy.style = style_;
  typedCopy._defaultV = _defaultV_;
  typedCopy._disabledV = _disabledV_;
  typedCopy._selectedV = _selectedV_;
  typedCopy._disSelectedV = _disSelectedV_;
}

@end
