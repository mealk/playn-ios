//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Style.java
//
//  Created by Thomas on 7/10/13.
//

#import "java/lang/Boolean.h"
#import "java/lang/Float.h"
#import "java/lang/IllegalArgumentException.h"
#import "java/lang/Integer.h"
#import "playn/core/Canvas.h"
#import "playn/core/Font.h"
#import "playn/core/Graphics.h"
#import "playn/core/PlayN.h"
#import "playn/core/Sound.h"
#import "playn/core/TextFormat.h"
#import "tripleplay/ui/Background.h"
#import "tripleplay/ui/Element.h"
#import "tripleplay/ui/Style.h"
#import "tripleplay/ui/Styles.h"
#import "tripleplay/util/EffectRenderer.h"


static TripleplayUiStyle_ModeEnum *TripleplayUiStyle_ModeEnum_DEFAULT;
static TripleplayUiStyle_ModeEnum *TripleplayUiStyle_ModeEnum_DISABLED;
static TripleplayUiStyle_ModeEnum *TripleplayUiStyle_ModeEnum_SELECTED;
static TripleplayUiStyle_ModeEnum *TripleplayUiStyle_ModeEnum_DISABLED_SELECTED;
IOSObjectArray *TripleplayUiStyle_ModeEnum_values;

@implementation TripleplayUiStyle_ModeEnum

+ (TripleplayUiStyle_ModeEnum *)DEFAULT {
  return TripleplayUiStyle_ModeEnum_DEFAULT;
}
+ (TripleplayUiStyle_ModeEnum *)DISABLED {
  return TripleplayUiStyle_ModeEnum_DISABLED;
}
+ (TripleplayUiStyle_ModeEnum *)SELECTED {
  return TripleplayUiStyle_ModeEnum_SELECTED;
}
+ (TripleplayUiStyle_ModeEnum *)DISABLED_SELECTED {
  return TripleplayUiStyle_ModeEnum_DISABLED_SELECTED;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [TripleplayUiStyle_ModeEnum class]) {
    TripleplayUiStyle_ModeEnum_DEFAULT = [[TripleplayUiStyle_ModeEnum alloc] initWithNSString:@"DEFAULT" withInt:0];
    TripleplayUiStyle_ModeEnum_DISABLED = [[TripleplayUiStyle_ModeEnum alloc] initWithNSString:@"DISABLED" withInt:1];
    TripleplayUiStyle_ModeEnum_SELECTED = [[TripleplayUiStyle_ModeEnum alloc] initWithNSString:@"SELECTED" withInt:2];
    TripleplayUiStyle_ModeEnum_DISABLED_SELECTED = [[TripleplayUiStyle_ModeEnum alloc] initWithNSString:@"DISABLED_SELECTED" withInt:3];
    TripleplayUiStyle_ModeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ TripleplayUiStyle_ModeEnum_DEFAULT, TripleplayUiStyle_ModeEnum_DISABLED, TripleplayUiStyle_ModeEnum_SELECTED, TripleplayUiStyle_ModeEnum_DISABLED_SELECTED, nil } count:4 type:[IOSClass classWithClass:[TripleplayUiStyle_ModeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:TripleplayUiStyle_ModeEnum_values];
}

+ (TripleplayUiStyle_ModeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [TripleplayUiStyle_ModeEnum_values count]; i++) {
    TripleplayUiStyle_ModeEnum *e = [TripleplayUiStyle_ModeEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
@implementation TripleplayUiStyle_Binding

@synthesize style = style_;
@synthesize value = value_;

- (id)initWithTripleplayUiStyle:(TripleplayUiStyle *)style
                         withId:(id)value {
  if ((self = [super init])) {
    self.style = style;
    self.value = value;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyle_Binding *typedCopy = (TripleplayUiStyle_Binding *) copy;
  typedCopy.style = style_;
  typedCopy.value = value_;
}

@end

static TripleplayUiStyle_HAlignEnum *TripleplayUiStyle_HAlignEnum_LEFT;
static TripleplayUiStyle_HAlignEnum *TripleplayUiStyle_HAlignEnum_RIGHT;
static TripleplayUiStyle_HAlignEnum *TripleplayUiStyle_HAlignEnum_CENTER;
IOSObjectArray *TripleplayUiStyle_HAlignEnum_values;

@implementation TripleplayUiStyle_HAlignEnum

+ (TripleplayUiStyle_HAlignEnum *)LEFT {
  return TripleplayUiStyle_HAlignEnum_LEFT;
}
+ (TripleplayUiStyle_HAlignEnum *)RIGHT {
  return TripleplayUiStyle_HAlignEnum_RIGHT;
}
+ (TripleplayUiStyle_HAlignEnum *)CENTER {
  return TripleplayUiStyle_HAlignEnum_CENTER;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (float)offsetWithFloat:(float)size
               withFloat:(float)extent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [TripleplayUiStyle_HAlignEnum class]) {
    TripleplayUiStyle_HAlignEnum_LEFT = [[TripleplayUiStyle_HAlignEnum_$1 alloc] initWithNSString:@"TripleplayUiStyle_HAlign_LEFT" withInt:0];
    TripleplayUiStyle_HAlignEnum_RIGHT = [[TripleplayUiStyle_HAlignEnum_$2 alloc] initWithNSString:@"TripleplayUiStyle_HAlign_RIGHT" withInt:1];
    TripleplayUiStyle_HAlignEnum_CENTER = [[TripleplayUiStyle_HAlignEnum_$3 alloc] initWithNSString:@"TripleplayUiStyle_HAlign_CENTER" withInt:2];
    TripleplayUiStyle_HAlignEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ TripleplayUiStyle_HAlignEnum_LEFT, TripleplayUiStyle_HAlignEnum_RIGHT, TripleplayUiStyle_HAlignEnum_CENTER, nil } count:3 type:[IOSClass classWithClass:[TripleplayUiStyle_HAlignEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:TripleplayUiStyle_HAlignEnum_values];
}

+ (TripleplayUiStyle_HAlignEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [TripleplayUiStyle_HAlignEnum_values count]; i++) {
    TripleplayUiStyle_HAlignEnum *e = [TripleplayUiStyle_HAlignEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
@implementation TripleplayUiStyle_HAlignEnum_$1

- (float)offsetWithFloat:(float)size
               withFloat:(float)extent {
  return 0;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

@end
@implementation TripleplayUiStyle_HAlignEnum_$2

- (float)offsetWithFloat:(float)size
               withFloat:(float)extent {
  return (extent - size);
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

@end
@implementation TripleplayUiStyle_HAlignEnum_$3

- (float)offsetWithFloat:(float)size
               withFloat:(float)extent {
  return (extent - size) / 2;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

@end

static TripleplayUiStyle_VAlignEnum *TripleplayUiStyle_VAlignEnum_TOP;
static TripleplayUiStyle_VAlignEnum *TripleplayUiStyle_VAlignEnum_BOTTOM;
static TripleplayUiStyle_VAlignEnum *TripleplayUiStyle_VAlignEnum_CENTER;
IOSObjectArray *TripleplayUiStyle_VAlignEnum_values;

@implementation TripleplayUiStyle_VAlignEnum

+ (TripleplayUiStyle_VAlignEnum *)TOP {
  return TripleplayUiStyle_VAlignEnum_TOP;
}
+ (TripleplayUiStyle_VAlignEnum *)BOTTOM {
  return TripleplayUiStyle_VAlignEnum_BOTTOM;
}
+ (TripleplayUiStyle_VAlignEnum *)CENTER {
  return TripleplayUiStyle_VAlignEnum_CENTER;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (float)offsetWithFloat:(float)size
               withFloat:(float)extent {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [TripleplayUiStyle_VAlignEnum class]) {
    TripleplayUiStyle_VAlignEnum_TOP = [[TripleplayUiStyle_VAlignEnum_$1 alloc] initWithNSString:@"TripleplayUiStyle_VAlign_TOP" withInt:0];
    TripleplayUiStyle_VAlignEnum_BOTTOM = [[TripleplayUiStyle_VAlignEnum_$2 alloc] initWithNSString:@"TripleplayUiStyle_VAlign_BOTTOM" withInt:1];
    TripleplayUiStyle_VAlignEnum_CENTER = [[TripleplayUiStyle_VAlignEnum_$3 alloc] initWithNSString:@"TripleplayUiStyle_VAlign_CENTER" withInt:2];
    TripleplayUiStyle_VAlignEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ TripleplayUiStyle_VAlignEnum_TOP, TripleplayUiStyle_VAlignEnum_BOTTOM, TripleplayUiStyle_VAlignEnum_CENTER, nil } count:3 type:[IOSClass classWithClass:[TripleplayUiStyle_VAlignEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:TripleplayUiStyle_VAlignEnum_values];
}

+ (TripleplayUiStyle_VAlignEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [TripleplayUiStyle_VAlignEnum_values count]; i++) {
    TripleplayUiStyle_VAlignEnum *e = [TripleplayUiStyle_VAlignEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
@implementation TripleplayUiStyle_VAlignEnum_$1

- (float)offsetWithFloat:(float)size
               withFloat:(float)extent {
  return 0;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

@end
@implementation TripleplayUiStyle_VAlignEnum_$2

- (float)offsetWithFloat:(float)size
               withFloat:(float)extent {
  return (extent - size);
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

@end
@implementation TripleplayUiStyle_VAlignEnum_$3

- (float)offsetWithFloat:(float)size
               withFloat:(float)extent {
  return (extent - size) / 2;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

@end

static TripleplayUiStyle_PosEnum *TripleplayUiStyle_PosEnum_LEFT;
static TripleplayUiStyle_PosEnum *TripleplayUiStyle_PosEnum_ABOVE;
static TripleplayUiStyle_PosEnum *TripleplayUiStyle_PosEnum_RIGHT;
static TripleplayUiStyle_PosEnum *TripleplayUiStyle_PosEnum_BELOW;
IOSObjectArray *TripleplayUiStyle_PosEnum_values;

@implementation TripleplayUiStyle_PosEnum

+ (TripleplayUiStyle_PosEnum *)LEFT {
  return TripleplayUiStyle_PosEnum_LEFT;
}
+ (TripleplayUiStyle_PosEnum *)ABOVE {
  return TripleplayUiStyle_PosEnum_ABOVE;
}
+ (TripleplayUiStyle_PosEnum *)RIGHT {
  return TripleplayUiStyle_PosEnum_RIGHT;
}
+ (TripleplayUiStyle_PosEnum *)BELOW {
  return TripleplayUiStyle_PosEnum_BELOW;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [TripleplayUiStyle_PosEnum class]) {
    TripleplayUiStyle_PosEnum_LEFT = [[TripleplayUiStyle_PosEnum alloc] initWithNSString:@"LEFT" withInt:0];
    TripleplayUiStyle_PosEnum_ABOVE = [[TripleplayUiStyle_PosEnum alloc] initWithNSString:@"ABOVE" withInt:1];
    TripleplayUiStyle_PosEnum_RIGHT = [[TripleplayUiStyle_PosEnum alloc] initWithNSString:@"RIGHT" withInt:2];
    TripleplayUiStyle_PosEnum_BELOW = [[TripleplayUiStyle_PosEnum alloc] initWithNSString:@"BELOW" withInt:3];
    TripleplayUiStyle_PosEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ TripleplayUiStyle_PosEnum_LEFT, TripleplayUiStyle_PosEnum_ABOVE, TripleplayUiStyle_PosEnum_RIGHT, TripleplayUiStyle_PosEnum_BELOW, nil } count:4 type:[IOSClass classWithClass:[TripleplayUiStyle_PosEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:TripleplayUiStyle_PosEnum_values];
}

+ (TripleplayUiStyle_PosEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [TripleplayUiStyle_PosEnum_values count]; i++) {
    TripleplayUiStyle_PosEnum *e = [TripleplayUiStyle_PosEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end

static TripleplayUiStyle_TextEffectEnum *TripleplayUiStyle_TextEffectEnum_PIXEL_OUTLINE;
static TripleplayUiStyle_TextEffectEnum *TripleplayUiStyle_TextEffectEnum_VECTOR_OUTLINE;
static TripleplayUiStyle_TextEffectEnum *TripleplayUiStyle_TextEffectEnum_SHADOW;
static TripleplayUiStyle_TextEffectEnum *TripleplayUiStyle_TextEffectEnum_NONE;
IOSObjectArray *TripleplayUiStyle_TextEffectEnum_values;

@implementation TripleplayUiStyle_TextEffectEnum

+ (TripleplayUiStyle_TextEffectEnum *)PIXEL_OUTLINE {
  return TripleplayUiStyle_TextEffectEnum_PIXEL_OUTLINE;
}
+ (TripleplayUiStyle_TextEffectEnum *)VECTOR_OUTLINE {
  return TripleplayUiStyle_TextEffectEnum_VECTOR_OUTLINE;
}
+ (TripleplayUiStyle_TextEffectEnum *)SHADOW {
  return TripleplayUiStyle_TextEffectEnum_SHADOW;
}
+ (TripleplayUiStyle_TextEffectEnum *)NONE {
  return TripleplayUiStyle_TextEffectEnum_NONE;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [TripleplayUiStyle_TextEffectEnum class]) {
    TripleplayUiStyle_TextEffectEnum_PIXEL_OUTLINE = [[TripleplayUiStyle_TextEffectEnum alloc] initWithNSString:@"PIXEL_OUTLINE" withInt:0];
    TripleplayUiStyle_TextEffectEnum_VECTOR_OUTLINE = [[TripleplayUiStyle_TextEffectEnum alloc] initWithNSString:@"VECTOR_OUTLINE" withInt:1];
    TripleplayUiStyle_TextEffectEnum_SHADOW = [[TripleplayUiStyle_TextEffectEnum alloc] initWithNSString:@"SHADOW" withInt:2];
    TripleplayUiStyle_TextEffectEnum_NONE = [[TripleplayUiStyle_TextEffectEnum alloc] initWithNSString:@"NONE" withInt:3];
    TripleplayUiStyle_TextEffectEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ TripleplayUiStyle_TextEffectEnum_PIXEL_OUTLINE, TripleplayUiStyle_TextEffectEnum_VECTOR_OUTLINE, TripleplayUiStyle_TextEffectEnum_SHADOW, TripleplayUiStyle_TextEffectEnum_NONE, nil } count:4 type:[IOSClass classWithClass:[TripleplayUiStyle_TextEffectEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:TripleplayUiStyle_TextEffectEnum_values];
}

+ (TripleplayUiStyle_TextEffectEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [TripleplayUiStyle_TextEffectEnum_values count]; i++) {
    TripleplayUiStyle_TextEffectEnum *e = [TripleplayUiStyle_TextEffectEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
@implementation TripleplayUiStyle

static TripleplayUiStyle * TripleplayUiStyle_COLOR_;
static TripleplayUiStyle * TripleplayUiStyle_HIGHLIGHT_;
static TripleplayUiStyle * TripleplayUiStyle_SHADOW_;
static TripleplayUiStyle * TripleplayUiStyle_SHADOW_X_;
static TripleplayUiStyle * TripleplayUiStyle_SHADOW_Y_;
static TripleplayUiStyle * TripleplayUiStyle_OUTLINE_WIDTH_;
static TripleplayUiStyle * TripleplayUiStyle_OUTLINE_CAP_;
static TripleplayUiStyle * TripleplayUiStyle_OUTLINE_JOIN_;
static TripleplayUiStyle_HAlignStyle * TripleplayUiStyle_HALIGN_;
static TripleplayUiStyle_VAlignStyle * TripleplayUiStyle_VALIGN_;
static TripleplayUiStyle * TripleplayUiStyle_FONT_;
static TripleplayUiStyle_Flag * TripleplayUiStyle_TEXT_WRAP_;
static TripleplayUiStyle_TextEffectStyle * TripleplayUiStyle_TEXT_EFFECT_;
static TripleplayUiStyle_Flag * TripleplayUiStyle_UNDERLINE_;
static TripleplayUiStyle * TripleplayUiStyle_BACKGROUND_;
static TripleplayUiStyle_PosStyle * TripleplayUiStyle_ICON_POS_;
static TripleplayUiStyle * TripleplayUiStyle_ICON_GAP_;
static TripleplayUiStyle_Flag * TripleplayUiStyle_ICON_CUDDLE_;
static TripleplayUiStyle * TripleplayUiStyle_ACTION_SOUND_;

@synthesize inherited = inherited_;

+ (TripleplayUiStyle *)COLOR {
  return TripleplayUiStyle_COLOR_;
}

+ (TripleplayUiStyle *)HIGHLIGHT {
  return TripleplayUiStyle_HIGHLIGHT_;
}

+ (TripleplayUiStyle *)SHADOW {
  return TripleplayUiStyle_SHADOW_;
}

+ (TripleplayUiStyle *)SHADOW_X {
  return TripleplayUiStyle_SHADOW_X_;
}

+ (TripleplayUiStyle *)SHADOW_Y {
  return TripleplayUiStyle_SHADOW_Y_;
}

+ (TripleplayUiStyle *)OUTLINE_WIDTH {
  return TripleplayUiStyle_OUTLINE_WIDTH_;
}

+ (TripleplayUiStyle *)OUTLINE_CAP {
  return TripleplayUiStyle_OUTLINE_CAP_;
}

+ (TripleplayUiStyle *)OUTLINE_JOIN {
  return TripleplayUiStyle_OUTLINE_JOIN_;
}

+ (TripleplayUiStyle_HAlignStyle *)HALIGN {
  return TripleplayUiStyle_HALIGN_;
}

+ (TripleplayUiStyle_VAlignStyle *)VALIGN {
  return TripleplayUiStyle_VALIGN_;
}

+ (TripleplayUiStyle *)FONT {
  return TripleplayUiStyle_FONT_;
}

+ (TripleplayUiStyle_Flag *)TEXT_WRAP {
  return TripleplayUiStyle_TEXT_WRAP_;
}

+ (TripleplayUiStyle_TextEffectStyle *)TEXT_EFFECT {
  return TripleplayUiStyle_TEXT_EFFECT_;
}

+ (TripleplayUiStyle_Flag *)UNDERLINE {
  return TripleplayUiStyle_UNDERLINE_;
}

+ (TripleplayUiStyle *)BACKGROUND {
  return TripleplayUiStyle_BACKGROUND_;
}

+ (TripleplayUiStyle_PosStyle *)ICON_POS {
  return TripleplayUiStyle_ICON_POS_;
}

+ (TripleplayUiStyle *)ICON_GAP {
  return TripleplayUiStyle_ICON_GAP_;
}

+ (TripleplayUiStyle_Flag *)ICON_CUDDLE {
  return TripleplayUiStyle_ICON_CUDDLE_;
}

+ (TripleplayUiStyle *)ACTION_SOUND {
  return TripleplayUiStyle_ACTION_SOUND_;
}

+ (PlaynCoreTextFormat *)createTextFormatWithTripleplayUiElement:(TripleplayUiElement *)elem {
  PlaynCoreTextFormat *format = [[((PlaynCoreTextFormat *) [[PlaynCoreTextFormat alloc] init]) withFontWithPlaynCoreFont:((id<PlaynCoreFont>) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_FONT_])] withAlignmentWithPlaynCoreTextFormat_AlignmentEnum:[TripleplayUiStyle toAlignmentWithTripleplayUiStyle_HAlignEnum:((TripleplayUiStyle_HAlignEnum *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_HALIGN_])]];
  return format;
}

+ (TripleplayUtilEffectRenderer *)createEffectRendererWithTripleplayUiElement:(TripleplayUiElement *)elem {
  switch ([[TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_TEXT_EFFECT_] ordinal]) {
    case TripleplayUiStyle_TextEffect_PIXEL_OUTLINE:
    return [[TripleplayUtilEffectRenderer_PixelOutline alloc] initWithInt:[((JavaLangInteger *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_HIGHLIGHT_]) intValue]];
    case TripleplayUiStyle_TextEffect_VECTOR_OUTLINE:
    return [[TripleplayUtilEffectRenderer_VectorOutline alloc] initWithInt:[((JavaLangInteger *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_HIGHLIGHT_]) intValue] withFloat:[((JavaLangFloat *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_OUTLINE_WIDTH_]) floatValue] withPlaynCoreCanvas_LineCapEnum:((PlaynCoreCanvas_LineCapEnum *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_OUTLINE_CAP_]) withPlaynCoreCanvas_LineJoinEnum:((PlaynCoreCanvas_LineJoinEnum *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_OUTLINE_JOIN_])];
    case TripleplayUiStyle_TextEffect_SHADOW:
    return [[TripleplayUtilEffectRenderer_Shadow alloc] initWithInt:[((JavaLangInteger *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_SHADOW_]) intValue] withFloat:[((JavaLangFloat *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_SHADOW_X_]) floatValue] withFloat:[((JavaLangFloat *) [TripleplayUiStyles resolveStyleWithTripleplayUiElement:elem withTripleplayUiStyle:TripleplayUiStyle_SHADOW_Y_]) floatValue]];
    default:
    return [TripleplayUtilEffectRenderer NONE];
  }
}

- (id)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)mode {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (TripleplayUiStyle_Binding *)isWithId:(id)value {
  return [[TripleplayUiStyle_Binding alloc] initWithTripleplayUiStyle:self withId:value];
}

+ (TripleplayUiStyle *)newStyleWithBOOL:(BOOL)inherited
                                 withId:(id)defaultValue OBJC_METHOD_FAMILY_NONE {
  return [[TripleplayUiStyle_$3 alloc] initWithBOOL:inherited withId:defaultValue];
}

+ (TripleplayUiStyle_Flag *)newFlagWithBOOL:(BOOL)inherited
                                   withBOOL:(BOOL)defaultValue OBJC_METHOD_FAMILY_NONE {
  return [[TripleplayUiStyle_Flag alloc] initWithBOOL:inherited withBOOL:defaultValue];
}

- (id)initWithBOOL:(BOOL)inherited {
  if ((self = [super init])) {
    self.inherited = inherited;
  }
  return self;
}

+ (PlaynCoreTextFormat_AlignmentEnum *)toAlignmentWithTripleplayUiStyle_HAlignEnum:(TripleplayUiStyle_HAlignEnum *)align {
  switch ([align ordinal]) {
    default:
    case TripleplayUiStyle_HAlign_LEFT:
    return [PlaynCoreTextFormat_AlignmentEnum LEFT];
    case TripleplayUiStyle_HAlign_RIGHT:
    return [PlaynCoreTextFormat_AlignmentEnum RIGHT];
    case TripleplayUiStyle_HAlign_CENTER:
    return [PlaynCoreTextFormat_AlignmentEnum CENTER];
  }
}

+ (void)initialize {
  if (self == [TripleplayUiStyle class]) {
    TripleplayUiStyle_COLOR_ = [[TripleplayUiStyle_$1 alloc] initWithBOOL:YES];
    TripleplayUiStyle_HIGHLIGHT_ = [[TripleplayUiStyle_$2 alloc] initWithBOOL:YES];
    TripleplayUiStyle_SHADOW_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:YES withId:[JavaLangInteger valueOfWithInt:(int) 0x55000000]]);
    TripleplayUiStyle_SHADOW_X_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:YES withId:[JavaLangFloat valueOfWithFloat:2.0f]]);
    TripleplayUiStyle_SHADOW_Y_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:YES withId:[JavaLangFloat valueOfWithFloat:2.0f]]);
    TripleplayUiStyle_OUTLINE_WIDTH_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:YES withId:[JavaLangFloat valueOfWithFloat:1.0f]]);
    TripleplayUiStyle_OUTLINE_CAP_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:YES withId:[PlaynCoreCanvas_LineCapEnum ROUND]]);
    TripleplayUiStyle_OUTLINE_JOIN_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:YES withId:[PlaynCoreCanvas_LineJoinEnum ROUND]]);
    TripleplayUiStyle_HALIGN_ = [[TripleplayUiStyle_HAlignStyle alloc] init];
    TripleplayUiStyle_VALIGN_ = [[TripleplayUiStyle_VAlignStyle alloc] init];
    TripleplayUiStyle_FONT_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:YES withId:[((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) createFontWithNSString:@"Helvetica" withPlaynCoreFont_StyleEnum:[PlaynCoreFont_StyleEnum PLAIN] withFloat:16]]);
    TripleplayUiStyle_TEXT_WRAP_ = [TripleplayUiStyle newFlagWithBOOL:NO withBOOL:NO];
    TripleplayUiStyle_TEXT_EFFECT_ = [[TripleplayUiStyle_TextEffectStyle alloc] init];
    TripleplayUiStyle_UNDERLINE_ = [TripleplayUiStyle newFlagWithBOOL:YES withBOOL:NO];
    TripleplayUiStyle_BACKGROUND_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:NO withId:[TripleplayUiBackground blank]]);
    TripleplayUiStyle_ICON_POS_ = [[TripleplayUiStyle_PosStyle alloc] init];
    TripleplayUiStyle_ICON_GAP_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:NO withId:[JavaLangInteger valueOfWithInt:2]]);
    TripleplayUiStyle_ICON_CUDDLE_ = [TripleplayUiStyle newFlagWithBOOL:NO withBOOL:NO];
    TripleplayUiStyle_ACTION_SOUND_ = ((TripleplayUiStyle *) [TripleplayUiStyle newStyleWithBOOL:NO withId:(id<PlaynCoreSound>) nil]);
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyle *typedCopy = (TripleplayUiStyle *) copy;
  typedCopy.inherited = inherited_;
}

@end
@implementation TripleplayUiStyle_HAlignStyle

@synthesize left = left_;
@synthesize right = right_;
@synthesize center = center_;

- (TripleplayUiStyle_HAlignEnum *)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)elem {
  return [TripleplayUiStyle_HAlignEnum CENTER];
}

- (id)init {
  if ((self = [super initWithBOOL:NO])) {
    left_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_HAlignEnum LEFT]]);
    right_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_HAlignEnum RIGHT]]);
    center_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_HAlignEnum CENTER]]);
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyle_HAlignStyle *typedCopy = (TripleplayUiStyle_HAlignStyle *) copy;
  typedCopy.left = left_;
  typedCopy.right = right_;
  typedCopy.center = center_;
}

@end
@implementation TripleplayUiStyle_VAlignStyle

@synthesize top = top_;
@synthesize bottom = bottom_;
@synthesize center = center_;

- (TripleplayUiStyle_VAlignEnum *)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)elem {
  return [TripleplayUiStyle_VAlignEnum CENTER];
}

- (id)init {
  if ((self = [super initWithBOOL:NO])) {
    top_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_VAlignEnum TOP]]);
    bottom_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_VAlignEnum BOTTOM]]);
    center_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_VAlignEnum CENTER]]);
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyle_VAlignStyle *typedCopy = (TripleplayUiStyle_VAlignStyle *) copy;
  typedCopy.top = top_;
  typedCopy.bottom = bottom_;
  typedCopy.center = center_;
}

@end
@implementation TripleplayUiStyle_PosStyle

@synthesize left = left_;
@synthesize above = above_;
@synthesize right = right_;
@synthesize below = below_;

- (TripleplayUiStyle_PosEnum *)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)elem {
  return [TripleplayUiStyle_PosEnum LEFT];
}

- (id)init {
  if ((self = [super initWithBOOL:NO])) {
    left_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_PosEnum LEFT]]);
    above_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_PosEnum ABOVE]]);
    right_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_PosEnum RIGHT]]);
    below_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_PosEnum BELOW]]);
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyle_PosStyle *typedCopy = (TripleplayUiStyle_PosStyle *) copy;
  typedCopy.left = left_;
  typedCopy.above = above_;
  typedCopy.right = right_;
  typedCopy.below = below_;
}

@end
@implementation TripleplayUiStyle_TextEffectStyle

@synthesize outline = outline_;
@synthesize pixelOutline = pixelOutline_;
@synthesize vectorOutline = vectorOutline_;
@synthesize shadow = shadow_;
@synthesize none = none_;

- (TripleplayUiStyle_TextEffectEnum *)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)elem {
  return [TripleplayUiStyle_TextEffectEnum NONE];
}

- (id)init {
  if ((self = [super initWithBOOL:YES])) {
    outline_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_TextEffectEnum PIXEL_OUTLINE]]);
    pixelOutline_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_TextEffectEnum PIXEL_OUTLINE]]);
    vectorOutline_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_TextEffectEnum VECTOR_OUTLINE]]);
    shadow_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_TextEffectEnum SHADOW]]);
    none_ = ((TripleplayUiStyle_Binding *) [self isWithId:[TripleplayUiStyle_TextEffectEnum NONE]]);
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyle_TextEffectStyle *typedCopy = (TripleplayUiStyle_TextEffectStyle *) copy;
  typedCopy.outline = outline_;
  typedCopy.pixelOutline = pixelOutline_;
  typedCopy.vectorOutline = vectorOutline_;
  typedCopy.shadow = shadow_;
  typedCopy.none = none_;
}

@end
@implementation TripleplayUiStyle_Flag

@synthesize off = off_;
@synthesize on = on_;
@synthesize _default = _default_;

- (id)initWithBOOL:(BOOL)inherited
          withBOOL:(BOOL)defaultVal {
  if ((self = [super initWithBOOL:inherited])) {
    off_ = ((TripleplayUiStyle_Binding *) [self isWithId:[JavaLangBoolean valueOfWithBOOL:NO]]);
    on_ = ((TripleplayUiStyle_Binding *) [self isWithId:[JavaLangBoolean valueOfWithBOOL:YES]]);
    _default_ = [JavaLangBoolean valueOfWithBOOL:defaultVal];
  }
  return self;
}

- (JavaLangBoolean *)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)mode {
  return _default_;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyle_Flag *typedCopy = (TripleplayUiStyle_Flag *) copy;
  typedCopy.off = off_;
  typedCopy.on = on_;
  typedCopy._default = _default_;
}

@end
@implementation TripleplayUiStyle_$1

- (JavaLangInteger *)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)elem {
  return [JavaLangInteger valueOfWithInt:[((TripleplayUiElement *) NIL_CHK(elem)) isEnabled] ? (int) 0xFF000000 : (int) 0xFF666666];
}

- (id)initWithBOOL:(BOOL)arg$0 {
  return [super initWithBOOL:arg$0];
}

@end
@implementation TripleplayUiStyle_$2

- (JavaLangInteger *)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)elem {
  return [JavaLangInteger valueOfWithInt:[((TripleplayUiElement *) NIL_CHK(elem)) isEnabled] ? (int) 0xAAFFFFFF : (int) 0xAACCCCCC];
}

- (id)initWithBOOL:(BOOL)arg$0 {
  return [super initWithBOOL:arg$0];
}

@end
@implementation TripleplayUiStyle_$3

@synthesize val$defaultValue = val$defaultValue_;

- (id)getDefaultWithTripleplayUiElement:(TripleplayUiElement *)elem {
  return val$defaultValue_;
}

- (id)initWithBOOL:(BOOL)arg$0
            withId:(id)capture$0 {
  if ((self = [super initWithBOOL:arg$0])) {
    val$defaultValue_ = capture$0;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStyle_$3 *typedCopy = (TripleplayUiStyle_$3 *) copy;
  typedCopy.val$defaultValue = val$defaultValue_;
}

@end
