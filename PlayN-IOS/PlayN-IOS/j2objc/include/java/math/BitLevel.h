//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: apache_harmony/classlib/modules/math/src/main/java/java/math/BitLevel.java
//
//  Created by tball on 6/22/13.
//

@class IOSIntArray;
@class JavaMathBigInteger;

#import "JreEmulation.h"

@interface JavaMathBitLevel : NSObject {
}

- (id)init;
+ (int)bitLengthWithJavaMathBigInteger:(JavaMathBigInteger *)val;
+ (int)bitCountWithJavaMathBigInteger:(JavaMathBigInteger *)val;
+ (BOOL)testBitWithJavaMathBigInteger:(JavaMathBigInteger *)val
                              withInt:(int)n;
+ (BOOL)nonZeroDroppedBitsWithInt:(int)numberOfBits
         withJavaLangIntegerArray:(IOSIntArray *)digits;
+ (JavaMathBigInteger *)shiftLeftWithJavaMathBigInteger:(JavaMathBigInteger *)source
                                                withInt:(int)count;
+ (void)inplaceShiftLeftWithJavaMathBigInteger:(JavaMathBigInteger *)val
                                       withInt:(int)count;
+ (void)shiftLeftWithJavaLangIntegerArray:(IOSIntArray *)result
                 withJavaLangIntegerArray:(IOSIntArray *)source
                                  withInt:(int)intCount
                                  withInt:(int)count;
+ (void)shiftLeftOneBitWithJavaLangIntegerArray:(IOSIntArray *)result
                       withJavaLangIntegerArray:(IOSIntArray *)source
                                        withInt:(int)srcLen;
+ (JavaMathBigInteger *)shiftLeftOneBitWithJavaMathBigInteger:(JavaMathBigInteger *)source;
+ (JavaMathBigInteger *)shiftRightWithJavaMathBigInteger:(JavaMathBigInteger *)source
                                                 withInt:(int)count;
+ (void)inplaceShiftRightWithJavaMathBigInteger:(JavaMathBigInteger *)val
                                        withInt:(int)count;
+ (BOOL)shiftRightWithJavaLangIntegerArray:(IOSIntArray *)result
                                   withInt:(int)resultLen
                  withJavaLangIntegerArray:(IOSIntArray *)source
                                   withInt:(int)intCount
                                   withInt:(int)count;
+ (JavaMathBigInteger *)flipBitWithJavaMathBigInteger:(JavaMathBigInteger *)val
                                              withInt:(int)n;
@end
