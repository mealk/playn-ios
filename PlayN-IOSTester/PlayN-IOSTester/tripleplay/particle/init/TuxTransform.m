//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tripleplay/particle/init/TuxTransform.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSFloatArray.h"
#include "java/lang/System.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/InternalTransform.h"
#include "playn/core/Layer.h"
#include "playn/core/PlayN.h"
#include "playn/core/gl/GLContext.h"
#include "pythagoras/f/Transform.h"
#include "tripleplay/particle/GLStatus.h"
#include "tripleplay/particle/Initializer.h"
#include "tripleplay/particle/ParticleBuffer.h"
#include "tripleplay/particle/init/TuxTransform.h"

@implementation TripleplayParticleInitTuxTransform

+ (TripleplayParticleInitializer *)layerWithPlaynCoreLayer:(id<PlaynCoreLayer>)layer {
  return [[TripleplayParticleInitTuxTransform_$1 alloc] initWithPlaynCoreLayer:layer];
}

- (id)init {
  return [super init];
}

@end
@implementation TripleplayParticleInitTuxTransform_$1

@synthesize xform = xform_;
@synthesize _matrix = _matrix_;
@synthesize val$layer = val$layer_;

- (void)willInitWithInt:(int)count {
  if (![TripleplayParticleGLStatus enabled]) {
    (*[((IOSFloatArray *) nil_chk(_matrix_)) floatRefAtIndex:0]) = 1;
    (*[((IOSFloatArray *) nil_chk(_matrix_)) floatRefAtIndex:3]) = 1;
    return;
  }
  (void) [((id<PlaynCoreInternalTransform>) nil_chk(xform_)) setTransformWithFloat:1 withFloat:0 withFloat:0 withFloat:1 withFloat:0 withFloat:0];
  id<PlaynCoreLayer> xlayer = val$layer_;
  while (xlayer != nil) {
    (void) [((id<PlaynCoreInternalTransform>) nil_chk(xform_)) preConcatenateWithPlaynCoreInternalTransform:(id<PlaynCoreInternalTransform>) [((id<PlaynCoreLayer>) nil_chk(xlayer)) transform]];
    xlayer = [((id<PlaynCoreLayer>) nil_chk(xlayer)) parent];
  }
  (void) [((id<PlaynCoreInternalTransform>) nil_chk(xform_)) preConcatenateWithPlaynCoreInternalTransform:[((PlaynCoreGlGLContext *) nil_chk([((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) ctx])) rootTransform]];
  [((id<PlaynCoreInternalTransform>) nil_chk(xform_)) getWithFloatArray:_matrix_];
}

- (void)init__WithInt:(int)index
       withFloatArray:(IOSFloatArray *)data
              withInt:(int)start OBJC_METHOD_FAMILY_NONE {
  [JavaLangSystem arraycopyWithId:_matrix_ withInt:0 withId:data withInt:start + TripleplayParticleParticleBuffer_M00 withInt:6];
}

- (id)initWithPlaynCoreLayer:(id<PlaynCoreLayer>)capture$0 {
  if ((self = [super init])) {
    val$layer_ = capture$0;
    xform_ = [TripleplayParticleGLStatus enabled] ? [((PlaynCoreGlGLContext *) nil_chk([((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) ctx])) createTransform] : nil;
    _matrix_ = [IOSFloatArray arrayWithLength:6];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayParticleInitTuxTransform_$1 *typedCopy = (TripleplayParticleInitTuxTransform_$1 *) copy;
  typedCopy.xform = xform_;
  typedCopy._matrix = _matrix_;
  typedCopy.val$layer = val$layer_;
}

@end
