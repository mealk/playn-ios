//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/playn/showcase/core/snake/SnakeDemo.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "playn/core/Assets.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/Image.h"
#include "playn/core/ImageLayer.h"
#include "playn/core/Layer.h"
#include "playn/core/PlayN.h"
#include "playn/showcase/core/snake/SnakeDemo.h"
#include "pythagoras/f/Transform.h"

@implementation PlaynShowcaseCoreSnakeSnakeDemo

@synthesize layer = layer_;
@synthesize segments = segments_;
@synthesize dx = dx_;
@synthesize dy = dy_;
@synthesize dd = dd_;

- (NSString *)name {
  return @"Snake";
}

- (void)init__ OBJC_METHOD_FAMILY_NONE {
  layer_ = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createGroupLayer];
  [((id<PlaynCoreGroupLayer>) nil_chk([((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) rootLayer])) addWithPlaynCoreLayer:layer_];
  id<PlaynCoreImage> bgImage = [((id<PlaynCoreAssets>) nil_chk([PlaynCorePlayN assets])) getImageWithNSString:@"sprites/bg.png"];
  id<PlaynCoreImageLayer> bgLayer = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createImageLayerWithPlaynCoreImage:bgImage];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(bgLayer)) setDepthWithFloat:-1];
  [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:bgLayer];
  id<PlaynCoreImage> segImage = [((id<PlaynCoreAssets>) nil_chk([PlaynCorePlayN assets])) getImageWithNSString:@"sprites/pea.png"];
  segments_ = [IOSObjectArray arrayWithLength:25 type:[IOSClass classWithProtocol:@protocol(PlaynCoreImageLayer)]];
  for (int ii = 0; ii < (int) [((IOSObjectArray *) nil_chk(segments_)) count]; ii++) {
    (void) [((IOSObjectArray *) nil_chk(segments_)) replaceObjectAtIndex:ii withObject:[((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createImageLayerWithPlaynCoreImage:segImage]];
    (void) [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(segments_)) objectAtIndex:ii])) setDepthWithFloat:50];
    [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:[((IOSObjectArray *) nil_chk(segments_)) objectAtIndex:ii]];
  }
}

- (void)shutdown {
  segments_ = nil;
  [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) destroy];
  layer_ = nil;
}

- (void)updateWithInt:(int)delta {
  for (int ii = (int) [((IOSObjectArray *) nil_chk(segments_)) count] - 1; ii > 0; ii--) {
    id<PlaynCoreImageLayer> cur = [((IOSObjectArray *) nil_chk(segments_)) objectAtIndex:ii], prev = [((IOSObjectArray *) nil_chk(segments_)) objectAtIndex:ii - 1];
    id<PythagorasFTransform> t1 = [((id<PlaynCoreImageLayer>) nil_chk(cur)) transform], t2 = [((id<PlaynCoreImageLayer>) nil_chk(prev)) transform];
    (void) [((id<PythagorasFTransform>) nil_chk(t1)) setTxWithFloat:[((id<PythagorasFTransform>) nil_chk(t2)) tx]];
    (void) [((id<PythagorasFTransform>) nil_chk(t1)) setTyWithFloat:[((id<PythagorasFTransform>) nil_chk(t2)) ty]];
    (void) [((id<PythagorasFTransform>) nil_chk(t1)) setUniformScaleWithFloat:[((id<PythagorasFTransform>) nil_chk(t2)) uniformScale]];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(cur)) setDepthWithFloat:[((id<PlaynCoreImageLayer>) nil_chk(prev)) depth]];
  }
  id<PlaynCoreImageLayer> first = [((IOSObjectArray *) nil_chk(segments_)) objectAtIndex:0];
  id<PythagorasFTransform> t = [((id<PlaynCoreImageLayer>) nil_chk(first)) transform];
  float nx = [((id<PythagorasFTransform>) nil_chk(t)) tx] + dx_, ny = [((id<PythagorasFTransform>) nil_chk(t)) ty] + dy_, nd = [((id<PlaynCoreImageLayer>) nil_chk(first)) depth] + dd_;
  if (nx < 0 || nx > [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) width]) {
    dx_ *= -1;
    nx += dx_;
  }
  if (ny < 0 || ny > [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) height]) {
    dy_ *= -1;
    ny += dy_;
  }
  if (nd < 25 || nd > 125) {
    dd_ *= -1;
    nd += dd_;
  }
  (void) [((id<PythagorasFTransform>) nil_chk(t)) setTxWithFloat:nx];
  (void) [((id<PythagorasFTransform>) nil_chk(t)) setTyWithFloat:ny];
  (void) [((id<PythagorasFTransform>) nil_chk(t)) setUniformScaleWithFloat:nd / 50.0f];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(first)) setDepthWithFloat:nd];
}

- (id)init {
  if ((self = [super init])) {
    dx_ = 10;
    dy_ = 5;
    dd_ = 1;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynShowcaseCoreSnakeSnakeDemo *typedCopy = (PlaynShowcaseCoreSnakeSnakeDemo *) copy;
  typedCopy.layer = layer_;
  typedCopy.segments = segments_;
  typedCopy.dx = dx_;
  typedCopy.dy = dy_;
  typedCopy.dd = dd_;
}

@end
