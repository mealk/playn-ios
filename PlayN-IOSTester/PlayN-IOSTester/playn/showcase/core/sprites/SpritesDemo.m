//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/playn/showcase/core/sprites/SpritesDemo.java
//
//  Created by Thomas on 7/15/13.
//

#import "IOSClass.h"
#import "java/util/ArrayList.h"
#import "java/util/Iterator.h"
#import "java/util/List.h"
#import "playn/core/Assets.h"
#import "playn/core/Graphics.h"
#import "playn/core/GroupLayer.h"
#import "playn/core/Image.h"
#import "playn/core/ImageLayer.h"
#import "playn/core/PlayN.h"
#import "playn/core/Pointer.h"
#import "playn/core/Sound.h"
#import "playn/showcase/core/sprites/Pea.h"
#import "playn/showcase/core/sprites/SpritesDemo.h"

@implementation PlaynShowcaseCoreSpritesSpritesDemo

@synthesize layer = layer_;
@synthesize peas = peas_;
@synthesize ding = ding_;

- (NSString *)name {
  return @"Sprites";
}

- (void)init__ OBJC_METHOD_FAMILY_NONE {
  layer_ = [((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) createGroupLayer];
  [((id<PlaynCoreGroupLayer>) [((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) rootLayer]) addWithPlaynCoreLayer:layer_];
  ding_ = [((id<PlaynCoreAssets>) [PlaynCorePlayN assets]) getSoundWithNSString:@"sprites/ding"];
  id<PlaynCoreImage> bgImage = [((id<PlaynCoreAssets>) [PlaynCorePlayN assets]) getImageWithNSString:@"sprites/bg.png"];
  id<PlaynCoreImageLayer> bgLayer = [((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) createImageLayerWithPlaynCoreImage:bgImage];
  [((id<PlaynCoreGroupLayer>) NIL_CHK(layer_)) addWithPlaynCoreLayer:bgLayer];
  [((id<PlaynCorePointer>) [PlaynCorePlayN pointer]) setListenerWithPlaynCorePointer_Listener:[[PlaynShowcaseCoreSpritesSpritesDemo_$1 alloc] initWithPlaynShowcaseCoreSpritesSpritesDemo:self]];
  [self addPeaWithFloat:[((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) width] / 2 withFloat:[((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) height] / 2];
}

- (void)addPeaWithFloat:(float)x
              withFloat:(float)y {
  PlaynShowcaseCoreSpritesPea *pea = [[PlaynShowcaseCoreSpritesPea alloc] initWithPlaynCoreGroupLayer:layer_ withFloat:x withFloat:y];
  [((id<JavaUtilList>) NIL_CHK(peas_)) addWithId:pea];
  [((id<PlaynCoreSound>) NIL_CHK(ding_)) play];
}

- (void)shutdown {
  [((id<PlaynCorePointer>) [PlaynCorePlayN pointer]) setListenerWithPlaynCorePointer_Listener:nil];
  [((id<PlaynCoreGroupLayer>) NIL_CHK(layer_)) destroy];
  layer_ = nil;
}

- (void)paintWithFloat:(float)alpha {
}

- (void)updateWithInt:(int)delta {
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(peas_)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      PlaynShowcaseCoreSpritesPea *pea = ((PlaynShowcaseCoreSpritesPea *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      [((PlaynShowcaseCoreSpritesPea *) NIL_CHK(pea)) updateWithInt:delta];
    }
  }
}

- (id)init {
  if ((self = [super init])) {
    peas_ = [[JavaUtilArrayList alloc] initWithInt:0];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynShowcaseCoreSpritesSpritesDemo *typedCopy = (PlaynShowcaseCoreSpritesSpritesDemo *) copy;
  typedCopy.layer = layer_;
  typedCopy.peas = peas_;
  typedCopy.ding = ding_;
}

@end
@implementation PlaynShowcaseCoreSpritesSpritesDemo_$1

@synthesize this$0 = this$0_;

- (void)onPointerEndWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event {
  [this$0_ addPeaWithFloat:[((id<PlaynCorePointer_Event>) NIL_CHK(event)) x] withFloat:[((id<PlaynCorePointer_Event>) NIL_CHK(event)) y]];
}

- (id)initWithPlaynShowcaseCoreSpritesSpritesDemo:(PlaynShowcaseCoreSpritesSpritesDemo *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynShowcaseCoreSpritesSpritesDemo_$1 *typedCopy = (PlaynShowcaseCoreSpritesSpritesDemo_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
