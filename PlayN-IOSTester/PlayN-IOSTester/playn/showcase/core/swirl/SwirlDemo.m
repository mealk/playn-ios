//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/playn/showcase/core/swirl/SwirlDemo.java
//
//  Created by Thomas on 7/25/13.
//

#include "java/lang/Math.h"
#include "playn/core/Assets.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/Image.h"
#include "playn/core/ImageLayer.h"
#include "playn/core/Layer.h"
#include "playn/core/PlayN.h"
#include "playn/core/Pointer.h"
#include "playn/showcase/core/Demo.h"
#include "playn/showcase/core/swirl/SwirlDemo.h"
#include "pythagoras/f/Transform.h"

@implementation PlaynShowcaseCoreSwirlSwirlDemo

@synthesize groupLayer = groupLayer_;
@synthesize bgLayer = bgLayer_;
@synthesize layer0 = layer0_;
@synthesize layer1 = layer1_;
@synthesize layer2 = layer2_;
@synthesize layer3 = layer3_;
@synthesize elapsed = elapsed_;

- (NSString *)name {
  return @"Swirl";
}

- (void)init__ OBJC_METHOD_FAMILY_NONE {
  [((id<PlaynCorePointer>) nil_chk([PlaynCorePlayN pointer])) setListenerWithPlaynCorePointer_Listener:[[PlaynShowcaseCoreSwirlSwirlDemo_$1 alloc] initWithPlaynShowcaseCoreSwirlSwirlDemo:self]];
  id<PlaynCoreImage> background = [((id<PlaynCoreAssets>) nil_chk([PlaynCorePlayN assets])) getImageWithNSString:@"swirl/background.png"];
  id<PlaynCoreImage> catgirl = [((id<PlaynCoreAssets>) nil_chk([PlaynCorePlayN assets])) getImageWithNSString:@"swirl/girlcat.png"];
  groupLayer_ = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createGroupLayer];
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) setOriginWithFloat:128 withFloat:128];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) transform])) translateWithFloat:256 withFloat:256];
  [((id<PlaynCoreGroupLayer>) nil_chk([((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) rootLayer])) addWithPlaynCoreLayer:groupLayer_];
  bgLayer_ = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createImageLayerWithPlaynCoreImage:background];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(bgLayer_)) setDepthWithFloat:-1];
  [((id<PlaynCoreGroupLayer>) nil_chk([((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) rootLayer])) addWithPlaynCoreLayer:bgLayer_];
  layer0_ = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createImageLayerWithPlaynCoreImage:catgirl];
  layer1_ = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createImageLayerWithPlaynCoreImage:catgirl];
  layer2_ = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createImageLayerWithPlaynCoreImage:catgirl];
  layer3_ = [((id<PlaynCoreGraphics>) nil_chk([PlaynCorePlayN graphics])) createImageLayerWithPlaynCoreImage:catgirl];
  [((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) addWithPlaynCoreLayer:layer0_];
  [((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) addWithPlaynCoreLayer:layer1_];
  [((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) addWithPlaynCoreLayer:layer2_];
  [((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) addWithPlaynCoreLayer:layer3_];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(layer0_)) setOriginWithFloat:50 withFloat:100];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(layer1_)) setOriginWithFloat:50 withFloat:100];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(layer2_)) setOriginWithFloat:50 withFloat:100];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(layer3_)) setOriginWithFloat:50 withFloat:100];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer0_)) transform])) translateWithFloat:0 withFloat:0];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer1_)) transform])) translateWithFloat:256 withFloat:0];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer2_)) transform])) translateWithFloat:256 withFloat:256];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer3_)) transform])) translateWithFloat:0 withFloat:256];
}

- (void)shutdown {
  [((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) destroy];
  groupLayer_ = nil;
  [((id<PlaynCoreImageLayer>) nil_chk(bgLayer_)) destroy];
  bgLayer_ = nil;
  layer0_ = layer1_ = layer2_ = layer3_ = nil;
}

- (void)doStuff {
}

- (void)updateWithInt:(int)delta {
  elapsed_ += delta;
}

- (void)paintWithFloat:(float)alpha {
  float angle = (elapsed_ + PlaynShowcaseCoreDemo_UPDATE_RATE * alpha) * (float) JavaLangMath_PI / 5000;
  float scale_ = (float) [JavaLangMath sinWithDouble:angle] + 0.5f;
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer0_)) transform])) setRotationWithFloat:angle];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer1_)) transform])) setRotationWithFloat:angle];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer2_)) transform])) setRotationWithFloat:angle];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer3_)) transform])) setRotationWithFloat:angle];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer0_)) transform])) setUniformScaleWithFloat:scale_];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer1_)) transform])) setUniformScaleWithFloat:scale_];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer2_)) transform])) setUniformScaleWithFloat:scale_];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer3_)) transform])) setUniformScaleWithFloat:scale_];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) transform])) setRotationWithFloat:angle];
  (void) [((id<PythagorasFTransform>) nil_chk([((id<PlaynCoreGroupLayer>) nil_chk(groupLayer_)) transform])) setUniformScaleWithFloat:scale_];
}

- (id)init {
  return [super init];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynShowcaseCoreSwirlSwirlDemo *typedCopy = (PlaynShowcaseCoreSwirlSwirlDemo *) copy;
  typedCopy.groupLayer = groupLayer_;
  typedCopy.bgLayer = bgLayer_;
  typedCopy.layer0 = layer0_;
  typedCopy.layer1 = layer1_;
  typedCopy.layer2 = layer2_;
  typedCopy.layer3 = layer3_;
  typedCopy.elapsed = elapsed_;
}

@end
@implementation PlaynShowcaseCoreSwirlSwirlDemo_$1

@synthesize this$0 = this$0_;

- (void)onPointerStartWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event {
  [this$0_ doStuff];
}

- (id)initWithPlaynShowcaseCoreSwirlSwirlDemo:(PlaynShowcaseCoreSwirlSwirlDemo *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  PlaynShowcaseCoreSwirlSwirlDemo_$1 *typedCopy = (PlaynShowcaseCoreSwirlSwirlDemo_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
