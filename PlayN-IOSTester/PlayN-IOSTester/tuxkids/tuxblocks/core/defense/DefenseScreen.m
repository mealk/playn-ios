//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/defense/DefenseScreen.java
//
//  Created by Thomas on 7/10/13.
//

#import "IOSObjectArray.h"
#import "java/lang/Integer.h"
#import "playn/core/Graphics.h"
#import "playn/core/GroupLayer.h"
#import "playn/core/Layer.h"
#import "playn/core/Pointer.h"
#import "playn/core/util/Clock.h"
#import "tripleplay/game/Screen.h"
#import "tripleplay/game/ScreenStack.h"
#import "tripleplay/game/trans/SlideTransition.h"
#import "tuxkids/tuxblocks/core/Button.h"
#import "tuxkids/tuxblocks/core/Constant.h"
#import "tuxkids/tuxblocks/core/GameState.h"
#import "tuxkids/tuxblocks/core/MenuSprite.h"
#import "tuxkids/tuxblocks/core/defense/DefenseScreen.h"
#import "tuxkids/tuxblocks/core/defense/Grid.h"
#import "tuxkids/tuxblocks/core/defense/Inventory.h"
#import "tuxkids/tuxblocks/core/defense/round/Level.h"
#import "tuxkids/tuxblocks/core/defense/select/SelectScreen.h"
#import "tuxkids/tuxblocks/core/screen/GameScreen.h"
#import "tuxkids/tuxblocks/core/utils/Formatter.h"

@implementation TuxkidsTuxblocksCoreDefenseDefenseScreen

@synthesize grid = grid_;
@synthesize inventory = inventory_;
@synthesize gridHolder = gridHolder_;
@synthesize selectScreen = selectScreen_;
@synthesize buttonPlus = buttonPlus_;
@synthesize buttonStart = buttonStart_;
@synthesize menuSprite = menuSprite_;

- (id)initWithTripleplayGameScreenStack:(TripleplayGameScreenStack *)screens
      withTuxkidsTuxblocksCoreGameState:(TuxkidsTuxblocksCoreGameState *)gameState {
  return [super initWithTripleplayGameScreenStack:screens withTuxkidsTuxblocksCoreGameState:gameState];
}

- (void)wasAdded {
  float titleBarHeight = [TuxkidsTuxblocksCoreScreenGameScreen defaultButtonSize] * 1.2f;
  float maxGridWidth = [self width] * 0.7f;
  TuxkidsTuxblocksCoreDefenseGrid *testGrid = [[TuxkidsTuxblocksCoreDefenseGrid alloc] initWithTuxkidsTuxblocksCoreGameState:state__ withInt:15 withInt:21 withInt:(int) maxGridWidth withInt:(int) ([self height] - titleBarHeight)];
  grid_ = testGrid;
  [((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(grid_)) setTowerColorWithInt:[((TuxkidsTuxblocksCoreGameState *) NIL_CHK(state__)) themeColor]];
  gridHolder_ = [((id<PlaynCoreGraphics>) [TuxkidsTuxblocksCoreScreenGameScreen graphics]) createGroupLayer];
  [((id<PlaynCoreGroupLayer>) NIL_CHK(gridHolder_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(grid_)) layer]];
  (void) [((id<PlaynCoreGroupLayer>) NIL_CHK(gridHolder_)) setTranslationWithFloat:[self width] - [((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(testGrid)) width] withFloat:([self height] + titleBarHeight - [((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(testGrid)) height]) / 2];
  (void) [((id<PlaynCoreGroupLayer>) NIL_CHK(gridHolder_)) setDepthWithFloat:1];
  [((id<PlaynCoreGroupLayer>) NIL_CHK(layer_)) addWithPlaynCoreLayer:gridHolder_];
  inventory_ = [[TuxkidsTuxblocksCoreDefenseInventory alloc] initWithTuxkidsTuxblocksCoreDefenseDefenseScreen:self withTuxkidsTuxblocksCoreDefenseGrid:grid_ withInt:(int) ([self width] - [((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(testGrid)) width]) withInt:(int) ([self height] - titleBarHeight)];
  (void) [((id<PlaynCoreGroupLayer>) [((TuxkidsTuxblocksCoreDefenseInventory *) NIL_CHK(inventory_)) layer]) setDepthWithFloat:1];
  (void) [((id<PlaynCoreGroupLayer>) [((TuxkidsTuxblocksCoreDefenseInventory *) NIL_CHK(inventory_)) layer]) setTyWithFloat:titleBarHeight];
  [((id<PlaynCoreGroupLayer>) NIL_CHK(layer_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreDefenseInventory *) NIL_CHK(inventory_)) layer]];
  menuSprite_ = [[TuxkidsTuxblocksCoreMenuSprite alloc] initWithFloat:[self width] withFloat:titleBarHeight];
  [((id<PlaynCoreGroupLayer>) NIL_CHK(layer_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreMenuSprite *) NIL_CHK(menuSprite_)) layer]];
  selectScreen_ = [[TuxkidsTuxblocksCoreDefenseSelectSelectScreen alloc] initWithTripleplayGameScreenStack:screens_ withTuxkidsTuxblocksCoreGameState:state__ withTuxkidsTuxblocksCoreDefenseGrid:grid_];
  [self createPlusButton];
  [self createStartButton];
}

- (void)createPlusButton {
  float size = [TuxkidsTuxblocksCoreScreenGameScreen defaultButtonSize];
  buttonPlus_ = [self createMenuButtonWithNSString:[TuxkidsTuxblocksCoreConstant BUTTON_PLUS]];
  [((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonPlus_)) setPositionWithFloat:size * 0.6f withFloat:size * 0.6f];
  (void) [((id<PlaynCoreLayer>) [((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonPlus_)) layerAddable]) setDepthWithFloat:1];
  [((id<PlaynCoreGroupLayer>) NIL_CHK(layer_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonPlus_)) layerAddable]];
  [((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonPlus_)) setOnReleasedListenerWithTuxkidsTuxblocksCoreButton_OnReleasedListener:[[TuxkidsTuxblocksCoreDefenseDefenseScreen_$1 alloc] initWithTuxkidsTuxblocksCoreDefenseDefenseScreen:self]];
}

- (void)createStartButton {
  float size = [TuxkidsTuxblocksCoreScreenGameScreen defaultButtonSize];
  buttonStart_ = [self createMenuButtonWithNSString:[TuxkidsTuxblocksCoreConstant BUTTON_OK]];
  [((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonStart_)) setPositionWithFloat:[self width] - size * 0.6f withFloat:size * 0.6f];
  (void) [((id<PlaynCoreLayer>) [((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonStart_)) layerAddable]) setDepthWithFloat:1];
  [((id<PlaynCoreGroupLayer>) NIL_CHK(layer_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonStart_)) layerAddable]];
  [((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonStart_)) setOnReleasedListenerWithTuxkidsTuxblocksCoreButton_OnReleasedListener:[[TuxkidsTuxblocksCoreDefenseDefenseScreen_$2 alloc] initWithTuxkidsTuxblocksCoreDefenseDefenseScreen:self]];
}

- (void)wasShown {
  [super wasShown];
  [((TuxkidsTuxblocksCoreDefenseInventory *) NIL_CHK(inventory_)) refreshCountSprites];
}

- (void)showTransitionCompleted {
  [super showTransitionCompleted];
}

- (void)updateWithInt:(int)delta {
  [super updateWithInt:delta];
  [((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(grid_)) updateWithInt:delta];
  TuxkidsTuxblocksCoreDefenseRoundLevel *level = [((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(grid_)) level];
  (void) [((id<PlaynCoreLayer>) [((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonStart_)) layerAddable]) setVisibleWithBOOL:NO];
  if ([((TuxkidsTuxblocksCoreDefenseRoundLevel *) NIL_CHK(level)) finished]) {
    [((TuxkidsTuxblocksCoreMenuSprite *) NIL_CHK(menuSprite_)) setTextWithNSString:@"Level Complete!"];
  }
  if ([((TuxkidsTuxblocksCoreDefenseRoundLevel *) NIL_CHK(level)) duringRound]) {
    [((TuxkidsTuxblocksCoreMenuSprite *) NIL_CHK(menuSprite_)) setTextWithNSString:[NSString stringWithFormat:@"Round %d", [((TuxkidsTuxblocksCoreDefenseRoundLevel *) NIL_CHK(level)) round]]];
  }
  else {
    int nextRoundIn = [[((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(grid_)) level] timeUntilNextRound] / 1000 + 1;
    [((TuxkidsTuxblocksCoreMenuSprite *) NIL_CHK(menuSprite_)) setTextWithNSString:[TuxkidsTuxblocksCoreUtilsFormatter formatWithNSString:@"Next round in %d..." withNSObjectArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[NSObject class]] count:1, [JavaLangInteger valueOfWithInt:nextRoundIn] ]]];
    (void) [((id<PlaynCoreLayer>) [((TuxkidsTuxblocksCoreButton *) NIL_CHK(buttonStart_)) layerAddable]) setVisibleWithBOOL:YES];
  }
}

- (void)paintWithPlaynCoreUtilClock:(id<PlaynCoreUtilClock>)clock {
  [super paintWithPlaynCoreUtilClock:clock];
  [((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(grid_)) paintWithPlaynCoreUtilClock:clock];
}

- (void)pushSelectScreen {
  [self pushScreenWithTuxkidsTuxblocksCoreScreenGameScreen:selectScreen_ withTripleplayGameScreenStack_Transition:[[((TripleplayGameScreenStack *) NIL_CHK(screens_)) slide] right]];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreDefenseDefenseScreen *typedCopy = (TuxkidsTuxblocksCoreDefenseDefenseScreen *) copy;
  typedCopy.grid = grid_;
  typedCopy.inventory = inventory_;
  typedCopy.gridHolder = gridHolder_;
  typedCopy.selectScreen = selectScreen_;
  typedCopy.buttonPlus = buttonPlus_;
  typedCopy.buttonStart = buttonStart_;
  typedCopy.menuSprite = menuSprite_;
}

@end
@implementation TuxkidsTuxblocksCoreDefenseDefenseScreen_$1

@synthesize this$0 = this$0_;

- (void)onReleaseWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event
                                   withBOOL:(BOOL)inButton {
  if (inButton) [this$0_ pushSelectScreen];
}

- (id)initWithTuxkidsTuxblocksCoreDefenseDefenseScreen:(TuxkidsTuxblocksCoreDefenseDefenseScreen *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreDefenseDefenseScreen_$1 *typedCopy = (TuxkidsTuxblocksCoreDefenseDefenseScreen_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation TuxkidsTuxblocksCoreDefenseDefenseScreen_$2

@synthesize this$0 = this$0_;

- (void)onReleaseWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event
                                   withBOOL:(BOOL)inButton {
  if (inButton) {
    [[((TuxkidsTuxblocksCoreDefenseGrid *) NIL_CHK(this$0_.grid)) level] startNextRound];
  }
}

- (id)initWithTuxkidsTuxblocksCoreDefenseDefenseScreen:(TuxkidsTuxblocksCoreDefenseDefenseScreen *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreDefenseDefenseScreen_$2 *typedCopy = (TuxkidsTuxblocksCoreDefenseDefenseScreen_$2 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
