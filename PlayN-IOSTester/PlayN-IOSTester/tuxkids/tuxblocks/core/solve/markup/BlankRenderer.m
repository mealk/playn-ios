//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/solve/markup/BlankRenderer.java
//
//  Created by Thomas on 7/26/13.
//

#include "playn/core/Canvas.h"
#include "playn/core/Color.h"
#include "playn/core/Font.h"
#include "playn/core/Graphics.h"
#include "playn/core/TextFormat.h"
#include "playn/core/TextLayout.h"
#include "pythagoras/f/Vector.h"
#include "tuxkids/tuxblocks/core/PlayNObject.h"
#include "tuxkids/tuxblocks/core/solve/markup/BlankRenderer.h"
#include "tuxkids/tuxblocks/core/solve/markup/ExpressionWriter.h"

@implementation TuxkidsTuxblocksCoreSolveMarkupBlankRenderer

- (TuxkidsTuxblocksCoreSolveMarkupExpressionWriter *)getExpressionWriterWithPlaynCoreTextFormat:(PlaynCoreTextFormat *)textFormat {
  return [[TuxkidsTuxblocksCoreSolveMarkupBlankRenderer_$1 alloc] initWithPlaynCoreTextFormat:textFormat];
}

- (id)init {
  return [super init];
}

@end
@implementation TuxkidsTuxblocksCoreSolveMarkupBlankRenderer_$1

- (PythagorasFVector *)formatExpressionWithPlaynCoreTextFormat:(PlaynCoreTextFormat *)textFormat {
  id<PlaynCoreTextLayout> layout = [((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) layoutTextWithNSString:@"-999" withPlaynCoreTextFormat:textFormat];
  float fontSize = [((id<PlaynCoreFont>) nil_chk(((PlaynCoreTextFormat *) nil_chk(textFormat)).font)) size];
  return [[PythagorasFVector alloc] initWithFloat:[((id<PlaynCoreTextLayout>) nil_chk(layout)) width] + fontSize / 5 withFloat:[((id<PlaynCoreTextLayout>) nil_chk(layout)) height] + fontSize / 5];
}

- (void)drawExpressionWithPlaynCoreCanvas:(id<PlaynCoreCanvas>)canvas {
  float sw = 1;
  (void) [((id<PlaynCoreCanvas>) nil_chk(canvas)) setFillColorWithInt:[PlaynCoreColor withAlphaWithInt:[self blankColor] withInt:100]];
  (void) [((id<PlaynCoreCanvas>) nil_chk(canvas)) setStrokeColorWithInt:[self blankColor]];
  (void) [((id<PlaynCoreCanvas>) nil_chk(canvas)) setStrokeWidthWithFloat:sw];
  (void) [((id<PlaynCoreCanvas>) nil_chk(canvas)) fillRectWithFloat:0 withFloat:0 withFloat:[self width] withFloat:[self height]];
  (void) [((id<PlaynCoreCanvas>) nil_chk(canvas)) strokeRectWithFloat:0 withFloat:0 withFloat:[self width] - sw / 2 withFloat:[self height] - sw / 2];
}

- (PythagorasFVector *)blankCenter {
  return [[PythagorasFVector alloc] initWithFloat:[self width] / 2 withFloat:[self height] / 2];
}

- (id)initWithPlaynCoreTextFormat:(PlaynCoreTextFormat *)arg$0 {
  return [super initWithPlaynCoreTextFormat:arg$0];
}

@end
