//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/solve/expression/ExpressionWriter.java
//
//  Created by Thomas on 7/10/13.
//

#import "playn/core/Canvas.h"
#import "playn/core/Graphics.h"
#import "playn/core/PlayN.h"
#import "playn/core/TextFormat.h"
#import "playn/core/TextLayout.h"
#import "pythagoras/f/Vector.h"
#import "tuxkids/tuxblocks/core/solve/expression/ExpressionWriter.h"

@implementation TuxkidsTuxblocksCoreSolveExpressionExpressionWriter

@synthesize size = size_;
@synthesize textFormat = textFormat_;

+ (float)SPACING {
  return TuxkidsTuxblocksCoreSolveExpressionExpressionWriter_SPACING;
}

- (PythagorasFVector *)getSize {
  return size_;
}

- (float)width {
  return ((PythagorasFVector *) NIL_CHK(size_)).x_;
}

- (float)height {
  return ((PythagorasFVector *) NIL_CHK(size_)).y_;
}

- (id)initWithPlaynCoreTextFormat:(PlaynCoreTextFormat *)textFormat {
  if ((self = [super init])) {
    self.textFormat = textFormat;
    self.size = [self formatExpressionWithPlaynCoreTextFormat:textFormat];
  }
  return self;
}

- (PythagorasFVector *)formatExpressionWithPlaynCoreTextFormat:(PlaynCoreTextFormat *)textFormat {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)drawExpressionWithPlaynCoreCanvas:(id<PlaynCoreCanvas>)canvas
                                  withInt:(int)childColor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<PlaynCoreTextLayout>)layoutWithNSString:(NSString *)text
                      withPlaynCoreTextFormat:(PlaynCoreTextFormat *)textFormat {
  return [((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) layoutTextWithNSString:text withPlaynCoreTextFormat:textFormat];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreSolveExpressionExpressionWriter *typedCopy = (TuxkidsTuxblocksCoreSolveExpressionExpressionWriter *) copy;
  typedCopy.size = size_;
  typedCopy.textFormat = textFormat_;
}

@end
