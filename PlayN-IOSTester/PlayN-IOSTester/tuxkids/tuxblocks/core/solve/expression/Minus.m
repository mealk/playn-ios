//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/solve/expression/Minus.java
//
//  Created by Thomas on 7/10/13.
//

#import "IOSObjectArray.h"
#import "java/lang/Integer.h"
#import "playn/core/Color.h"
#import "tuxkids/tuxblocks/core/solve/expression/Expression.h"
#import "tuxkids/tuxblocks/core/solve/expression/Minus.h"
#import "tuxkids/tuxblocks/core/solve/expression/ModificationOperation.h"
#import "tuxkids/tuxblocks/core/solve/expression/Plus.h"
#import "tuxkids/tuxblocks/core/utils/Formatter.h"

@implementation TuxkidsTuxblocksCoreSolveExpressionMinus

- (id)initWithTuxkidsTuxblocksCoreSolveExpressionExpression:(TuxkidsTuxblocksCoreSolveExpressionExpression *)base
                                                    withInt:(int)value {
  return [super initWithTuxkidsTuxblocksCoreSolveExpressionExpression:base withInt:value];
}

- (NSString *)toMathString {
  return [TuxkidsTuxblocksCoreUtilsFormatter formatWithNSString:@"%s %s %d" withNSObjectArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[NSObject class]] count:3, [((TuxkidsTuxblocksCoreSolveExpressionExpression *) NIL_CHK(operand_)) toMathString], [self getSymbol], [JavaLangInteger valueOfWithInt:value_] ]];
}

- (int)evaluate {
  return [((TuxkidsTuxblocksCoreSolveExpressionExpression *) NIL_CHK(operand_)) evaluate] - value_;
}

- (int)getPrecedence {
  return TuxkidsTuxblocksCoreSolveExpressionExpression_PREC_ADD;
}

- (NSString *)getSymbol {
  return @"-";
}

- (BOOL)isCommutative {
  return NO;
}

- (int)getColor {
  return [PlaynCoreColor rgbWithInt:57 withInt:20 withInt:175];
}

- (TuxkidsTuxblocksCoreSolveExpressionModificationOperation *)getInverse {
  return [[TuxkidsTuxblocksCoreSolveExpressionPlus alloc] initWithTuxkidsTuxblocksCoreSolveExpressionExpression:operand_ withInt:value_];
}

@end
