//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/solve/SolveScreen.java
//
//  Created by Thomas on 7/26/13.
//

#include "playn/core/Assets.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/Image.h"
#include "playn/core/ImageLayer.h"
#include "playn/core/Layer.h"
#include "playn/core/PlayN.h"
#include "playn/core/Pointer.h"
#include "playn/core/util/Clock.h"
#include "tripleplay/game/Screen.h"
#include "tripleplay/game/ScreenStack.h"
#include "tripleplay/game/trans/SlideTransition.h"
#include "tuxkids/tuxblocks/core/Button.h"
#include "tuxkids/tuxblocks/core/Constant.h"
#include "tuxkids/tuxblocks/core/GameState.h"
#include "tuxkids/tuxblocks/core/MenuSprite.h"
#include "tuxkids/tuxblocks/core/PlayNObject.h"
#include "tuxkids/tuxblocks/core/screen/GameScreen.h"
#include "tuxkids/tuxblocks/core/solve/NumberSelectScreen.h"
#include "tuxkids/tuxblocks/core/solve/SolveScreen.h"
#include "tuxkids/tuxblocks/core/solve/blocks/BlockController.h"
#include "tuxkids/tuxblocks/core/solve/blocks/Equation.h"
#include "tuxkids/tuxblocks/core/solve/blocks/Sprite.h"
#include "tuxkids/tuxblocks/core/solve/markup/Renderer.h"

@implementation TuxkidsTuxblocksCoreSolveSolveScreen

@synthesize originalEquation = originalEquation_;
@synthesize controller = controller_;
@synthesize buttonBack = buttonBack_;
@synthesize buttonImageOk = buttonImageOk_;
@synthesize buttonImageBack = buttonImageBack_;
@synthesize menu = menu_;
@synthesize eqLayer = eqLayer_;
@synthesize eqLayerOld = eqLayerOld_;
@synthesize lastEqImage = lastEqImage_;
@synthesize solveCallback = solveCallback_;
@synthesize solveCorrect = solveCorrect_;

- (void)setEquationWithTuxkidsTuxblocksCoreSolveBlocksEquation:(TuxkidsTuxblocksCoreSolveBlocksEquation *)equation {
  self.originalEquation = equation;
  [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) addEquationWithTuxkidsTuxblocksCoreSolveBlocksEquation:[((TuxkidsTuxblocksCoreSolveBlocksEquation *) nil_chk(equation)) copy__]];
}

- (BOOL)solved {
  return [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) solved];
}

- (TuxkidsTuxblocksCoreSolveBlocksEquation *)equation {
  return [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) equation];
}

- (void)reset {
  [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) clear];
  [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) addEquationWithTuxkidsTuxblocksCoreSolveBlocksEquation:[((TuxkidsTuxblocksCoreSolveBlocksEquation *) nil_chk(originalEquation_)) copy__]];
}

- (id)initWithTripleplayGameScreenStack:(TripleplayGameScreenStack *)screens
      withTuxkidsTuxblocksCoreGameState:(TuxkidsTuxblocksCoreGameState *)gameState {
  if ((self = [super initWithTripleplayGameScreenStack:screens withTuxkidsTuxblocksCoreGameState:gameState])) {
    menu_ = [[TuxkidsTuxblocksCoreMenuSprite alloc] initWithFloat:[self width] withFloat:[TuxkidsTuxblocksCoreScreenGameScreen defaultButtonSize] * 1.2f];
    (void) [((id<PlaynCoreLayer>) nil_chk([((TuxkidsTuxblocksCoreMenuSprite *) nil_chk(menu_)) layer])) setDepthWithFloat:-1];
    [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreMenuSprite *) nil_chk(menu_)) layer]];
    controller_ = [[TuxkidsTuxblocksCoreSolveBlocksBlockController alloc] initWithTuxkidsTuxblocksCoreSolveBlocksBlockController_Parent:self withFloat:[((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCoreScreenGameScreen graphics])) width] withFloat:[self height] - [((TuxkidsTuxblocksCoreMenuSprite *) nil_chk(menu_)) height]];
    [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) layer]];
    (void) [((id<PlaynCoreLayer>) nil_chk([((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) layer])) setTyWithFloat:[((TuxkidsTuxblocksCoreMenuSprite *) nil_chk(menu_)) height]];
    eqLayer_ = [((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCoreScreenGameScreen graphics])) createImageLayer];
    [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:eqLayer_];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) setImageWithPlaynCoreImage:[((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) equationImage]];
    eqLayerOld_ = [((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCoreScreenGameScreen graphics])) createImageLayer];
    [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:eqLayerOld_];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayerOld_)) setImageWithPlaynCoreImage:[((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) equationImage]];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayerOld_)) setAlphaWithFloat:0];
    buttonImageBack_ = [((id<PlaynCoreAssets>) nil_chk([PlaynCorePlayN assets])) getImageWithNSString:[TuxkidsTuxblocksCoreConstant BUTTON_DOWN]];
    buttonImageOk_ = [((id<PlaynCoreAssets>) nil_chk([PlaynCorePlayN assets])) getImageWithNSString:[TuxkidsTuxblocksCoreConstant BUTTON_OK]];
    buttonBack_ = [self createMenuButtonWithNSString:[TuxkidsTuxblocksCoreConstant BUTTON_DOWN]];
    [((TuxkidsTuxblocksCoreButton *) nil_chk(buttonBack_)) setPositionWithFloat:[((TuxkidsTuxblocksCoreButton *) nil_chk(buttonBack_)) width] * 0.6f withFloat:[((TuxkidsTuxblocksCoreButton *) nil_chk(buttonBack_)) height] * 0.6f];
    (void) [((id<PlaynCoreLayer>) nil_chk([((TuxkidsTuxblocksCoreButton *) nil_chk(buttonBack_)) layerAddable])) setDepthWithFloat:10];
    [((TuxkidsTuxblocksCoreButton *) nil_chk(buttonBack_)) setOnReleasedListenerWithTuxkidsTuxblocksCoreButton_OnReleasedListener:[[TuxkidsTuxblocksCoreSolveSolveScreen_$1 alloc] initWithTuxkidsTuxblocksCoreSolveSolveScreen:self]];
    [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreButton *) nil_chk(buttonBack_)) layerAddable]];
    TuxkidsTuxblocksCoreButton *buttonReset = [self createMenuButtonWithNSString:[TuxkidsTuxblocksCoreConstant BUTTON_RESET]];
    [((TuxkidsTuxblocksCoreButton *) nil_chk(buttonReset)) setPositionWithFloat:[self width] - [((TuxkidsTuxblocksCoreButton *) nil_chk(buttonReset)) width] * 0.6f withFloat:[((TuxkidsTuxblocksCoreMenuSprite *) nil_chk(menu_)) height] / 2];
    [((TuxkidsTuxblocksCoreButton *) nil_chk(buttonReset)) setOnReleasedListenerWithTuxkidsTuxblocksCoreButton_OnReleasedListener:[[TuxkidsTuxblocksCoreSolveSolveScreen_$2 alloc] initWithTuxkidsTuxblocksCoreSolveSolveScreen:self]];
    [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:[((TuxkidsTuxblocksCoreButton *) nil_chk(buttonReset)) layerAddable]];
  }
  return self;
}

- (void)popThis {
  [self popThisWithTripleplayGameScreenStack_Transition:[((TripleplayGameTransSlideTransition *) nil_chk([((TripleplayGameScreenStack *) nil_chk(screens_)) slide])) up]];
}

- (void)wasAdded {
  [super wasAdded];
}

- (void)wasRemoved {
  [super wasRemoved];
  [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) clear];
}

- (void)updateWithInt:(int)delta {
  [super updateWithInt:delta];
  [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) updateWithInt:delta];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) setImageWithPlaynCoreImage:[((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) equationImage]];
  if (lastEqImage_ != [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) equationImage]) {
    (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) setAlphaWithFloat:0];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayerOld_)) setImageWithPlaynCoreImage:lastEqImage_];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayerOld_)) setTranslationWithFloat:[((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) tx] withFloat:[((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) ty]];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayerOld_)) setAlphaWithFloat:1];
    lastEqImage_ = [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) equationImage];
  }
  (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) setTranslationWithFloat:([self width] - [((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) width]) / 2 withFloat:([((TuxkidsTuxblocksCoreMenuSprite *) nil_chk(menu_)) height] - [((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) height]) / 2];
  if (solveCorrect_ && ![self entering]) {
    [((id<TuxkidsTuxblocksCoreSolveBlocksSprite_SimplifyListener>) nil_chk(solveCallback_)) wasSimplifiedWithBOOL:YES];
    solveCorrect_ = NO;
    solveCallback_ = nil;
  }
  [((TuxkidsTuxblocksCoreButton *) nil_chk(buttonBack_)) setImageWithPlaynCoreImage:[((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) solved] ? buttonImageOk_ : buttonImageBack_];
}

- (void)paintWithPlaynCoreUtilClock:(id<PlaynCoreUtilClock>)clock {
  [((TuxkidsTuxblocksCoreSolveBlocksBlockController *) nil_chk(controller_)) paintWithPlaynCoreUtilClock:clock];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) setAlphaWithFloat:[TuxkidsTuxblocksCorePlayNObject lerpTimeWithFloat:[((id<PlaynCoreImageLayer>) nil_chk(eqLayer_)) alpha] withFloat:1 withFloat:0.99f withFloat:[((id<PlaynCoreUtilClock>) nil_chk(clock)) dt] withFloat:0.01f]];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(eqLayerOld_)) setAlphaWithFloat:[TuxkidsTuxblocksCorePlayNObject lerpTimeWithFloat:[((id<PlaynCoreImageLayer>) nil_chk(eqLayerOld_)) alpha] withFloat:0 withFloat:0.99f withFloat:[((id<PlaynCoreUtilClock>) nil_chk(clock)) dt] withFloat:0.01f]];
}

- (void)showNumberSelectScreenWithTuxkidsTuxblocksCoreSolveMarkupRenderer:(TuxkidsTuxblocksCoreSolveMarkupRenderer *)problem
                                                                  withInt:(int)answer
                                                                  withInt:(int)startNumber
               withTuxkidsTuxblocksCoreSolveBlocksSprite_SimplifyListener:(id<TuxkidsTuxblocksCoreSolveBlocksSprite_SimplifyListener>)callback {
  TuxkidsTuxblocksCoreSolveNumberSelectScreen *nss = [[TuxkidsTuxblocksCoreSolveNumberSelectScreen alloc] initWithTripleplayGameScreenStack:screens_ withTuxkidsTuxblocksCoreGameState:state__ withTuxkidsTuxblocksCoreSolveMarkupRenderer:problem withInt:answer];
  [((TuxkidsTuxblocksCoreSolveNumberSelectScreen *) nil_chk(nss)) setFocusedNumberWithInt:startNumber];
  solveCallback_ = callback;
  solveCorrect_ = NO;
  [self pushScreenWithTuxkidsTuxblocksCoreScreenGameScreen:nss withTripleplayGameScreenStack_Transition:[((TripleplayGameTransSlideTransition *) nil_chk([((TripleplayGameScreenStack *) nil_chk(screens_)) slide])) left]];
}

- (void)onChildScreenFinishedWithTuxkidsTuxblocksCoreScreenGameScreen:(TuxkidsTuxblocksCoreScreenGameScreen *)screen {
  [super onChildScreenFinishedWithTuxkidsTuxblocksCoreScreenGameScreen:screen];
  if ([screen isKindOfClass:[TuxkidsTuxblocksCoreSolveNumberSelectScreen class]]) {
    if ([((TuxkidsTuxblocksCoreSolveNumberSelectScreen *) screen) hasCorrectAnswer]) {
      solveCorrect_ = YES;
    }
    else {
      [((id<TuxkidsTuxblocksCoreSolveBlocksSprite_SimplifyListener>) nil_chk(solveCallback_)) wasSimplifiedWithBOOL:NO];
    }
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreSolveSolveScreen *typedCopy = (TuxkidsTuxblocksCoreSolveSolveScreen *) copy;
  typedCopy.originalEquation = originalEquation_;
  typedCopy.controller = controller_;
  typedCopy.buttonBack = buttonBack_;
  typedCopy.buttonImageOk = buttonImageOk_;
  typedCopy.buttonImageBack = buttonImageBack_;
  typedCopy.menu = menu_;
  typedCopy.eqLayer = eqLayer_;
  typedCopy.eqLayerOld = eqLayerOld_;
  typedCopy.lastEqImage = lastEqImage_;
  typedCopy.solveCallback = solveCallback_;
  typedCopy.solveCorrect = solveCorrect_;
}

@end
@implementation TuxkidsTuxblocksCoreSolveSolveScreen_$1

@synthesize this$0 = this$0_;

- (void)onReleaseWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event
                                   withBOOL:(BOOL)inButton {
  if (inButton) [this$0_ popThis];
}

- (id)initWithTuxkidsTuxblocksCoreSolveSolveScreen:(TuxkidsTuxblocksCoreSolveSolveScreen *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreSolveSolveScreen_$1 *typedCopy = (TuxkidsTuxblocksCoreSolveSolveScreen_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation TuxkidsTuxblocksCoreSolveSolveScreen_$2

@synthesize this$0 = this$0_;

- (void)onReleaseWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event
                                   withBOOL:(BOOL)inButton {
  if (inButton) [this$0_ reset];
}

- (id)initWithTuxkidsTuxblocksCoreSolveSolveScreen:(TuxkidsTuxblocksCoreSolveSolveScreen *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreSolveSolveScreen_$2 *typedCopy = (TuxkidsTuxblocksCoreSolveSolveScreen_$2 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
