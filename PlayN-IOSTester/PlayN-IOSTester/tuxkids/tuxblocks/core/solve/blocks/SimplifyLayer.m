//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/solve/blocks/SimplifyLayer.java
//
//  Created by Thomas on 7/26/13.
//

#include "IOSClass.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "playn/core/CanvasImage.h"
#include "playn/core/Connection.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/Image.h"
#include "playn/core/ImageLayer.h"
#include "playn/core/Layer.h"
#include "playn/core/Pointer.h"
#include "tripleplay/util/Colors.h"
#include "tuxkids/tuxblocks/core/PlayNObject.h"
#include "tuxkids/tuxblocks/core/layers/LayerWrapper.h"
#include "tuxkids/tuxblocks/core/solve/blocks/ModifierBlock.h"
#include "tuxkids/tuxblocks/core/solve/blocks/SimplifyLayer.h"
#include "tuxkids/tuxblocks/core/solve/blocks/Sprite.h"
#include "tuxkids/tuxblocks/core/utils/CanvasUtils.h"

@implementation TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer

static id<PlaynCoreImage> TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_simplifyImage_;

@synthesize layer_SimplifyLayer = layer_SimplifyLayer_;
@synthesize parent = parent_;
@synthesize simplifyButtons = simplifyButtons_;
@synthesize simplifyMap = simplifyMap_;
@synthesize pairMap = pairMap_;
@synthesize simplifyListener = simplifyListener_;

+ (id<PlaynCoreImage>)simplifyImage {
  return TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_simplifyImage_;
}

+ (void)setSimplifyImage:(id<PlaynCoreImage>)simplifyImage {
  TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_simplifyImage_ = simplifyImage;
}

- (id)initWithTuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_Simplifiable:(id<TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_Simplifiable>)parent {
  if ((self = [super initWithPlaynCoreLayer:[((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) createGroupLayer]])) {
    simplifyButtons_ = [[JavaUtilArrayList alloc] init];
    simplifyMap_ = [[JavaUtilHashMap alloc] init];
    pairMap_ = [[JavaUtilHashMap alloc] init];
    simplifyListener_ = [[TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_$1 alloc] initWithTuxkidsTuxblocksCoreSolveBlocksSimplifyLayer:self];
    layer_SimplifyLayer_ = (id<PlaynCoreGroupLayer>) [self layerAddable];
    self.parent = parent;
  }
  return self;
}

- (id<PlaynCoreImageLayer>)getSimplifyButtonWithTuxkidsTuxblocksCoreSolveBlocksModifierBlock:(TuxkidsTuxblocksCoreSolveBlocksModifierBlock *)sprite {
  return [self getSimplifyButtonWithTuxkidsTuxblocksCoreSolveBlocksModifierBlock:sprite withTuxkidsTuxblocksCoreSolveBlocksModifierBlock:nil withInt:0];
}

- (id<PlaynCoreImageLayer>)getSimplifyButtonWithTuxkidsTuxblocksCoreSolveBlocksModifierBlock:(TuxkidsTuxblocksCoreSolveBlocksModifierBlock *)sprite
                                            withTuxkidsTuxblocksCoreSolveBlocksModifierBlock:(TuxkidsTuxblocksCoreSolveBlocksModifierBlock *)pair {
  return [self getSimplifyButtonWithTuxkidsTuxblocksCoreSolveBlocksModifierBlock:sprite withTuxkidsTuxblocksCoreSolveBlocksModifierBlock:pair withInt:0];
}

- (id<PlaynCoreImageLayer>)getSimplifyButtonWithTuxkidsTuxblocksCoreSolveBlocksModifierBlock:(TuxkidsTuxblocksCoreSolveBlocksModifierBlock *)sprite
                                            withTuxkidsTuxblocksCoreSolveBlocksModifierBlock:(TuxkidsTuxblocksCoreSolveBlocksModifierBlock *)pair
                                                                                     withInt:(int)depth {
  while ([((id<JavaUtilList>) nil_chk(simplifyButtons_)) size] <= [((JavaUtilHashMap *) nil_chk(simplifyMap_)) size]) {
    [self addSimplifyButton];
  }
  id<PlaynCoreImageLayer> layer = [((id<JavaUtilList>) nil_chk(simplifyButtons_)) getWithInt:[((JavaUtilHashMap *) nil_chk(simplifyMap_)) size]];
  (void) [((JavaUtilHashMap *) nil_chk(simplifyMap_)) putWithId:layer withId:sprite];
  (void) [((JavaUtilHashMap *) nil_chk(pairMap_)) putWithId:layer withId:pair];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(layer)) setVisibleWithBOOL:YES];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(layer)) setDepthWithFloat:depth];
  return layer;
}

- (void)addSimplifyButton {
  if (TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_simplifyImage_ == nil) {
    TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_simplifyImage_ = [TuxkidsTuxblocksCoreUtilsCanvasUtils createCircleWithFloat:[TuxkidsTuxblocksCoreSolveBlocksSprite modSize] / 3 withInt:[TripleplayUtilColors GRAY] withFloat:1 withInt:[TripleplayUtilColors BLACK]];
  }
  id<PlaynCoreImageLayer> simplifyButton = [((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) createImageLayerWithPlaynCoreImage:TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_simplifyImage_];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(simplifyButton)) setAlphaWithFloat:0.5f];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(simplifyButton)) setVisibleWithBOOL:NO];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(simplifyButton)) addListenerWithPlaynCorePointer_Listener:simplifyListener_];
  [TuxkidsTuxblocksCorePlayNObject centerImageLayerWithPlaynCoreImageLayer:simplifyButton];
  [((id<JavaUtilList>) nil_chk(simplifyButtons_)) addWithId:simplifyButton];
  [((id<PlaynCoreGroupLayer>) nil_chk(layer_SimplifyLayer_)) addWithPlaynCoreLayer:simplifyButton];
}

- (void)onSimplifyWithPlaynCoreLayer:(id<PlaynCoreLayer>)hit {
  TuxkidsTuxblocksCoreSolveBlocksModifierBlock *sprite = [((JavaUtilHashMap *) nil_chk(simplifyMap_)) getWithId:hit];
  if (sprite != nil) {
    TuxkidsTuxblocksCoreSolveBlocksModifierBlock *pair = [((JavaUtilHashMap *) nil_chk(pairMap_)) getWithId:hit];
    [((id<TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_Simplifiable>) nil_chk(parent_)) simplifyWithTuxkidsTuxblocksCoreSolveBlocksModifierBlock:sprite withTuxkidsTuxblocksCoreSolveBlocksModifierBlock:pair];
  }
}

- (void)update {
  {
    id<JavaUtilIterator> iter__ = [((id<JavaUtilList>) nil_chk(simplifyButtons_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
      id<PlaynCoreImageLayer> button = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
      (void) [((id<PlaynCoreImageLayer>) nil_chk(button)) setVisibleWithBOOL:NO];
    }
  }
  [((JavaUtilHashMap *) nil_chk(simplifyMap_)) clear];
  [((id<TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_Simplifiable>) nil_chk(parent_)) updateSimplify];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer *typedCopy = (TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer *) copy;
  typedCopy.layer_SimplifyLayer = layer_SimplifyLayer_;
  typedCopy.parent = parent_;
  typedCopy.simplifyButtons = simplifyButtons_;
  typedCopy.simplifyMap = simplifyMap_;
  typedCopy.pairMap = pairMap_;
  typedCopy.simplifyListener = simplifyListener_;
}

@end
@implementation TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_$1

@synthesize this$0 = this$0_;

- (void)onPointerStartWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event {
  [this$0_ onSimplifyWithPlaynCoreLayer:[((id<PlaynCorePointer_Event>) nil_chk(event)) hit]];
}

- (void)onPointerEndWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event {
}

- (void)onPointerDragWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event {
}

- (void)onPointerCancelWithPlaynCorePointer_Event:(id<PlaynCorePointer_Event>)event {
}

- (id)initWithTuxkidsTuxblocksCoreSolveBlocksSimplifyLayer:(TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_$1 *typedCopy = (TuxkidsTuxblocksCoreSolveBlocksSimplifyLayer_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
