//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/solve/blocks/layer/BlockLayer.java
//
//  Created by Thomas on 7/26/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "playn/core/CanvasImage.h"
#include "playn/core/Font.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/Image.h"
#include "playn/core/ImageLayer.h"
#include "playn/core/Layer.h"
#include "playn/core/Pointer.h"
#include "playn/core/TextFormat.h"
#include "tripleplay/util/Colors.h"
#include "tuxkids/tuxblocks/core/Constant.h"
#include "tuxkids/tuxblocks/core/PlayNObject.h"
#include "tuxkids/tuxblocks/core/layers/ImageLayerLike.h"
#include "tuxkids/tuxblocks/core/layers/ImageLayerTintable.h"
#include "tuxkids/tuxblocks/core/solve/blocks/layer/BlockLayer.h"
#include "tuxkids/tuxblocks/core/utils/CanvasUtils.h"

@implementation TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer

static PlaynCoreTextFormat * TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer_textFormat_;

@synthesize layer_BlockLayer = layer_BlockLayer_;
@synthesize centerLayer = centerLayer_;
@synthesize textLayer = textLayer_;
@synthesize borderLayers = borderLayers_;
@synthesize width_ = width__;
@synthesize height_ = height__;
@synthesize text = text_;
@synthesize borderWidth = borderWidth_;

+ (PlaynCoreTextFormat *)textFormat {
  return TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer_textFormat_;
}

+ (void)setTextFormat:(PlaynCoreTextFormat *)textFormat {
  TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer_textFormat_ = textFormat;
}

- (float)width {
  return width__;
}

- (float)height {
  return height__;
}

- (void)setSizeWithFloat:(float)width
               withFloat:(float)height {
  self.width_ = width;
  self.height_ = height;
  [self updateSize];
}

- (void)setWidthWithFloat:(float)width {
  self.width_ = width;
  [self updateSize];
}

- (void)setHeightWithFloat:(float)height {
  self.height_ = height;
  [self updateSize];
}

- (void)setTintWithInt:(int)tint {
  [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk(centerLayer_)) setTintWithInt:tint];
}

- (void)setTintWithInt:(int)baseColor
               withInt:(int)tintColor
             withFloat:(float)perc {
  [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk(centerLayer_)) setTintWithInt:baseColor withInt:tintColor withFloat:perc];
}

- (void)setTextWithNSString:(NSString *)text {
  self.text = text;
  [self refreshTextLayer];
}

- (id)initWithNSString:(NSString *)text
             withFloat:(float)width
             withFloat:(float)height {
  if ((self = [super initWithPlaynCoreLayer:[((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) createGroupLayer]])) {
    borderWidth_ = 1;
    layer_BlockLayer_ = (id<PlaynCoreGroupLayer>) [super layerAddable];
    self.text = text;
    [self createLayers];
    [self setSizeWithFloat:width withFloat:height];
  }
  return self;
}

- (void)createLayers {
  if (TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer_textFormat_ == nil) {
    id<PlaynCoreFont> font = [((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) createFontWithNSString:[TuxkidsTuxblocksCoreConstant FONT_NAME] withPlaynCoreFont_StyleEnum:[PlaynCoreFont_StyleEnum PLAIN] withFloat:20];
    TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer_textFormat_ = [((PlaynCoreTextFormat *) [[PlaynCoreTextFormat alloc] init]) withFontWithPlaynCoreFont:font];
  }
  [self refreshTextLayer];
  [self createBorderLayers];
  centerLayer_ = [[TuxkidsTuxblocksCoreLayersImageLayerTintable alloc] initWithPlaynCoreImage:[TuxkidsTuxblocksCoreUtilsCanvasUtils createRectWithFloat:1 withFloat:1 withInt:[TripleplayUtilColors WHITE]]];
  (void) [((id<PlaynCoreLayer>) nil_chk([((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk(centerLayer_)) layerAddable])) setDepthWithFloat:-1];
  [((id<PlaynCoreGroupLayer>) nil_chk(layer_BlockLayer_)) addWithPlaynCoreLayer:[((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk(centerLayer_)) layerAddable]];
}

- (void)createBorderLayers {
  id<PlaynCoreImage> borderImage = [TuxkidsTuxblocksCoreUtilsCanvasUtils createRectWithFloat:1 withFloat:1 withInt:[TripleplayUtilColors BLACK]];
  borderLayers_ = [IOSObjectArray arrayWithLength:4 type:[IOSClass classWithProtocol:@protocol(PlaynCoreImageLayer)]];
  for (int i = 0; i < 4; i++) {
    (void) [((IOSObjectArray *) nil_chk(borderLayers_)) replaceObjectAtIndex:i withObject:[((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) createImageLayerWithPlaynCoreImage:borderImage]];
    [((id<PlaynCoreGroupLayer>) nil_chk(layer_BlockLayer_)) addWithPlaynCoreLayer:[((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:i]];
  }
}

- (void)refreshTextLayer {
  if (textLayer_ != nil) [textLayer_ destroy];
  textLayer_ = [((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) createImageLayerWithPlaynCoreImage:[TuxkidsTuxblocksCoreUtilsCanvasUtils createStringWithPlaynCoreTextFormat:TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer_textFormat_ withNSString:text_ withInt:[TripleplayUtilColors BLACK]]];
  [TuxkidsTuxblocksCorePlayNObject centerImageLayerWithPlaynCoreImageLayer:textLayer_];
  (void) [((id<PlaynCoreImageLayer>) nil_chk(textLayer_)) setDepthWithFloat:1];
  [((id<PlaynCoreGroupLayer>) nil_chk(layer_BlockLayer_)) addWithPlaynCoreLayer:textLayer_];
}

- (void)updateSize {
  (void) [((id<PlaynCoreImageLayer>) nil_chk(textLayer_)) setTranslationWithFloat:width__ / 2 withFloat:height__ / 2];
  [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk(centerLayer_)) setTranslationWithFloat:0 withFloat:0];
  [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk(centerLayer_)) setSizeWithFloat:width__ withFloat:height__];
  (void) [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:0])) setTranslationWithFloat:0 withFloat:0];
  [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:0])) setSizeWithFloat:width__ - borderWidth_ withFloat:borderWidth_];
  (void) [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:1])) setTranslationWithFloat:width__ - borderWidth_ withFloat:0];
  [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:1])) setSizeWithFloat:borderWidth_ withFloat:height__ - borderWidth_];
  (void) [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:2])) setTranslationWithFloat:borderWidth_ withFloat:height__ - borderWidth_];
  [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:2])) setSizeWithFloat:width__ - borderWidth_ withFloat:borderWidth_];
  (void) [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:3])) setTranslationWithFloat:0 withFloat:borderWidth_];
  [((id<PlaynCoreImageLayer>) nil_chk([((IOSObjectArray *) nil_chk(borderLayers_)) objectAtIndex:3])) setSizeWithFloat:borderWidth_ withFloat:height__ - borderWidth_];
}

- (void)addListenerWithPlaynCorePointer_Listener:(id<PlaynCorePointer_Listener>)pointerListener {
  [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk(centerLayer_)) addListenerWithPlaynCorePointer_Listener:pointerListener];
}

- (void)setInteractiveWithBOOL:(BOOL)interactive {
  [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk(centerLayer_)) setInteractiveWithBOOL:interactive];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer *typedCopy = (TuxkidsTuxblocksCoreSolveBlocksLayerBlockLayer *) copy;
  typedCopy.layer_BlockLayer = layer_BlockLayer_;
  typedCopy.centerLayer = centerLayer_;
  typedCopy.textLayer = textLayer_;
  typedCopy.borderLayers = borderLayers_;
  typedCopy.width_ = width__;
  typedCopy.height_ = height__;
  typedCopy.text = text_;
  typedCopy.borderWidth = borderWidth_;
}

@end
