//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/solve/blocks/ModifierBlock.java
//
//  Created by Thomas on 7/25/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Integer.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/ImageLayer.h"
#include "playn/core/Layer.h"
#include "tuxkids/tuxblocks/core/solve/blocks/Block.h"
#include "tuxkids/tuxblocks/core/solve/blocks/ModifierBlock.h"
#include "tuxkids/tuxblocks/core/solve/expression/ModificationOperation.h"
#include "tuxkids/tuxblocks/core/utils/Formatter.h"

@implementation TuxkidsTuxblocksCoreSolveBlocksModifierBlock

@synthesize modifier = modifier_;
@synthesize inverseModifier = inverseModifier_;
@synthesize isInverted_ = isInverted__;
@synthesize inverseSprite = inverseSprite_;

- (TuxkidsTuxblocksCoreSolveExpressionModificationOperation *)getModifier {
  return isInverted__ ? inverseModifier_ : modifier_;
}

- (TuxkidsTuxblocksCoreSolveExpressionModificationOperation *)getOriginalModifier {
  return modifier_;
}

- (id<PlaynCoreImageLayer>)layer {
  return isInverted__ ? inverseSprite_ : layer__;
}

- (BOOL)isInverted {
  return isInverted__;
}

- (void)setInvertedWithBOOL:(BOOL)inverted {
  if (isInverted__ != inverted) {
    [self invert];
  }
}

- (id)initWithTuxkidsTuxblocksCoreSolveExpressionModificationOperation:(TuxkidsTuxblocksCoreSolveExpressionModificationOperation *)op
                                                               withInt:(int)width
                                                               withInt:(int)height {
  if ((self = [super init])) {
    self.modifier = op;
    inverseModifier_ = [((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(op)) getInverse];
    layer__ = [self generateSpriteWithInt:width withInt:height withNSString:[TuxkidsTuxblocksCoreUtilsFormatter formatWithNSString:@"%s%d" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(op)) getSymbol], [JavaLangInteger valueOfWithInt:[((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(op)) getValue]] } count:2 type:[IOSClass classWithClass:[NSObject class]]]] withInt:[((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(op)) getColor]];
    inverseSprite_ = [self generateSpriteWithInt:width withInt:height withNSString:[TuxkidsTuxblocksCoreUtilsFormatter formatWithNSString:@"%s%d" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(inverseModifier_)) getSymbol], [JavaLangInteger valueOfWithInt:[((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(inverseModifier_)) getValue]] } count:2 type:[IOSClass classWithClass:[NSObject class]]]] withInt:[((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(inverseModifier_)) getColor]];
  }
  return self;
}

- (void)invert {
  isInverted__ = !isInverted__;
  if (isInverted__) {
    [((id<PlaynCoreGroupLayer>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer__)) parent])) addWithPlaynCoreLayer:inverseSprite_];
    [((id<PlaynCoreGroupLayer>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(layer__)) parent])) removeWithPlaynCoreLayer:layer__];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(inverseSprite_)) setTranslationWithFloat:[((id<PlaynCoreImageLayer>) nil_chk(layer__)) tx] withFloat:[((id<PlaynCoreImageLayer>) nil_chk(layer__)) ty]];
  }
  else {
    [((id<PlaynCoreGroupLayer>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(inverseSprite_)) parent])) addWithPlaynCoreLayer:layer__];
    [((id<PlaynCoreGroupLayer>) nil_chk([((id<PlaynCoreImageLayer>) nil_chk(inverseSprite_)) parent])) removeWithPlaynCoreLayer:inverseSprite_];
    (void) [((id<PlaynCoreImageLayer>) nil_chk(layer__)) setTranslationWithFloat:[((id<PlaynCoreImageLayer>) nil_chk(inverseSprite_)) tx] withFloat:[((id<PlaynCoreImageLayer>) nil_chk(inverseSprite_)) ty]];
  }
}

- (NSString *)description {
  return [TuxkidsTuxblocksCoreUtilsFormatter formatWithNSString:@"%s%d" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(modifier_)) getSymbol], [JavaLangInteger valueOfWithInt:[((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(modifier_)) getValue]] } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (int)getColor {
  return [((TuxkidsTuxblocksCoreSolveExpressionModificationOperation *) nil_chk(modifier_)) getColor];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreSolveBlocksModifierBlock *typedCopy = (TuxkidsTuxblocksCoreSolveBlocksModifierBlock *) copy;
  typedCopy.modifier = modifier_;
  typedCopy.inverseModifier = inverseModifier_;
  typedCopy.isInverted_ = isInverted__;
  typedCopy.inverseSprite = inverseSprite_;
}

@end
