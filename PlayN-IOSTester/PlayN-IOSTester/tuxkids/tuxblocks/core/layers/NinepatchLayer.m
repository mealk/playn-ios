//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/layers/NinepatchLayer.java
//
//  Created by Thomas on 7/26/13.
//

#include "IOSBooleanArray.h"
#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "java/lang/Integer.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "playn/core/Graphics.h"
#include "playn/core/GroupLayer.h"
#include "playn/core/Image.h"
#include "playn/core/Layer.h"
#include "playn/core/Pointer.h"
#include "playn/core/gl/GLContext.h"
#include "tripleplay/util/Colors.h"
#include "tuxkids/tuxblocks/core/PlayNObject.h"
#include "tuxkids/tuxblocks/core/layers/ImageLayerLike.h"
#include "tuxkids/tuxblocks/core/layers/NinepatchLayer.h"

@implementation TuxkidsTuxblocksCoreLayersNinepatchLayer

@synthesize factory = factory_;
@synthesize layer = layer_;
@synthesize imageLayers = imageLayers_;
@synthesize touchDisabled = touchDisabled_;
@synthesize widthDims = widthDims_;
@synthesize heightDims = heightDims_;
@synthesize imageWidth = imageWidth_;
@synthesize imageHeight = imageHeight_;
@synthesize width_ = width__;
@synthesize height_ = height__;

- (id<PlaynCoreGroupLayer>)parent {
  return [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) parent];
}

- (float)tx {
  return [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) tx];
}

- (float)ty {
  return [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) ty];
}

- (float)width {
  return width__;
}

- (float)height {
  return height__;
}

- (float)depth {
  return [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) depth];
}

- (id<PlaynCoreLayer>)layerAddable {
  return layer_;
}

- (void)setDepthWithFloat:(float)depth {
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) setDepthWithFloat:depth];
}

- (void)setSizeWithFloat:(float)width
               withFloat:(float)height {
  self.width_ = width;
  self.height_ = height;
  [self onSizeChanged];
}

- (void)setWidthWithFloat:(float)width {
  [self setSizeWithFloat:width withFloat:height__];
}

- (void)setHeightWithFloat:(float)height {
  [self setSizeWithFloat:width__ withFloat:height];
}

- (void)setTranslationWithFloat:(float)x
                      withFloat:(float)y {
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) setTranslationWithFloat:x withFloat:y];
}

- (void)setVisibleWithBOOL:(BOOL)visible {
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) setVisibleWithBOOL:visible];
}

- (void)setTouchEnabledWithInt:(int)row
                       withInt:(int)col
                      withBOOL:(BOOL)enabled {
  if ([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:row])) objectAtIndex:col] != nil) {
    [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:row])) objectAtIndex:col])) setInteractiveWithBOOL:enabled];
  }
  (*[((IOSBooleanArray *) nil_chk([((IOSObjectArray *) nil_chk(touchDisabled_)) objectAtIndex:row])) booleanRefAtIndex:col]) = !enabled;
}

- (id)initWithTuxkidsTuxblocksCoreLayersImageLayerLike_Factory:(id<TuxkidsTuxblocksCoreLayersImageLayerLike_Factory>)factory
                                            withPlaynCoreImage:(id<PlaynCoreImage>)image {
  return [self initTuxkidsTuxblocksCoreLayersNinepatchLayerWithTuxkidsTuxblocksCoreLayersImageLayerLike_Factory:factory withPlaynCoreImage:image withIntArray:nil withIntArray:nil];
}

- (id)initTuxkidsTuxblocksCoreLayersNinepatchLayerWithTuxkidsTuxblocksCoreLayersImageLayerLike_Factory:(id<TuxkidsTuxblocksCoreLayersImageLayerLike_Factory>)factory
                                                                                    withPlaynCoreImage:(id<PlaynCoreImage>)image
                                                                                          withIntArray:(IOSIntArray *)widthDims
                                                                                          withIntArray:(IOSIntArray *)heightDims {
  if ((self = [super init])) {
    self.factory = factory;
    layer_ = [((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) createGroupLayer];
    [((id<PlaynCoreImage>) nil_chk(image)) addCallbackWithPlaynCoreUtilCallback:[[TuxkidsTuxblocksCoreLayersNinepatchLayer_$1 alloc] initWithTuxkidsTuxblocksCoreLayersNinepatchLayer:self withIntArray:widthDims withIntArray:heightDims]];
  }
  return self;
}

- (id)initWithTuxkidsTuxblocksCoreLayersImageLayerLike_Factory:(id<TuxkidsTuxblocksCoreLayersImageLayerLike_Factory>)factory
                                            withPlaynCoreImage:(id<PlaynCoreImage>)image
                                                  withIntArray:(IOSIntArray *)widthDims
                                                  withIntArray:(IOSIntArray *)heightDims {
  return [self initTuxkidsTuxblocksCoreLayersNinepatchLayerWithTuxkidsTuxblocksCoreLayersImageLayerLike_Factory:factory withPlaynCoreImage:image withIntArray:widthDims withIntArray:heightDims];
}

- (void)destroy {
  [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) destroy];
}

- (void)load__WithPlaynCoreImage:(id<PlaynCoreImage>)image
                    withIntArray:(IOSIntArray *)widthDims
                    withIntArray:(IOSIntArray *)heightDims {
  imageWidth_ = (int) [((id<PlaynCoreImage>) nil_chk(image)) width];
  imageHeight_ = (int) [((id<PlaynCoreImage>) nil_chk(image)) height];
  int xOffset = 0, yOffset = 0;
  if (widthDims == nil || heightDims == nil) {
    imageWidth_ -= 2;
    imageHeight_ -= 2;
    IOSIntArray *topPixels = [IOSIntArray arrayWithLength:imageWidth_];
    [((id<PlaynCoreImage>) nil_chk(image)) getRgbWithInt:1 withInt:0 withInt:imageWidth_ withInt:1 withIntArray:topPixels withInt:0 withInt:imageWidth_];
    IOSIntArray *sidePixels = [IOSIntArray arrayWithLength:imageHeight_];
    [((id<PlaynCoreImage>) nil_chk(image)) getRgbWithInt:0 withInt:1 withInt:1 withInt:imageHeight_ withIntArray:sidePixels withInt:0 withInt:1];
    widthDims = [self getDimsWithIntArray:topPixels];
    heightDims = [self getDimsWithIntArray:sidePixels];
    xOffset = yOffset = 1;
  }
  self.widthDims = widthDims;
  self.heightDims = heightDims;
  imageLayers_ = [IOSObjectArray arrayWithDimensions:2 lengths:(int[]){ (int) [((IOSIntArray *) nil_chk(heightDims)) count], (int) [((IOSIntArray *) nil_chk(widthDims)) count] } type:[IOSClass classWithProtocol:@protocol(TuxkidsTuxblocksCoreLayersImageLayerLike)]];
  touchDisabled_ = [IOSBooleanArray arrayWithDimensions:2 lengths:(int[]){ (int) [((IOSIntArray *) nil_chk(heightDims)) count], (int) [((IOSIntArray *) nil_chk(widthDims)) count] }];
  int y = 0;
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(heightDims)) count]; i++) {
    int x = 0;
    for (int j = 0; j < (int) [((IOSIntArray *) nil_chk(widthDims)) count]; j++) {
      if ([((IOSIntArray *) nil_chk(widthDims)) intAtIndex:j] > 0 && [((IOSIntArray *) nil_chk(heightDims)) intAtIndex:i] > 0) {
        id<PlaynCoreImage> subImage = [((id<PlaynCoreImage>) nil_chk(image)) subImageWithFloat:x + xOffset withFloat:y + yOffset withFloat:[((IOSIntArray *) nil_chk(widthDims)) intAtIndex:j] withFloat:[((IOSIntArray *) nil_chk(heightDims)) intAtIndex:i]];
        (void) [((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) replaceObjectAtIndex:j withObject:[((id<TuxkidsTuxblocksCoreLayersImageLayerLike_Factory>) nil_chk(factory_)) createWithPlaynCoreImage:subImage]];
        [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) addWithPlaynCoreLayer:[((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) layerAddable]];
      }
      x += [((IOSIntArray *) nil_chk(widthDims)) intAtIndex:j];
    }
    y += [((IOSIntArray *) nil_chk(heightDims)) intAtIndex:i];
  }
  if (width__ == 0 || height__ == 0) {
    [self setSizeWithFloat:imageWidth_ withFloat:imageHeight_];
  }
  else {
    [self onSizeChanged];
  }
}

- (void)onSizeChanged {
  float w = 0, h = 0;
  float x = 0, y = 0;
  if (imageLayers_ == nil) return;
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(heightDims_)) count]; i++) {
    float yPlus = 0;
    for (int j = 0; j < (int) [((IOSIntArray *) nil_chk(widthDims_)) count]; j++) {
      if ([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j] == nil) continue;
      float width = [self getLengthWithInt:j withFloat:self.width_ withIntArray:widthDims_];
      float height = [self getLengthWithInt:i withFloat:self.height_ withIntArray:heightDims_];
      [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) setTranslationWithFloat:x withFloat:y];
      if (width > 0 && height > 0) {
        float displayWidth = width, displayHeight = height;
        if ([((id<PlaynCoreGraphics>) nil_chk([TuxkidsTuxblocksCorePlayNObject graphics])) ctx] == nil) {
          displayHeight += 0.5f;
          displayWidth += 0.5f;
        }
        [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) setSizeWithFloat:displayWidth withFloat:displayHeight];
        [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) setVisibleWithBOOL:YES];
        w = x + width;
        h = y + height;
        x += width;
        yPlus = height;
      }
      else {
        [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) setVisibleWithBOOL:NO];
      }
    }
    y += yPlus;
    x = 0;
  }
  float scaleX = width__ / w;
  float scaleY = height__ / h;
  (void) [((id<PlaynCoreGroupLayer>) nil_chk(layer_)) setScaleWithFloat:scaleX withFloat:scaleY];
}

- (float)getLengthWithInt:(int)index
                withFloat:(float)total
             withIntArray:(IOSIntArray *)dims {
  if (index % 2 == 1) {
    float d = total;
    for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(dims)) count]; i += 2) d -= [((IOSIntArray *) nil_chk(dims)) intAtIndex:i];
    return d / ((int) [((IOSIntArray *) nil_chk(dims)) count] / 2);
  }
  return [((IOSIntArray *) nil_chk(dims)) intAtIndex:index];
}

- (IOSIntArray *)getDimsWithIntArray:(IOSIntArray *)pixels {
  int black = [TripleplayUtilColors BLACK];
  JavaUtilArrayList *dims = [[JavaUtilArrayList alloc] init];
  int current = 0;
  BOOL stretching = NO;
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(pixels)) count]; i++) {
    BOOL isBlack = [((IOSIntArray *) nil_chk(pixels)) intAtIndex:i] == black;
    if (stretching != isBlack) {
      [((JavaUtilArrayList *) nil_chk(dims)) addWithId:[JavaLangInteger valueOfWithInt:current]];
      current = 0;
    }
    stretching = isBlack;
    current++;
  }
  [((JavaUtilArrayList *) nil_chk(dims)) addWithId:[JavaLangInteger valueOfWithInt:current]];
  IOSIntArray *dimsArray = [IOSIntArray arrayWithLength:[((JavaUtilArrayList *) nil_chk(dims)) size]];
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(dimsArray)) count]; i++) (*[((IOSIntArray *) nil_chk(dimsArray)) intRefAtIndex:i]) = [((JavaLangInteger *) nil_chk([((JavaUtilArrayList *) nil_chk(dims)) getWithInt:i])) intValue];
  return dimsArray;
}

- (void)setTintWithInt:(int)tint {
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(heightDims_)) count]; i++) {
    for (int j = 0; j < (int) [((IOSIntArray *) nil_chk(widthDims_)) count]; j++) {
      if ([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j] != nil) {
        [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) setTintWithInt:tint];
      }
    }
  }
}

- (void)setTintWithInt:(int)baseColor
               withInt:(int)tintColor
             withFloat:(float)perc {
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(heightDims_)) count]; i++) {
    for (int j = 0; j < (int) [((IOSIntArray *) nil_chk(widthDims_)) count]; j++) {
      if ([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j] != nil) {
        [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) setTintWithInt:baseColor withInt:tintColor withFloat:perc];
      }
    }
  }
}

- (void)addListenerWithPlaynCorePointer_Listener:(id<PlaynCorePointer_Listener>)pointerListener {
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(heightDims_)) count]; i++) {
    for (int j = 0; j < (int) [((IOSIntArray *) nil_chk(widthDims_)) count]; j++) {
      if ([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j] != nil && ![((IOSBooleanArray *) nil_chk([((IOSObjectArray *) nil_chk(touchDisabled_)) objectAtIndex:i])) booleanAtIndex:j]) {
        [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) addListenerWithPlaynCorePointer_Listener:pointerListener];
      }
    }
  }
}

- (void)setInteractiveWithBOOL:(BOOL)interactive {
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(heightDims_)) count]; i++) {
    for (int j = 0; j < (int) [((IOSIntArray *) nil_chk(widthDims_)) count]; j++) {
      if ([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j] != nil) {
        [((id<TuxkidsTuxblocksCoreLayersImageLayerLike>) nil_chk([((IOSObjectArray *) nil_chk([((IOSObjectArray *) nil_chk(imageLayers_)) objectAtIndex:i])) objectAtIndex:j])) setInteractiveWithBOOL:interactive];
      }
    }
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreLayersNinepatchLayer *typedCopy = (TuxkidsTuxblocksCoreLayersNinepatchLayer *) copy;
  typedCopy.factory = factory_;
  typedCopy.layer = layer_;
  typedCopy.imageLayers = imageLayers_;
  typedCopy.touchDisabled = touchDisabled_;
  typedCopy.widthDims = widthDims_;
  typedCopy.heightDims = heightDims_;
  typedCopy.imageWidth = imageWidth_;
  typedCopy.imageHeight = imageHeight_;
  typedCopy.width_ = width__;
  typedCopy.height_ = height__;
}

@end
@implementation TuxkidsTuxblocksCoreLayersNinepatchLayer_$1

@synthesize this$0 = this$0_;
@synthesize val$widthDims = val$widthDims_;
@synthesize val$heightDims = val$heightDims_;

- (void)onSuccessWithId:(id<PlaynCoreImage>)result {
  [this$0_ load__WithPlaynCoreImage:result withIntArray:val$widthDims_ withIntArray:val$heightDims_];
}

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)cause {
  [((JavaLangThrowable *) nil_chk(cause)) printStackTrace];
}

- (id)initWithTuxkidsTuxblocksCoreLayersNinepatchLayer:(TuxkidsTuxblocksCoreLayersNinepatchLayer *)outer$
                                          withIntArray:(IOSIntArray *)capture$0
                                          withIntArray:(IOSIntArray *)capture$1 {
  if ((self = [super init])) {
    this$0_ = outer$;
    val$widthDims_ = capture$0;
    val$heightDims_ = capture$1;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TuxkidsTuxblocksCoreLayersNinepatchLayer_$1 *typedCopy = (TuxkidsTuxblocksCoreLayersNinepatchLayer_$1 *) copy;
  typedCopy.this$0 = this$0_;
  typedCopy.val$widthDims = val$widthDims_;
  typedCopy.val$heightDims = val$heightDims_;
}

@end
