//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/GameState.java
//
//  Created by Thomas on 7/26/13.
//

#ifndef _TuxkidsTuxblocksCoreGameState_H_
#define _TuxkidsTuxblocksCoreGameState_H_

@class IOSIntArray;
@class IOSObjectArray;
@class TuxkidsTuxblocksCoreDefenseRoundReward;
@class TuxkidsTuxblocksCoreDefenseSelectProblem;
@class TuxkidsTuxblocksCoreDefenseTowerTowerTypeEnum;
@class TuxkidsTuxblocksCoreGameBackgroundSprite;
@protocol JavaUtilList;
@protocol TuxkidsTuxblocksCoreGameState_InventoryChangedListener;
@protocol TuxkidsTuxblocksCoreGameState_ProblemAddedListener;

#import "JreEmulation.h"

@interface TuxkidsTuxblocksCoreGameState : NSObject {
 @public
  IOSIntArray *towerCounts__;
  id<JavaUtilList> problems__;
  TuxkidsTuxblocksCoreGameBackgroundSprite *background__;
  id<TuxkidsTuxblocksCoreGameState_InventoryChangedListener> inventoryChangedListener_;
  id<TuxkidsTuxblocksCoreGameState_ProblemAddedListener> problemAddedListener_;
  int maxSteps_;
  int minSteps_;
  int index_;
  IOSObjectArray *eqs_;
}

@property (nonatomic, strong) IOSIntArray *towerCounts_;
@property (nonatomic, strong) id<JavaUtilList> problems_;
@property (nonatomic, strong) TuxkidsTuxblocksCoreGameBackgroundSprite *background_;
@property (nonatomic, strong) id<TuxkidsTuxblocksCoreGameState_InventoryChangedListener> inventoryChangedListener;
@property (nonatomic, strong) id<TuxkidsTuxblocksCoreGameState_ProblemAddedListener> problemAddedListener;
@property (nonatomic, assign) int maxSteps;
@property (nonatomic, assign) int minSteps;
@property (nonatomic, assign) int index;
@property (nonatomic, strong) IOSObjectArray *eqs;

- (IOSIntArray *)towerCounts;
- (id<JavaUtilList>)problems;
- (TuxkidsTuxblocksCoreGameBackgroundSprite *)background;
- (int)themeColor;
- (void)newThemeColor OBJC_METHOD_FAMILY_NONE;
- (void)setInventoryChangedListenerWithTuxkidsTuxblocksCoreGameState_InventoryChangedListener:(id<TuxkidsTuxblocksCoreGameState_InventoryChangedListener>)inventoryChangedListener;
- (void)setProblemAddedListenerWithTuxkidsTuxblocksCoreGameState_ProblemAddedListener:(id<TuxkidsTuxblocksCoreGameState_ProblemAddedListener>)problemAddedListener;
- (id)init;
- (void)solveProblemWithTuxkidsTuxblocksCoreDefenseSelectProblem:(TuxkidsTuxblocksCoreDefenseSelectProblem *)problem;
- (void)addRewardWithTuxkidsTuxblocksCoreDefenseRoundReward:(TuxkidsTuxblocksCoreDefenseRoundReward *)reward;
- (void)addProblemWithRewardWithTuxkidsTuxblocksCoreDefenseRoundReward:(TuxkidsTuxblocksCoreDefenseRoundReward *)reward;
- (void)addItemWithTuxkidsTuxblocksCoreDefenseTowerTowerTypeEnum:(TuxkidsTuxblocksCoreDefenseTowerTowerTypeEnum *)type
                                                         withInt:(int)count;
- (void)onInventoryChangedWithInt:(int)index;
@end

@protocol TuxkidsTuxblocksCoreGameState_InventoryChangedListener < NSObject, JavaObject >
- (void)onInventoryChangedWithInt:(int)index
                          withInt:(int)count;
@end

@protocol TuxkidsTuxblocksCoreGameState_ProblemAddedListener < NSObject, JavaObject >
- (void)onProblemAddedWithTuxkidsTuxblocksCoreDefenseSelectProblem:(TuxkidsTuxblocksCoreDefenseSelectProblem *)problem;
@end

#endif // _TuxkidsTuxblocksCoreGameState_H_
