//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java/tuxkids/tuxblocks/core/effect/MissileExplosion.java
//
//  Created by Thomas on 7/26/13.
//

#include "java/util/List.h"
#include "java/util/Random.h"
#include "playn/core/CanvasImage.h"
#include "playn/core/ImmediateLayer.h"
#include "playn/core/Layer.h"
#include "pythagoras/f/Vector.h"
#include "tripleplay/particle/Effector.h"
#include "tripleplay/particle/Emitter.h"
#include "tripleplay/particle/Generator.h"
#include "tripleplay/particle/Initializer.h"
#include "tripleplay/particle/effect/Alpha.h"
#include "tripleplay/particle/effect/Move.h"
#include "tripleplay/particle/init/Angle.h"
#include "tripleplay/particle/init/Color.h"
#include "tripleplay/particle/init/Lifespan.h"
#include "tripleplay/particle/init/TuxTransform.h"
#include "tripleplay/particle/init/TuxVelocity.h"
#include "tripleplay/util/Colors.h"
#include "tripleplay/util/Interpolator.h"
#include "tripleplay/util/Randoms.h"
#include "tuxkids/tuxblocks/core/defense/Grid.h"
#include "tuxkids/tuxblocks/core/effect/MissileExplosion.h"
#include "tuxkids/tuxblocks/core/utils/CanvasUtils.h"

@implementation TuxkidsTuxblocksCoreEffectMissileExplosion

- (id)initWithTuxkidsTuxblocksCoreDefenseGrid:(TuxkidsTuxblocksCoreDefenseGrid *)grid
                        withPythagorasFVector:(PythagorasFVector *)position {
  if ((self = [super init])) {
    int p = 30;
    TripleplayParticleEmitter *emitter = [((TuxkidsTuxblocksCoreDefenseGrid *) nil_chk(grid)) createEmitterWithInt:p withPlaynCoreImage:[TuxkidsTuxblocksCoreUtilsCanvasUtils createCircleWithFloat:2 withInt:[((TuxkidsTuxblocksCoreDefenseGrid *) nil_chk(grid)) towerColor]]];
    ((TripleplayParticleEmitter *) nil_chk(emitter)).generator = [TripleplayParticleGenerator impulseWithInt:p];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitLifespan constantWithFloat:1]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitColor constantWithInt:[TripleplayUtilColors WHITE]]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitTuxTransform layerWithPlaynCoreLayer:((TripleplayParticleEmitter *) nil_chk(emitter)).layer]];
    TripleplayUtilRandoms *rando = [TripleplayUtilRandoms withWithJavaUtilRandom:[[JavaUtilRandom alloc] init]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitTuxVelocity randomCircleWithTripleplayUtilRandoms:rando withFloat:50]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).effectors)) addWithId:[[TripleplayParticleEffectMove alloc] init]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).effectors)) addWithId:[TripleplayParticleEffectAlpha byAgeWithTripleplayUtilInterpolator:[TripleplayUtilInterpolator EASE_OUT] withFloat:1 withFloat:0]];
    [((TripleplayParticleEmitter *) nil_chk(emitter)) destroyOnEmpty];
    (void) [((id<PlaynCoreImmediateLayer>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).layer)) setTranslationWithFloat:((PythagorasFVector *) nil_chk(position)).x_ withFloat:((PythagorasFVector *) nil_chk(position)).y_];
    emitter = [((TuxkidsTuxblocksCoreDefenseGrid *) nil_chk(grid)) createEmitterWithInt:10 withPlaynCoreImage:[TuxkidsTuxblocksCoreUtilsCanvasUtils createRectWithFloat:5 withFloat:1 withInt:[TripleplayUtilColors WHITE]]];
    ((TripleplayParticleEmitter *) nil_chk(emitter)).generator = [TripleplayParticleGenerator impulseWithInt:10];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitLifespan constantWithFloat:1]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitColor constantWithInt:[TripleplayUtilColors BLACK]]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitTuxTransform layerWithPlaynCoreLayer:((TripleplayParticleEmitter *) nil_chk(emitter)).layer]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitTuxVelocity randomCircleWithTripleplayUtilRandoms:rando withFloat:50 withFloat:50]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).initters)) addWithId:[TripleplayParticleInitAngle byVelocity]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).effectors)) addWithId:[[TripleplayParticleEffectMove alloc] init]];
    [((id<JavaUtilList>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).effectors)) addWithId:[TripleplayParticleEffectAlpha byAgeWithTripleplayUtilInterpolator:[TripleplayUtilInterpolator EASE_OUT] withFloat:1 withFloat:0]];
    [((TripleplayParticleEmitter *) nil_chk(emitter)) destroyOnEmpty];
    (void) [((id<PlaynCoreImmediateLayer>) nil_chk(((TripleplayParticleEmitter *) nil_chk(emitter)).layer)) setTranslationWithFloat:((PythagorasFVector *) nil_chk(position)).x_ withFloat:((PythagorasFVector *) nil_chk(position)).y_];
  }
  return self;
}

@end
